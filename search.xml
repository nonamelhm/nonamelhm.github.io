<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTML5新增标签</title>
    <url>/2020/09/22/HTML5%E6%96%B0%E5%A2%9E%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="图形相关"><a class="anchor" href="#图形相关">#</a> 图形相关</h1>
<ul>
<li>canvas: 相当于一块画布，可以让开发者利用相关 API 实现自由画图</li>
<li>picture: 定义一组图片用于不同分辨率下显示</li>
<li>svg: 能够绘制矢量图</li>
</ul>
<h3 id="canvas"><a class="anchor" href="#canvas">#</a> canvas</h3>
<p>之前一篇<span class="exturl" data-url="aHR0cHM6Ly96amd5Yi5naXRodWIuaW8vY2FudmFzJUU1JTlGJUJBJUU3JUExJTgwLmh0bWw=">博客</span>就介绍过 Canvas 的用法与实例</p>
<h3 id="picture"><a class="anchor" href="#picture">#</a> picture</h3>
<p>在下面的代码中根据屏幕的分辨率来显示不同的图片，同时只会加载该分辨率下的图片，这很好的解决了 img 在 display 为 none 的情况下还是会发出请求的问题</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>picture</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(min-width: 650px)<span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_pink_flowers.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(min-width: 465px)<span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_white_flower.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_orange_flowers.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Flowers<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>picture</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p><strong>source 的属性</strong></p>
<ul>
<li>srcset (src): 定义图片的资源路径 (定义 video 和 audio)</li>
<li>media: 定义分辨率大小</li>
<li>sizes: 定义需要加载多大像素的图片，具体用法可以看<span class="exturl" data-url="aHR0cHM6Ly96amd5Yi5naXRodWIuaW8vdmlld3MvaHRtbC8yMDIwL0hUTUw1X3RhZy5odG1sJUU2JThCJTkzJUU1JUIxJTk1">拓展</span>部分</li>
<li>type: 定义资源格式</li>
</ul>
<h3 id="svg"><a class="anchor" href="#svg">#</a> svg</h3>
<p>svg 有专门的语法，需要用到时再学习，这里先展示其一个例子</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>yellow<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h1 id="多媒体元素"><a class="anchor" href="#多媒体元素">#</a> 多媒体元素</h1>
<ul>
<li>audio: 音频</li>
<li>video: 视频</li>
<li>source: 定义多种格式的音频、视频、图片等资源</li>
<li>track: 用于音频或视频的文本文件引用</li>
<li>embed: 嵌入外部应用或 flash</li>
</ul>
<h3 id="audio-video"><a class="anchor" href="#audio-video">#</a> audio &amp; video</h3>
<p>这两个元素的使用在之前的<span class="exturl" data-url="aHR0cHM6Ly96amd5Yi5naXRodWIuaW8vSFRNTDUlRTglODQlOUElRTYlOUMlQUMlRTclQkMlOTYlRTclQTglOEIuaHRtbA==">博客 (opens new window)</span> 中介绍过</p>
<h3 id="source"><a class="anchor" href="#source">#</a> source</h3>
<p>定义多媒体资源，当不确定浏览器是否支持一种格式的视频资源并且有多个多媒体资源的时候使用</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myvideo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>conference.webm<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video/webm; codecs=<span class="token punctuation">'</span>vp8, vorbis<span class="token punctuation">'</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>conference.ogv<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video/ogg; codecs=<span class="token punctuation">'</span>theora, vorbis<span class="token punctuation">'</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>conference.mpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>  Video player not available.</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="track"><a class="anchor" href="#track">#</a> track</h3>
<p>用于规定字幕文件或其他包含文本的文件，当媒体播放时，这些文件是可见的，一般在 audio 和 video 内部，例如来自<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3RyYWNr"> MDN (opens new window)</span> 的例子</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">controls</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>250<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/media/examples/friday.mp4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>track</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token attr-name">default</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token attr-name">kind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>captions<span class="token punctuation">"</span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token attr-name">srclang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/media/examples/friday.vtt<span class="token punctuation">"</span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>  Sorry, your browser doesn't support embedded videos.</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="embed"><a class="anchor" href="#embed">#</a> embed</h3>
<p>标签定义了一个容器，用来嵌入外部应用或者互动程序，例如 flash</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello_world.swf<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr></table></figure><h1 id="新表单元素"><a class="anchor" href="#新表单元素">#</a> 新表单元素</h1>
<ul>
<li>datalist</li>
<li>output</li>
<li>keygen (已废弃)</li>
</ul>
<h3 id="datalist"><a class="anchor" href="#datalist">#</a> datalist</h3>
<p>定义了一个 input 中可能的下拉元素，同时也可手动输入，类似于下拉框结合一个输入框</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>browsers<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>browsers<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Chrome<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Firefox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Safari<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="output"><a class="anchor" href="#output">#</a> output</h3>
<p>表单通过计算或者展示的结果放入 output 中，例如 MDN 的<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L291dHB1dA==">例子 (opens new window)</span></p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">oninput</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result.value=parseInt(a.value)+parseInt(b.value)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> +</pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> =</pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>output</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a b<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>60<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>output</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h1 id="新的语义和结构元素"><a class="anchor" href="#新的语义和结构元素">#</a> 新的语义和结构元素</h1>
<ul>
<li>article: 定义页面独立的内容区域</li>
<li>section: 定义文档中的节</li>
<li>header: 定义文档的头部区域</li>
<li>nav: 定义导航链接的部分</li>
<li>aside: 定义页面的<strong>侧边栏</strong></li>
<li>main: 定义文档的主要内容</li>
<li>footer: 定义 section 或 document 的页脚</li>
<li>dialog: 定义对话框，可以当一个标签使用</li>
<li>figure: 规定独立的流内容 (图像、图标、照片、代码等)</li>
<li>figcaption: 定义 figure 元素的标题</li>
<li>mark: 高亮显示文本，背景色是 yellow</li>
<li>meter: 展示给定的数据范围</li>
<li>progress: 定义任务进度</li>
<li>wbr: 在合适的地方添加换行符</li>
<li>ruby、rt、rp: 定义 ruby 注释、定义字符的解释或发音、定义不支持 ruby 元素的浏览器显示的内容</li>
<li>time: 给机器识别的标签</li>
<li>bdi: 允许您设置一段文本，使其脱离其父元素的文本方向设置。</li>
<li>command (没有浏览器支持)</li>
<li>details, summary: 用于描述文档或文档某个部分的细节、文档的标题，summary 用于展示，点击之后会展开 details 内的内容</li>
</ul>
<h3 id="article-section"><a class="anchor" href="#article-section">#</a> article &amp; section</h3>
<p>这两个区别比较困难通过查阅相关的资料，总的来说：</p>
<ul>
<li>article: 代表文档、页面或应用程序中<strong>独立的</strong>、<strong>完整的</strong>、可以独自被外界引用的内容</li>
<li>section: 用于对网站或应用程序中页面上的内容进行<strong>分块</strong></li>
</ul>
<p>section 使用的禁忌：</p>
<ol>
<li>不要将它作为设置样式的页面容器，应使用 div</li>
<li>如果其他的元素 nav、header、footer 更合适，那就不要使用 section</li>
<li>不要为没有标题的内容块使用 section</li>
</ol>
<h3 id="main"><a class="anchor" href="#main">#</a> main</h3>
<p><strong>注意</strong>：main 是独一无二的，因此一个文档中只能有一个 main，同时 main 不应该在 article、aside、footer、header、nav 等标签内</p>
<h3 id="figure-figcaption"><a class="anchor" href="#figure-figcaption">#</a> figure &amp; figcaption</h3>
<p>例如菜鸟教程的<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1maWdjYXB0aW9uLmh0bWw=">例子 (opens new window)</span></p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_pulpit.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>The Pulpit Rock<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>304<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>228<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figcaption</span><span class="token punctuation">></span></span>Fig.1 - A view of the pulpit rock in Norway.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figcaption</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="detail-summary"><a class="anchor" href="#detail-summary">#</a> detail &amp; summary</h3>
<p>例如下面来自<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1zdW1tYXJ5Lmh0bWw=">菜鸟教程 (opens new window)</span> 中的例子：</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">></span></span>Copyright 1999-2011.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span> - by Refsnes Data. All Rights Reserved.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>All content and graphics on this web site are the property of the company Refsnes Data.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="meter-progress"><a class="anchor" href="#meter-progress">#</a> meter &amp; progress</h3>
<p>这两个元素在显示于语法上有点类似</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meter</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>60%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>meter</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>progress</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="wbr"><a class="anchor" href="#wbr">#</a> wbr</h3>
<p>当页面不足以一行显示下面字段时， <code>HTTP</code>  会与后面的 <code>Request</code>  换行</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>学习 AJAX ,您必须熟悉 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wbr</span> <span class="token punctuation">/></span></span>Http<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wbr</span> <span class="token punctuation">/></span></span>Request 对象。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="ruby-rp-rt"><a class="anchor" href="#ruby-rp-rt">#</a> ruby、rp、rt</h3>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ruby</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  汉 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rp</span><span class="token punctuation">></span></span>(<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rp</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rt</span><span class="token punctuation">></span></span>Han<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rp</span><span class="token punctuation">></span></span>)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rp</span><span class="token punctuation">></span></span> 字 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rp</span><span class="token punctuation">></span></span>(<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rp</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rt</span><span class="token punctuation">></span></span>zi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rp</span><span class="token punctuation">></span></span>)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ruby</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h1 id="拓展"><a class="anchor" href="#拓展">#</a> 拓展</h1>
<p>之前对 img 内的属性 srcset 和 sizes 这两个属性不是特别理解，因此，通过查阅相关的资料，对这两个属性进行说明</p>
<h3 id="srcset"><a class="anchor" href="#srcset">#</a> srcset</h3>
<p><code>srcset</code>  是一个包含一个或多个源图的容器，不同源图用逗号分隔，每一个源图由两部分组成：</p>
<ol>
<li>图片的 URL</li>
<li><code>x</code>  (设备像素比) 或 <code>w</code>  图片像素宽度描述， <code>w</code>  描述符的加载策略是通过 <code>sizes</code>  属性的声明来计算选择的，如果没有给出，默认是 <code>1x</code></li>
</ol>
<p>先说 <code>x</code> ， <code>x</code>  代表设备像素比，那什么是设备像素比 (DPR) 呢？设备像素比 = 分辨率 / 设备独立像素，从这篇<span class="exturl" data-url="aHR0cHM6Ly9sZWFybmt1LmNvbS9hcnRpY2xlcy83MzA5L3doYXQtaXMtdGhlLWluZGVwZW5kZW50LXBpeGVsLXJlc29sdXRpb24tYW5kLWRldmljZS1waXhlbC1vZi10aGUtZGV2aWNlLWZvci1hLW1vYmlsZS1waG9uZQ==">文章 (opens new window)</span> 可以简单的了解三个概念：设备独立像素、分辨率、设备像素比，如果你想获知设备的像素比，可以使用 <code>window.devicePixelRatio</code>  这个 API 获取，一般设备像素比为 <code>1~5</code>  之间，通过测试，我的联想小新 700 电脑是 <code>1.25</code> ，我的小米 6 手机的设备像素比是 <code>3</code> ，这样你就能够清楚当设置不同的像素比时显示不同的图片了，在举例之前，先说明两种图片对应的名字：tony111 对应 <code>tony1.jpg</code> ，tony222 对应 <code>tony2.jpg</code></p>
<p><img data-src="../images/HTML5%E6%96%B0%E5%A2%9E%E6%A0%87%E7%AD%BE/show1.b5d74bbd.png" alt="show1.png" /></p>
<p>代码示例：</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tony1.jpg 1x, tony2.jpg 2x<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>在电脑上会显示 tony111，因为电脑的设备像素比为 <code>1.25</code> ，同时取值时会忽略后面的小数，所以取 1，而在我的手机上显示的是 tony222，因为手机的设备像素比为 3，更接近 2，所以会显示 tony222</p>
<p><strong>注意点</strong></p>
<ol>
<li>书写的时候需要从小到大向右书写，否则前面比后面大的话永远显示前面的图片，后面的就会忽略。例如下面的代码永远显示 tony111</li>
</ol>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tony1.jpg 3x, tony2.jpg 2x<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><ol>
<li>如果找不到对应的像素，那么一般会寻找比它大且最接近的设备像素比，若还是找不到，则会找比它小且最接近的设备像素比，但是会对图片进行放大或缩小 (<strong>不同浏览器策略可能不同，我用 Chrome 测是这样的</strong>)。例如电脑端的图片会找到 tony111 显示，同时显示的 tony111 大小会比设置 <code>1x</code>  下缩小 1 倍</li>
</ol>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tony1.jpg 2x, tony2.jpg 3x<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="sizes"><a class="anchor" href="#sizes">#</a> sizes</h3>
<p>只对设置 <code>srcset</code>  中的 <code>w</code>  起作用，所以两种结合起来使用。例如下面的例子，在我的 PC 上显示 tony222，为什么呢？因为根据 sizes 设置的规则，我的电脑大于 768px 的，因此使用 600px，同时电脑的设备像素比为 1，因此 <code>600 * 1 = 600px</code>  对应的是 tony222，而我的手机为 360px，同时设备像素比为 3，因此 <code>128 * 3 = 384px</code>  对应的是 tony111</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tony1.jpg 400w, tony2.jpg 600w<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(max-width: 768px) 128px, 600px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>但是如果计算的数值与其他图片像素差距太大，浏览器取图片时极不规律，看如下的例子你会发现，无论手机还是移动端显示的都是 tony222，计算一下 <code>384 - 246 = 138</code> 、 <code>600 - 384 = 216</code> ， <code>384 - 211 = 173</code> 、 <code>700 - 384 = 316</code>  取得不规律</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">&lt;!-- 取 tony2 --></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tony1.jpg 245w, tony2.jpg 600w<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(max-width: 768px) 128px, 600px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">&lt;!-- 取 tony1 --></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tony1.jpg 246w, tony2.jpg 600w<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(max-width: 768px) 128px, 600px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">&lt;!--  取 tony2 --></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tony1.jpg 210w, tony2.jpg 700w<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(max-width: 768px) 128px, 600px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">&lt;!-- 取 tony1 --></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tony1.jpg 211w, tony2.jpg 700w<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(max-width: 768px) 128px, 600px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h3 id="总结"><a class="anchor" href="#总结">#</a> 总结</h3>
<p>在同时使用 sizes 和 srcset 的时候注意选择哪个值极不规律，因此应提前计算大概的值以便显示自己需要的值</p>
<h1 id="参考教程"><a class="anchor" href="#参考教程">#</a> 参考教程</h1>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhhbmd4aW54dS5jb20vd29yZHByZXNzLzIwMTQvMTAvcmVzcG9uc2l2ZS1pbWFnZXMtc3Jjc2V0LXNpemUtdy1kZXNjcmlwdG9yLw==">张鑫旭的博客 (opens new window)</span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC82MDc1NjdlNDg4ZmM=">简书 (opens new window)</span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9odG1sL2h0bWw1X25ld19lbGVtZW50cy5hc3A=">w3schools(opens new window)</span></li>
</ul>
]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>js字符串常用方法</title>
    <url>/2020/11/09/js%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="1-charatx"><a class="anchor" href="#1-charatx">#</a> 1. charAt(x)</h2>
<p><code>charAt(x)</code>  返回字符串中 <code>x</code>  位置的字符，下标从  <code>0</code>  开始。</p>
<pre><code>//charAt(x)
var myString = 'jQuery FTW!!!';
console.log(myString.charAt(7));
//output: F
 
</code></pre>
<h2 id="2charcodeatx"><a class="anchor" href="#2charcodeatx">#</a> 2.charCodeAt(x)</h2>
<p><code>charCodeAt(x)</code>  返回字符串中 <code>x</code>  位置处字符的 <code>unicode</code>  值。</p>
<pre><code>//charCodeAt(position)
var message=&quot;jquery4u&quot;
//alert &quot;113&quot;
alert(message.charCodeAt(1)
 
</code></pre>
<h2 id="3concatv1v2"><a class="anchor" href="#3concatv1v2">#</a> 3.concat(v1,v2..)</h2>
<p><code>concat()</code>  方法用于连接两个或多个字符串，此方法不改变现有的字符串，返回拼接后的新的字符串。</p>
<pre><code>//concat(v1, v2,..)
var message=&quot;Sam&quot;
var final=message.concat(&quot; is a&quot;,&quot; hopeless romantic.&quot;)
//alerts &quot;Sam is a hopeless romantic.&quot;
alert(final)
 
</code></pre>
<h2 id="4fromcharcodec1c2"><a class="anchor" href="#4fromcharcodec1c2">#</a> 4.fromCharcode(c1,c2)</h2>
<p><code>fromCharcode(c1,c2)</code>  转换一组 <code>Unicode</code>  值转换为字符。</p>
<pre><code>//fromCharCode(c1, c2,...)
console.log(String.fromCharCode(97,98,99,120,121,122))
//output: abcxyz
console.log(String.fromCharCode(72,69,76,76,79))
//output: HELLO
 
</code></pre>
<h2 id="5indexofsubstr-start"><a class="anchor" href="#5indexofsubstr-start">#</a> 5.indexOf(substr, [start])</h2>
<p><code>indexOf</code>  方法搜索并 (如果找到) 返回字符串中搜索到的字符或子字符串的索引。如果没有找到，则返回 <code>-1</code> 。 <code>Start</code>  是一个可选参数，指定字符串中开始搜索的位置，默认值为 <code>0</code> 。</p>
<pre><code>//indexOf(char/substring)
var sentence=&quot;Hi, my name is Sam!&quot;
if (sentence.indexOf(&quot;Sam&quot;)!=-1)
alert(&quot;Sam is in there!&quot;)
 
</code></pre>
<h2 id="6lastindexofsubstr-start"><a class="anchor" href="#6lastindexofsubstr-start">#</a> 6.lastIndexOf(substr, [start])</h2>
<p><code>lastIndexOf()</code>  方法返回指定文本在字符串中最后一次出现的索引，如果未找到，则返回 <code>-1</code> 。 “ <code>Start</code> ” 是一个可选参数，指定字符串中开始搜索的位置，默认值为 <code>string.length-1</code> 。</p>
<pre><code>//lastIndexOf(substr, [start])
var myString = 'javascript rox';
console.log(myString.lastIndexOf('r'));
//output: 11
 
</code></pre>
<h2 id="7matchregexp"><a class="anchor" href="#7matchregexp">#</a> 7.match(regexp)</h2>
<p>根据正则表达式在字符串中搜索匹配项。如果没有找到匹配项，则返回一个信息数组或 <code>null</code> 。</p>
<pre><code>//match(regexp) //select integers only
var intRegex = /[0-9 -()+]+$/;  
 
var myNumber = '999';
var myInt = myNumber.match(intRegex);
console.log(isInt);
//output: 999
 
var myString = '999 JS Coders';
var myInt = myString.match(intRegex);
console.log(isInt);
//output: null
 
</code></pre>
<h2 id="8replaceregexpsubstr-replacetext"><a class="anchor" href="#8replaceregexpsubstr-replacetext">#</a> 8.replace(regexp/substr, replacetext)</h2>
<p><code>replace()</code>  方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</p>
<pre><code>//replace(substr, replacetext)
var myString = '999 JavaScript Coders';
console.log(myString.replace(/JavaScript/i, &quot;jQuery&quot;));
//output: 999 jQuery Coders
 
//replace(regexp, replacetext)
var myString = '999 JavaScript Coders';
console.log(myString.replace(new RegExp( &quot;999&quot;, &quot;gi&quot; ), &quot;The&quot;));
//output: The JavaScript Coders
 
</code></pre>
<h2 id="9searchregexp"><a class="anchor" href="#9searchregexp">#</a> 9.search(regexp)</h2>
<p><code>search()</code>  方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，如果找到，返回与  <code>regexp</code>  相匹配的子串的起始位置，否则返回  <code>-1</code> 。</p>
<pre><code>//search(regexp)
var intRegex = /[0-9 -()+]+$/;  
 
var myNumber = '999';
var isInt = myNumber.search(intRegex);
console.log(isInt);
//output: 0
 
</code></pre>
<h2 id="10slicestart-end"><a class="anchor" href="#10slicestart-end">#</a> 10.slice(start, [end])</h2>
<p><code>slice()</code>  方法可提取字符串的某个部分，返回一个新的字符串。包括字符串从  <code>start</code>  开始（包括 start）到  <code>end</code>  结束（不包括  <code>end</code> ）为止的所有字符。</p>
<pre><code>//slice(start, end)
var text=&quot;excellent&quot;
text.slice(0,4) //returns &quot;exce&quot;
text.slice(2,4) //returns &quot;ce&quot;
 
</code></pre>
<h2 id="11splitdelimiter-limit"><a class="anchor" href="#11splitdelimiter-limit">#</a> 11.split(delimiter, [limit])</h2>
<p><code>split()</code>  方法用于把一个字符串分割成字符串数组，返回一个字符串数组返回的数组中的字串不包括  <code>delimiter</code>  自身。 可选的 “ <code>limit</code> ” 是一个整数，允许各位指定要返回的最大数组的元素个数。</p>
<h2 id="12substrstart-length"><a class="anchor" href="#12substrstart-length">#</a> 12.substr(start, [length])</h2>
<p><code>substr()</code>  方法可在字符串中抽取从  <code>start</code>  下标开始的指定数目的字符。返回一个新的字符串，包含从  <code>start</code> （包括 start 所指的字符） 处开始的  <code>length</code>  个字符。如果没有指定  <code>length</code> ，那么返回的字符串包含从  <code>start</code>  到该字符串的结尾的字符。</p>
<pre><code>//substr(from, to)
var text=&quot;excellent&quot;
text.substr(0,4) //returns &quot;exce&quot;
text.substr(2,4) //returns &quot;cell&quot;
 
</code></pre>
<h2 id="13substringfrom-to"><a class="anchor" href="#13substringfrom-to">#</a> 13.substring(from, [to])</h2>
<p><code>substring()</code>  方法用于提取字符串中介于两个指定下标之间的字符，方返回的子串包括  <code>start</code>  处的字符，但不包括  <code>stop</code>  处的字符， <code>to</code>  可选，如果省略该参数，那么返回的子串会一直到字符串的结尾。</p>
<pre><code>//substring(from, [to])
var myString = 'javascript rox';
myString = myString.substring(0,10);
console.log(myString)
//output: javascript
 
</code></pre>
<h2 id="14tolowercase"><a class="anchor" href="#14tolowercase">#</a> 14.toLowerCase()</h2>
<p><code>toLowerCase()</code>  方法用于把字符串转换为小写。</p>
<pre><code>//toLowerCase()
var myString = 'JAVASCRIPT ROX';
myString = myString.toLowerCase();
console.log(myString)
//output: javascript rox
 
</code></pre>
<h2 id="15touppercase"><a class="anchor" href="#15touppercase">#</a> 15.toUpperCase()</h2>
<p><code>toUpperCase()</code>  方法用于把字符串转换为大写。</p>
<pre><code>//toUpperCase()
var myString = 'javascript rox';
myString = myString.toUpperCase();
console.log(myString)
//output: JAVASCRIPT ROX
 
</code></pre>
<h2 id="16-includes"><a class="anchor" href="#16-includes">#</a> 16. includes()</h2>
<p><code>includes()</code>  方法用于检查字符串是否包含指定的字符串或字符。</p>
<pre><code>//includes()
var mystring = &quot;Hello, welcome to edureka&quot;;
var n = mystring.includes(&quot;edureka&quot;);
//output: True
 
</code></pre>
<h2 id="17-endswith"><a class="anchor" href="#17-endswith">#</a> 17. endsWith()</h2>
<p><code>endsWith()</code>  函数检查字符串是否以指定的字符串或字符结束。</p>
<pre><code>//endsWith()
var mystr = &quot;List of javascript functions&quot;;
var n = mystr.endsWith(&quot;functions&quot;);
//output: True
 
</code></pre>
<h2 id="18-repeat"><a class="anchor" href="#18-repeat">#</a> 18. repeat()</h2>
<p><code>repeat()</code>  构造并返回一个新字符串，该字符串包含被连接在一起的指定数量的字符串的副本。</p>
<pre><code>//repeat()
var string = &quot;Welcome to Edureka&quot;;
string.repeat(2);
//output: Welcome to Edureka Welcome to Edureka
 
</code></pre>
<h2 id="19-valueof"><a class="anchor" href="#19-valueof">#</a> 19. valueOf()</h2>
<p><code>valueOf()</code>  方法返回一个 <code>String</code>  对象的原始值（primitive value），该值等同于 <code>String.prototype.toString()</code> 。</p>
<pre><code>//valueOf()
var mystr = &quot;Hello World!&quot;;
var res = mystr.valueOf();
//output: Hello World!
 
</code></pre>
<h2 id="20-trim"><a class="anchor" href="#20-trim">#</a> 20. trim()</h2>
<p><code>trim()</code>  方法会从一个字符串的两端删除空白字符。在这个上下文中的空白字符是所有的空白字符 (space, tab, no-break space 等) 以及所有行终止符字符（如 LF，CR）</p>
<pre><code>//trim()
var str = &quot;     Hello Edureka!     &quot;;
alert(str.trim());
</code></pre>
<p><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTAzOTI3NzU0Nzg0Nzgx">参考博主</span></p>
]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>js常用数组方法</title>
    <url>/2020/11/12/js%E5%B8%B8%E7%94%A8%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="es5"><a class="anchor" href="#es5">#</a> ES5</h2>
<h3 id="join-split"><a class="anchor" href="#join-split">#</a> join &amp; split</h3>
<pre><code>const colors = 'green, red, black';
const colorsArr = colors.split(',');
console.log(colorsArr); // [ 'green', ' red', ' black' ]
const colorsStr = colorsArr.join(',');
console.log(colorsStr); // green, red, black
</code></pre>
<h3 id="push-pop"><a class="anchor" href="#push-pop">#</a> push &amp; pop</h3>
<pre><code>const colors = [];
colors.push('green', 'red');
console.log(colors); // ['green', 'red']

const item = colors.pop();
console.log(item); // 'red'
console.log(colors); // ['green']
</code></pre>
<h3 id="shift-unshift"><a class="anchor" href="#shift-unshift">#</a> shift &amp; unshift</h3>
<pre><code>const colors = ['green', 'red'];
const item = colors.shift();
console.log(item); // 'green'
console.log(colors); // ['red']

colors.unshift('blue', 'grey');
console.log(colors); // ['blue', 'grey', 'red']
</code></pre>
<h3 id="reverse-sort"><a class="anchor" href="#reverse-sort">#</a> reverse &amp; sort</h3>
<pre><code>const values = [1, 3, 44, 43, 654, 0];
values.reverse();
console.log(values); // [ 0, 654, 43, 44, 3, 1 ]

values.sort();
console.log(values); // [ 0, 1, 3, 43, 44, 654 ] 首字母开始比较
values.sort((val1, val2) =&gt; val2 - val1);
console.log(values); // [ 654, 44, 43, 3, 1, 0 ]
</code></pre>
<h3 id="concat-slice-splice"><a class="anchor" href="#concat-slice-splice">#</a> concat, slice &amp; splice</h3>
<pre><code>const colors = ['red', 'green', 'blue'];
const colors2 = colors.concat('yellow', ['black']);
console.log(colors2); // [ 'red', 'green', 'blue', 'yellow', 'black' ]

const colors3 = colors2.slice(1, 5);
console.log(colors3); // [ 'green', 'blue', 'yellow', 'black' ]
console.log(colors2); // [ 'red', 'green', 'blue', 'yellow', 'black' ]

const remove1 = colors2.splice(0, 1);
console.log(remove1); // [ 'red' ]
console.log(colors2); // [ 'green', 'blue', 'yellow', 'black' ]
const remove2 = colors2.splice(1, 0, 'red', 'pink');
console.log(remove2); // [ ]
console.log(colors2); // [ 'green', 'red', 'pink', 'blue', 'yellow', 'black' ]
 
</code></pre>
<h3 id="indexof-lastindexof"><a class="anchor" href="#indexof-lastindexof">#</a> indexOf &amp; lastIndexOf</h3>
<pre><code>const values= [1, 3, 4, 6, 7, 4, 3, 1];
console.log(values.indexOf(4)); // 2
console.log(values.lastIndexOf(4)); // 5
console.log(values.lastIndexOf(4, 4)); // 2
console.log(values.lastIndexOf(4, 5)); // 5
</code></pre>
<h3 id="every-filter-foreach-map-some"><a class="anchor" href="#every-filter-foreach-map-some">#</a> every, filter, forEach, map &amp; some</h3>
<p>every &amp; some</p>
<pre><code>const values = [1, 3, 4, 6, 7, 4, 3, 1];
const everyResult = values.every((item, index, array) =&gt; &#123;
  return item &gt; 2;
&#125;);
console.log(everyResult); // false

const someResult = values.some((item, index, array) =&gt; &#123;
  return item &gt; 2;
&#125;);
console.log(someResult); // true
</code></pre>
<p>filter</p>
<pre><code>const values = [1, 3, 4, 6, 7, 4, 3, 1];
const filterResult = values.filter((item, index, array) =&gt; &#123;
  return item &gt; 2;
&#125;);
console.log(filterResult); // [ 3, 4, 6, 7, 4, 3 ]
const obj = [ &#123; num: 3 &#125;, &#123; num: 4 &#125;, &#123; num: 1 &#125;,&#123; num: 5 &#125;,&#123; num: 0 &#125;, &#123; num: 4 &#125;];
const filterObjResult = obj.filter((item, index, array) =&gt; &#123;
  return item.num &gt; 2;
&#125;);
console.log(filterObjResult); // [ &#123; num: 3 &#125;, &#123; num: 4 &#125;, &#123; num: 5 &#125;, &#123; num: 4 &#125; ]
</code></pre>
<p>map</p>
<pre><code>const values = [1, 3, 4, 6, 7, 4, 3, 1];
const mapResult = values.map((item, index, array) =&gt; &#123;
  return item * 2;
&#125;);
console.log(mapResult); // [ 2, 6, 8, 12, 14, 8, 6, 2 ]
const obj = [ &#123; num: 3 &#125;, &#123; num: 4 &#125;, &#123; num: 1 &#125;,&#123; num: 5 &#125;,&#123; num: 0 &#125;, &#123; num: 4 &#125;];
const mapObjResult = obj.map((item, index, array) =&gt; &#123;
  return item.num;
&#125;);
console.log(mapObjResult); // [ 3, 4, 1, 5, 0, 4 ]
</code></pre>
<p>forEach</p>
<pre><code>const values = [1, 3, 4, 6, 7, 4, 3, 1];
values.forEach((item, index, array) =&gt; &#123;
  array[index] = item * 2;
&#125;);
console.log(values); // [ 2, 6, 8, 12, 14, 8, 6, 2 ]
</code></pre>
<h3 id="reduce-reduceright"><a class="anchor" href="#reduce-reduceright">#</a> reduce &amp; reduceRight</h3>
<pre><code>const values = [1, 3, 4, 4, 4, 9];
const sum = values.reduce((prev, cur, index, array) =&gt; &#123;
  return prev + cur;
&#125;);
console.log(sum); // 25

const sumRight = values.reduceRight((prev, cur, index, array) =&gt; &#123;
  return prev + cur;
&#125;);
console.log(sumRight); // 25
</code></pre>
<h2 id="es6"><a class="anchor" href="#es6">#</a> ES6</h2>
<h3 id="拓展运算符"><a class="anchor" href="#拓展运算符">#</a> 拓展运算符 <code>...</code></h3>
<pre><code>const colors = ['green', 'red', 'pink'];
const colors1 = ['white', 'grey'];
const colors2 = [...colors, ...colors1];
console.log(colors2); // [ 'green', 'red', 'pink', 'white', 'grey' ]
</code></pre>
<h3 id="arrayfrom-arrayof"><a class="anchor" href="#arrayfrom-arrayof">#</a> Array.from() &amp; Array.of()</h3>
<pre><code>const obj = &#123;
  '0': '123',
  '1': '456',
  '2': 'c',
  length: 4
&#125;

const arr = Array.from(obj);
console.log(arr); // [ '123', '456', 'c', undefined ]
const values = [1, 1, 3, 5];
const setValue = new Set(values);
const newArr = Array.from(setValue); // 也可以直接[...new Set(values)]
console.log(newArr); // [ 1, 3, 5 ]
const newArr2 = Array.from(newArr, x =&gt; x * 2);
console.log(newArr2); // [ 2, 6, 10 ]

console.log(Array.of(undefined, 1, null)); // [ undefined, 1, null ]
</code></pre>
<h3 id="copywithintarget-start-0-end-thislength"><a class="anchor" href="#copywithintarget-start-0-end-thislength">#</a> copyWithin(target, start = 0, end = this.length)</h3>
<p>有效时应 start &gt; end</p>
<pre><code>const arr = [1, 3, 4, 4, 5, 8, 10, 1, 0].copyWithin(0, 3, 4);
console.log(arr); // [ 4, 3, 4, 4, 5, 8, 10, 1, 0 ]
const arr = [1, 3, 4, 4, 5, 8, 10, 1, 0].copyWithin(0, 3, 8);
console.log(arr1); // [ 4, 5, 8, 10, 1, 8, 10, 1, 0 ]
</code></pre>
<h3 id="fill"><a class="anchor" href="#fill">#</a> fill</h3>
<pre><code>const colors = ['green', 'red', 'pink'];
const colors1 = colors.fill('white');
console.log(colors1); // [ 'white', 'white', 'white' ] 
</code></pre>
<h3 id="find-findindex"><a class="anchor" href="#find-findindex">#</a> find &amp; findIndex</h3>
<pre><code>const values = [1, 3, 4, 5, 6, NaN];
const findResult = values.find(num =&gt; num &gt; 4 ); // 找不到为undefined
console.log(findResult); // 5
const findIndexResult = values.findIndex(num =&gt; num &gt; 4 ); // 找不到为-1
console.log(findIndexResult); // 3
</code></pre>
<h3 id="entries-keys-values"><a class="anchor" href="#entries-keys-values">#</a> entries(), keys() &amp; values()</h3>
<pre><code>const colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;];
for (const index of colors.keys()) &#123;
  console.log(index); // 0 1 2
&#125;

for (const ele of colors.values()) &#123;
  console.log(ele); // red green blue
&#125;
for (const [index, ele] of colors.entries()) &#123;
  console.log(index, ele);
&#125;
// 0 red
// 1 green
// 2 blue
</code></pre>
<h2 id="es7"><a class="anchor" href="#es7">#</a> ES7</h2>
<h3 id="includes"><a class="anchor" href="#includes">#</a> includes</h3>
<p>第二个参数是搜索的起始位置</p>
<pre><code>const values = [1, 3, 4, 5, 6, NaN];
console.log(values.includes(NaN)); // true
console.log(values.includes(4, 3)); // false
</code></pre>
<h2 id="es10"><a class="anchor" href="#es10">#</a> ES10</h2>
<h3 id="flat-flatmap"><a class="anchor" href="#flat-flatmap">#</a> flat &amp; flatMap</h3>
<pre><code>const values = [1, 2, [3, 4]].flat();
console.log(values); // [1, 2, 3, 4]
const valuesDeep = [1, [2, [3]]];
console.log(valuesDeep.flat(Infinity)); // [1, 2, 3]
</code></pre>
]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>typeof与instanceof</title>
    <url>/2020/10/30/typeof%E4%B8%8Einstanceof/</url>
    <content><![CDATA[<h2 id="一-typeof"><a class="anchor" href="#一-typeof">#</a> 一、typeof</h2>
<p><code>typeof</code>  操作符返回一个字符串，表示未经计算的操作数的类型</p>
<p>使用方法如下：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">typeof</span> operand</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">typeof</span><span class="token punctuation">(</span>operand<span class="token punctuation">)</span></pre></td></tr></table></figure><p><code>operand</code>  表示对象或原始值的表达式，其类型将被返回</p>
<p>举个例子</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">typeof</span> <span class="token number">1</span> <span class="token comment">// 'number'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">typeof</span> <span class="token string">'1'</span> <span class="token comment">// 'string'</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">typeof</span> <span class="token keyword">undefined</span> <span class="token comment">// 'undefined'</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">typeof</span> <span class="token boolean">true</span> <span class="token comment">// 'boolean'</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">typeof</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 'symbol'</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">typeof</span> <span class="token keyword">null</span> <span class="token comment">// 'object'</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 'object'</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">typeof</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 'object'</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">typeof</span> console <span class="token comment">// 'object'</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">typeof</span> console<span class="token punctuation">.</span>log <span class="token comment">// 'function'</span></pre></td></tr></table></figure><p>从上面例子，前 6 个都是基础数据类型。虽然 <code>typeof null</code>  为 <code>object</code> ，但这只是 <code> JavaScript</code>  存在的一个悠久  <code>Bug</code> ，不代表 <code>null </code> 就是引用数据类型，并且 <code>null </code> 本身也不是对象</p>
<p>所以， <code>null </code> 在  <code>typeof </code> 之后返回的是有问题的结果，不能作为判断 <code>null</code>  的方法。如果你需要在  <code>if</code>  语句中判断是否为  <code>null</code> ，直接通过 <code>===null</code>  来判断就好</p>
<p>同时，可以发现引用类型数据，用 <code>typeof</code>  来判断的话，除了 <code>function</code>  会被识别出来之外，其余的都输出 <code>object</code></p>
<p>如果我们想要判断一个变量是否存在，可以使用 <code>typeof</code> ：(不能使用 <code>if(a)</code> ， 若 <code>a</code>  未声明，则报错)</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">!=</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 变量存在</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="二-instanceof"><a class="anchor" href="#二-instanceof">#</a> 二、instanceof</h2>
<p><code>instanceof</code>  运算符用于检测构造函数的  <code>prototype</code>  属性是否出现在某个实例对象的原型链上</p>
<p>使用如下：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>object <span class="token keyword">instanceof</span> <span class="token class-name">constructor</span></pre></td></tr></table></figure><p><code>object</code>  为实例对象， <code>constructor</code>  为构造函数</p>
<p>构造函数通过 <code>new</code>  可以实例对象， <code>instanceof </code> 能判断这个对象是否是之前那个构造函数生成的对象</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 定义构建函数</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">let</span> <span class="token function-variable function">Car</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">let</span> benz <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>benz <span class="token keyword">instanceof</span> <span class="token class-name">Car</span> <span class="token comment">// true</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">let</span> car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">'xxx'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>car <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token comment">// true</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'xxx'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>str <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token comment">// false</span></pre></td></tr></table></figure><p>关于 <code>instanceof</code>  的实现原理，可以参考下面：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">function</span> <span class="token function">myInstanceof</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 这里先用 typeof 来判断基础数据类型，如果是，直接返回 false</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> left <span class="token operator">!==</span> <span class="token string">'object'</span> <span class="token operator">||</span> left <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token comment">//getProtypeOf 是 Object 对象自带的 API，能够拿到参数的原型对象</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">let</span> proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                  </pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>proto <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>proto <span class="token operator">===</span> right<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">// 找到相同原型对象，返回 true</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeof</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>也就是顺着原型链去找，直到找到相同的原型对象，返回 <code>true</code> ，否则为 <code>false</code></p>
<h2 id="三-区别"><a class="anchor" href="#三-区别">#</a> 三、区别</h2>
<p><code>typeof</code>  与 <code>instanceof</code>  都是判断数据类型的方法，区别如下：</p>
<ul>
<li><code>typeof</code>  会返回一个变量的基本类型， <code>instanceof</code>  返回的是一个布尔值</li>
<li><code>instanceof</code>  可以准确地判断复杂引用数据类型，但是不能正确判断基础数据类型</li>
<li>而 <code> typeof</code>  也存在弊端，它虽然可以判断基础数据类型（ <code>null</code>  除外），但是引用数据类型中，除了 <code> function</code>  类型以外，其他的也无法判断</li>
</ul>
<p>可以看到，上述两种方法都有弊端，并不能满足所有场景的需求</p>
<p>如果需要通用检测数据类型，可以采用 <code>Object.prototype.toString</code> ，调用该方法，统一返回格式 <code>“[object Xxx]” </code> 的字符串</p>
<p>如下</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>       <span class="token comment">// "[object Object]"</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 同上结果，加上 call 也 ok</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment">// "[object Number]"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>  <span class="token comment">// "[object String]"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token comment">// "[object Boolean]"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// "[object Function]"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>   <span class="token comment">//"[object Null]"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">//"[object Undefined]"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">123</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>    <span class="token comment">//"[object RegExp]"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//"[object Date]"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token comment">//"[object Array]"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span>  <span class="token comment">//"[object HTMLDocument]"</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span>   <span class="token comment">//"[object Window]"</span></pre></td></tr></table></figure><p>了解了 <code>toString</code>  的基本用法，下面就实现一个全局通用的数据类型判断方法</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">let</span> type  <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!==</span> <span class="token string">"object"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 先进行 typeof 判断，如果是基础数据类型，直接返回</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">return</span> type<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token comment">// 对于 typeof 返回结果是 object 的，再进行如下的判断，正则返回结果</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\[object (\S+)\]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">'$1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>使用如下</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     <span class="token comment">// "Array" typeof [] 是 object，因此 toString 返回</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">)</span>  <span class="token comment">// "string" typeof 直接返回</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span> <span class="token comment">// "Window" toString 返回</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>   <span class="token comment">// "Null" 首字母大写，typeof null 是 object，需 toString 来判断</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>   <span class="token comment">// "undefined" typeof 直接返回</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment">// "undefined" typeof 直接返回</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">// "function" typeof 能判断，因此首字母小写</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">123</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>      <span class="token comment">//"RegExp" toString 返回</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>use strict</title>
    <url>/2020/09/30/use%20strict/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>严格模式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token comment">// 00 - 严格模式：解决 js 版本一些不合适 不合理的地方 IE10 以上版本才会执行</span></pre></td></tr><tr><td data-num="10"></td><td><pre>		<span class="token string">'use strict'</span><span class="token punctuation">;</span> <span class="token comment">// 为整个脚本开启严格模式 IE10 以上版本</span></pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token comment">// (function()&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token comment">// 	// 'use strict';// 为整个脚本开启严格模式</span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token comment">// &#125;)()</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token comment">// function fn3()&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>		<span class="token comment">// 	'use strict'; // 为 fn3 这个函数开启严格模式</span></pre></td></tr><tr><td data-num="16"></td><td><pre>		<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token comment">// 01 - 严格模式的变化</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token comment">// 1 一定要先声明再定义  </span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token comment">//name='lhm'; // 错误</span></pre></td></tr><tr><td data-num="20"></td><td><pre>		<span class="token keyword">let</span> name<span class="token operator">=</span><span class="token string">'lhm'</span><span class="token punctuation">;</span> <span class="token comment">// 正确</span></pre></td></tr><tr><td data-num="21"></td><td><pre>		<span class="token comment">//2 不能随意删除声明的变量</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		<span class="token comment">//delete name;// 不可以</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token comment">//3 函数中！！的 this 不再指向 window 而是 undefined</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//window</span></pre></td></tr><tr><td data-num="25"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span></pre></td></tr><tr><td data-num="27"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		<span class="token comment">//4 构造眼熟必须加 new 创建对象 不然里面的 this 指向的是 undefined</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">Father</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		<span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>		<span class="token comment">// Father ("张学友",63);</span></pre></td></tr><tr><td data-num="36"></td><td><pre>		<span class="token comment">//console.log (Father.name);// 报错</span></pre></td></tr><tr><td data-num="37"></td><td><pre>		<span class="token keyword">let</span> father<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token string">"张学友"</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>		<span class="token comment">//05 定时器还是指向还是 window</span></pre></td></tr><tr><td data-num="40"></td><td><pre>		<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//window</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		<span class="token comment">//06 函数参数不可以重名</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>		<span class="token punctuation">&#125;</span> <span class="token comment">// 报错</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		</pre></td></tr><tr><td data-num="48"></td><td><pre>		<span class="token comment">//07 不可以在非函数代码块声明函数</span></pre></td></tr><tr><td data-num="49"></td><td><pre>		<span class="token comment">// if(true)&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		<span class="token comment">// 	function fn4()&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>		<span class="token comment">// 		console.log ("不可以在非函数代码块声明函数")</span></pre></td></tr><tr><td data-num="52"></td><td><pre>		<span class="token comment">// 	&#125;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>		<span class="token comment">// &#125; // 报错</span></pre></td></tr><tr><td data-num="54"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="55"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack</title>
    <url>/2020/10/18/webpack/</url>
    <content><![CDATA[<p>webpack 官网    <span class="exturl" data-url="aHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy8=">https://webpack.js.org/</span></p>
<h2 id="安装nodejs"><a class="anchor" href="#安装nodejs">#</a> 安装 nodejs</h2>
<p>​        如何安装自己看官网教程，webpack 依赖于 nodejs</p>
<h2 id="初始化文件"><a class="anchor" href="#初始化文件">#</a> 初始化文件</h2>
<p>​      创建文件夹 eg:webpack_sudy</p>
<p>​       打开终端  npm init -y</p>
<h2 id="创建源文件src"><a class="anchor" href="#创建源文件src">#</a> 创建源文件 src</h2>
<p>​     在 webpack_study 文件下</p>
<p>​     建立 src 文件夹</p>
<p>​     src 文件夹下创建 index.js 入口文件，自己输入点内容 index.js</p>
<h2 id="打包js文件"><a class="anchor" href="#打包js文件">#</a> 打包 js 文件</h2>
<p>输入 webpack</p>
<p>或  webpack 打包文件  -o 输出文件 --mode=development</p>
<p>eg(webpack ./src/index.js -o ./build/main.js –mode=development)</p>
<p>建立一个 html 文件，引入打包文件 js 即可看到是否打包成功</p>
<h2 id="创建打包配置文件webpackconfigjs"><a class="anchor" href="#创建打包配置文件webpackconfigjs">#</a> 创建打包配置文件 webpack.config.js</h2>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'main.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>   </pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      </pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>基本属性结构如上，根据配置再补充</p>
<h2 id="打包css文件"><a class="anchor" href="#打包css文件">#</a> 打包 css 文件</h2>
<p>webpack 不能打包 css 文件，需要解除 loader</p>
<p>配置如下，即在上面 module:{} 里面配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>在 js 里面 import ‘css 文件’</p>
<p>建立一个 html 文件，引入打包文件 js 即可看到是否打包成功</p>
<h2 id="打包html文件"><a class="anchor" href="#打包html文件">#</a> 打包 html 文件</h2>
<p>需要借助插件 html-webpack-plugin</p>
<h3 id="安装html-webpack-plugin"><a class="anchor" href="#安装html-webpack-plugin">#</a> 安装 html-webpack-plugin</h3>
<p>安装命令  -D 为本地安装</p>
<p>npm install html-webpack-plugin -D</p>
<h3 id="webpackconfigjs配置"><a class="anchor" href="#webpackconfigjs配置">#</a> webpack.config.js 配置</h3>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 开头引入</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">// 之后在里面 plugins 属性里面配置</span></pre></td></tr><tr><td data-num="5"></td><td><pre> <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr></table></figure><h3 id="打包运行"><a class="anchor" href="#打包运行">#</a> 打包运行</h3>
<p>命令 webpack</p>
<p>即可看到打包文件中多了一个 index.html</p>
<h2 id="打包图片文件"><a class="anchor" href="#打包图片文件">#</a> 打包图片文件</h2>
<p>气死了气死了气死了，卡了好久好久不能正常显示，原来是版本太高的问题，呕血！！！！！</p>
<p>注意：推荐使用版本较低的，比如以下版本，于是实在出问题摸不着头脑的时候便按照以下图片修改了版本</p>
<p>重新安装版本</p>
<p>npm i css-loader@5.2.4 -D</p>
<p>npm i style-loader@2.0.0 -D</p>
<p><img data-src="/images/webpack/1649377283108.png" alt="1649377283108" /></p>
<h3 id="css中的图片背景"><a class="anchor" href="#css中的图片背景">#</a> css 中的图片背景</h3>
<p>​    （ 使用 url-loader,url-loader 依靠 file-loader）</p>
<p>​    下载安装  npm i url-loader file-loader -D</p>
<p>​     在 module 里面配置 rules:[{}]</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre> <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="12"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>                    <span class="token comment">// 超过大小 file-loader 打包</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                    <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images/'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><h3 id="html里面的img"><a class="anchor" href="#html里面的img">#</a> html 里面的 img</h3>
<p>使用 html-loader (加配置，可能会出错）或</p>
<p>html-withimg-loader</p>
<p>安装  npm i html-loader -D   或</p>
<p>​         npm i html-withimg-loader -D</p>
<p>在 module 里面配置 rules:[{}]</p>
<h4 id="用html-loader配置"><a class="anchor" href="#用html-loader配置">#</a> 用 html-loader 配置</h4>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h4 id="用html-withimg-loader推荐这个"><a class="anchor" href="#用html-withimg-loader推荐这个">#</a> 用 html-withimg-loader（推荐这个）</h4>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="打包其他资源"><a class="anchor" href="#打包其他资源">#</a> 打包其他资源</h2>
<p>（其他资源：不需要做任何处理，原封不动输出出去就可以）</p>
<h3 id="打包字体图标示例"><a class="anchor" href="#打包字体图标示例">#</a> 打包字体图标示例</h3>
<p>这里使用 iconfont 阿里云矢量图标库</p>
<p>下载解压引入 iconfont.css     在入口文件 index.js 设置</p>
<p>import   ‘’iconfont.css 路径 “</p>
<p>看到 iconfont.css 中需要几个文件一同引入过来</p>
<p>（utl 根据实际情况更改）</p>
<p><img data-src="/images/webpack/1649377304788.png" alt="1649377304788" /></p>
<p>引入目录为（有些还需要 svg，看 iconfont.css 需要什么）</p>
<p><img data-src="/images/webpack/1649377319020.png" alt="1649377319020" /></p>
<p>于是在 index.html 配置引用</p>
<p>（本人在这里傻逼了，class 没写，一直还以为哪里出错）</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>webpack打包文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>webpack打包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>其他资源打包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-shezhi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-dingdan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-shangpin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-yonghuqun<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-quanxian<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>webpack.config.js  module 中 rules:[{}] 配置为</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="2"></td><td><pre> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>             <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre> <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打包运行命令 webpack  打包成功</p>
<h2 id="devserver"><a class="anchor" href="#devserver">#</a> devServer</h2>
<p>​    帮助自动打包，修改代码后，不需要每次 webpack 打包</p>
<ul>
<li>
<p>安装工具 webapck-dev-server  npm i  webpack-dev-server -D</p>
</li>
<li>
<p>配置命令 mode 属性同级下配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li>
<li>
<p>运行命令 npx webpack-dev-server</p>
<p>在源文件 src 里面修改代码保存即自动打包，刷新浏览器即可看到（建立安装 vscode 自动刷新插件 ---Live Server，实现保存即可看到浏览器内容，无须刷新)</p>
<p>下载好在需要监听的 html 文件右键，选择 open with Live Server</p>
</li>
</ul>
<h2 id="以上打包完整代码"><a class="anchor" href="#以上打包完整代码">#</a> 以上打包完整代码</h2>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">// 输出目录</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'bundle.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                    <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre>                    <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre>            <span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(htm|html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="54"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="55"></td><td><pre>            <span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="58"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="59"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="66"></td><td><pre></pre></td></tr><tr><td data-num="67"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="71"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span></pre></td></tr><tr><td data-num="74"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="75"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="76"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="77"></td><td><pre>    <span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="78"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="79"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="80"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token comment">// 可写可不写</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        <span class="token keyword">static</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>            <span class="token literal-property property">directory</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="89"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="90"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="91"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="92"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="多文件配置"><a class="anchor" href="#多文件配置">#</a> 多文件配置</h2>
<p>这里以 index.html 和 login.html 为例子</p>
<ul>
<li>配置多个入口</li>
</ul>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 多文件配置多个入口</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token string">'./src/login.js'</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><ul>
<li>配置多个输出</li>
</ul>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token comment">// 多文件输出</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><ul>
<li>
<p>复制多个 html 文件</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token comment">// 多文件</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token comment">// 复制入门文件 login.html 结构样式</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>完整代码为：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// entry: './src/index.js',</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 多文件配置多个入口</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token string">'./src/login.js'</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">// 输出目录</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// path: path.resolve(__dirname, 'dist'),</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token comment">// filename: 'bundle.js',</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// 多文件输出</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                    <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                    <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="51"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="57"></td><td><pre></pre></td></tr><tr><td data-num="58"></td><td><pre>            <span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(htm|html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="62"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="66"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="67"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="73"></td><td><pre></pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="75"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="78"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="80"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="81"></td><td><pre>            <span class="token comment">// 输出文件名字</span></pre></td></tr><tr><td data-num="82"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="83"></td><td><pre>            <span class="token comment">// 打包优化</span></pre></td></tr><tr><td data-num="84"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token comment">// 多文件</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>            <span class="token comment">// 复制入门文件 login.html 结构样式</span></pre></td></tr><tr><td data-num="89"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="90"></td><td><pre>            <span class="token comment">// 输出文件名字</span></pre></td></tr><tr><td data-num="91"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="92"></td><td><pre>            <span class="token comment">// 打包优化</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="95"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="96"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="97"></td><td><pre>    <span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="98"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="99"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="100"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="102"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="103"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="104"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="105"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="106"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="107"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="108"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="109"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="110"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>多文件打包成功</p>
</li>
</ul>
<h2 id="babel配置"><a class="anchor" href="#babel配置">#</a> babel 配置</h2>
<p>babel: 将高版本的 js 语法转换为低版本浏览器能识别的语法</p>
<ul>
<li>
<p>安装</p>
<p>npm i babel-loader @babel/core @babel/preset-env -D</p>
<p>再安装 否则处理不了对象的方法（ 比如 eg：arr.includes (4)  ）</p>
<p>npm i @babel/polyfill -S</p>
</li>
<li>
<p>配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">//babel 转换</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.\js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                    <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/env'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>index.js 中引入对象的方法处理</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token string">'@babel/polyfill'</span></pre></td></tr></table></figure></li>
<li>
<p>打包 看看打包的 js 文件中是否将高版本语法转换为低版本语法</p>
</li>
</ul>
<h2 id="sourcemap源码映射"><a class="anchor" href="#sourcemap源码映射">#</a> sourceMap 源码映射</h2>
<p>源码的映射，通过 sourceMap 打包找到真正源码的位置</p>
<ul>
<li>解决编出来的源码位置并不是实际的位置，比如<img data-src="/images/webapck%E6%89%93%E5%8C%85/image-20220306133502413.png" alt="image-20220306133502413" /></li>
</ul>
<p>问题：点击上图右侧，并不是真正 index.js 映射的源码位置</p>
<p>面试官问 map 文件是什么？就是 sourceMap 源码映射</p>
<p>详情官网 <span class="exturl" data-url="aHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9jb25maWd1cmF0aW9uL2RldnRvb2wvI3Jvb3Q=">https://webpack.js.org/configuration/devtool/#root</span></p>
<p><img data-src="/images/webpack/1649377493782.png" alt="1649377493782" /></p>
<p>配置如下：（开发模式下建立用 3 不生成 map 文件且为源码）</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">devtool</span><span class="token operator">:</span><span class="token string">'eval-cheap-module-source-map'</span></pre></td></tr></table></figure><h2 id="使用第三方插件"><a class="anchor" href="#使用第三方插件">#</a> 使用第三方插件</h2>
<p>全局使用第三方插件 比如 jquery $</p>
<p>下载第三方插件</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm i jquery <span class="token operator">-</span><span class="token constant">S</span></pre></td></tr></table></figure><p>配置 webpack 自带插件</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">//plugins 里面配置</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">[</span> </pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 第三方库 jquery 挂载使用</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token string">'jquery'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token literal-property property">jQuery</span><span class="token operator">:</span> <span class="token string">'jquery'</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">]</span></pre></td></tr></table></figure><p>在 js 文件直接使用即可实现</p>
<h2 id="webpack区分生产环境和开发分包"><a class="anchor" href="#webpack区分生产环境和开发分包">#</a> webpack 区分生产环境和开发分包</h2>
<ul>
<li>
<p>分包 建立 build 目录同级，划分三个文件，分别为 webpack.base.js webpack.dev.js  webpack.pro.js</p>
<p><img data-src="/images/webpack/1649377530057.png" alt="1649377530057" /></p>
</li>
<li>
<p>安装分包工具 wepack-merge，合并配置文件</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm i webpack<span class="token operator">-</span>merge <span class="token operator">-</span><span class="token constant">D</span></pre></td></tr></table></figure></li>
<li>
<p>修改配置文件合并内容</p>
<ol>
<li>webpack.base.js (完整代码参考)</li>
</ol>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// entry: './src/index.js',</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token comment">// 多文件配置多个入口</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token string">'./src/login.js'</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// 输出目录</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token comment">// path: path.resolve(__dirname, 'dist'),</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// filename: 'bundle.js',</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// 多文件输出</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                    <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                    <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="51"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(htm|html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="62"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="67"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="68"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="71"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token comment">//babel 转换</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.\js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="76"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="77"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="78"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>                    <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/env'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="80"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="83"></td><td><pre></pre></td></tr><tr><td data-num="84"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="85"></td><td><pre>    <span class="token comment">// 插件</span></pre></td></tr><tr><td data-num="86"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="89"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="91"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="92"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        <span class="token comment">// 多文件</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>            <span class="token comment">// 复制入门文件 login.html 结构样式</span></pre></td></tr><tr><td data-num="98"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="99"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="100"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="101"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="102"></td><td><pre>        <span class="token comment">// 第三方库 jquery 挂载使用</span></pre></td></tr><tr><td data-num="103"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>            <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token string">'jquery'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="105"></td><td><pre>            <span class="token literal-property property">jQuery</span><span class="token operator">:</span> <span class="token string">'jquery'</span></pre></td></tr><tr><td data-num="106"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="107"></td><td><pre>    <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="108"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>2.webpack.dev.js</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> merge <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-merge'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> baseConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./webpack.base.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>baseConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'eval-cheap-module-source-map'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>3.webpack.pro.js</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> merge <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-merge'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> baseConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./webpack.base.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>baseConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li>
<li>
<p>增加或修改 package.json 配置 找到 script 节点</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token string-property property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token string-property property">"server"</span><span class="token operator">:</span> <span class="token string">"webpack-dev-server --config ./build/webpack.dev.js"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token string-property property">"build"</span><span class="token operator">:</span> <span class="token string">"webpack --config ./build/webpack.pro.js"</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>这样便实现区分了生产环境和开发环境</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm run server   <span class="token comment">// 开发模式下</span></pre></td></tr><tr><td data-num="2"></td><td><pre>npm run build    <span class="token comment">// 生产模式下</span></pre></td></tr></table></figure></li>
</ul>
<h2 id="webpack处理跨域问题"><a class="anchor" href="#webpack处理跨域问题">#</a> webpack 处理跨域问题</h2>
<ul>
<li>为什么出现跨域？</li>
</ul>
<p>​           协议 域名 端口号 三个有一个不一样便出现跨域</p>
<ul>
<li>
<p>面试常问问题，如何解决跨域？</p>
<p>CORS (在接口上添加注解，后端处理，但是数据不安全)</p>
<p>JSONP（利用 script 的 src 属性，只能处理 get 请求）</p>
<p>Nginx (反向代理)</p>
<p>使用 webpack 作代理 (比较好的处理方式)</p>
<h3 id="webpack处理跨域配置"><a class="anchor" href="#webpack处理跨域配置">#</a> webpack 处理跨域配置</h3>
<p>在目录下打开终端，安装 webpack</p>
<p>npm i webpack webpack-cli -D</p>
<p>初始化 npm init -y</p>
<ul>
<li>推荐方法，在 webpack.config.js 中 devServer 节点中，增加一个属性</li>
</ul>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">proxy</span><span class="token operator">:</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token comment">// 检测当请求路径前面为 /api 时，将会替换为后面的 ip</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token string-property property">"/api"</span><span class="token operator">:</span><span class="token string">"http://localhost:666"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><img data-src="/images/webpack/1649377552076.png" alt="1649377552076" /></p>
<p>安装 axios  npm i axios -S</p>
<p>前端请求 (需要跨域接口前面用 /api)</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 引入 axios</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"axios"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 发请求</span></pre></td></tr><tr><td data-num="4"></td><td><pre>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/api/getList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>
<p>cors 方法，但是不安全</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 安装 </span></pre></td></tr><tr><td data-num="2"></td><td><pre>npm i cors</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 引入 </span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">const</span> cors<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span>“cors”<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// 实现 </span></pre></td></tr><tr><td data-num="6"></td><td><pre>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>cors<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="模拟后台编写简单接口"><a class="anchor" href="#模拟后台编写简单接口">#</a> 模拟后台编写简单接口</h3>
<ul>
<li>
<p>在 src 同级建立 server 目录，建立 app.js</p>
</li>
<li>
<p>npm init -y</p>
</li>
<li>
<p>npm i express</p>
</li>
<li>
<p>编写后台服务器简单代码，开一个接口</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"express"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/api/getList"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"请求成功"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"王五"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"http://localhost:666/api/getList"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>点击链接在浏览器即可看到数据</p>
</li>
<li>
<p>在前端 src 那个文件下载 axios 发起请求 （eg: 在 index.js 利用 axios 请求）      npm i axios -S</p>
</li>
<li>
<p>在 index.js 发起请求</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 引入 axios</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"axios"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 发请求</span></pre></td></tr><tr><td data-num="4"></td><td><pre>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://localhost:666/api/getList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr></table></figure></li>
<li>
<p>在 server 的终端下开启后台 node app.js, 在上一级前端目录在开启前端 npm run server (有的是 npm run dev, 具体看 package.json 配置)</p>
<p>发现问题跨域！！！</p>
<p><img data-src="/images/webpack/1649377571332.png" alt="1649377571332" /></p>
<p>具体解决方法请回看上面一点点，简单来说就是在 devServer 节点配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">proxy</span><span class="token operator">:</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token string-property property">"/api"</span><span class="token operator">:</span><span class="token string">"跨域ip"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>成功解决，跨域请求成功</p>
<p><img data-src="/images/webpack/1649377584724.png" alt="1649377584724" /></p>
</li>
</ul>
<h3 id="webpackconfigjs跨域配置代码"><a class="anchor" href="#webpackconfigjs跨域配置代码">#</a> webpack.config.js 跨域配置代码</h3>
<p>如下是两个页面 index.html 和 login.html 均配置实现了跨域</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// entry: './src/index.js',</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token comment">// 多文件配置多个入口</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token string">'./src/login.js'</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// 输出目录</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token comment">// path: path.resolve(__dirname, 'dist'),</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// filename: 'bundle.js',</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// 多文件输出</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                    <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                    <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="51"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(htm|html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="62"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="67"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="68"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="71"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token comment">//babel 转换</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.\js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="76"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="77"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="78"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>                    <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/env'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="80"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="83"></td><td><pre></pre></td></tr><tr><td data-num="84"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="85"></td><td><pre>    <span class="token comment">// 插件</span></pre></td></tr><tr><td data-num="86"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="89"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="91"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="92"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        <span class="token comment">// 多文件</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>            <span class="token comment">// 复制入门文件 login.html 结构样式</span></pre></td></tr><tr><td data-num="98"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="99"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="100"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="101"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="102"></td><td><pre>        <span class="token comment">// 第三方库 jquery 挂载使用</span></pre></td></tr><tr><td data-num="103"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>            <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token string">'jquery'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="105"></td><td><pre>            <span class="token literal-property property">jQuery</span><span class="token operator">:</span> <span class="token string">'jquery'</span></pre></td></tr><tr><td data-num="106"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="107"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="108"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="109"></td><td><pre>    <span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="110"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="111"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="112"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="114"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="115"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="116"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="117"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="118"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="119"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="120"></td><td><pre>        <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="121"></td><td><pre>            <span class="token string-property property">"/api"</span><span class="token operator">:</span> <span class="token string">"http://localhost:666"</span></pre></td></tr><tr><td data-num="122"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="123"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="124"></td><td><pre>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'eval-cheap-module-source-map'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="125"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="webpack-css处理"><a class="anchor" href="#webpack-css处理">#</a> webpack CSS 处理</h2>
<h3 id="css文件分离"><a class="anchor" href="#css文件分离">#</a> css 文件分离</h3>
<p>使用插件 mini-css-extract-plugin</p>
<ul>
<li>
<p>安装插件 npm i mini-css-extract-plugin -D</p>
</li>
<li>
<p>引入 require, 修改 plugin 配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 引入</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> MiniCssExtractPlugin<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">[</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 使用插件</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">// 输出路径和名字</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span><span class="token string">'/css/[name].css'</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">]</span></pre></td></tr></table></figure></li>
<li>
<p>将 style-loader 都修改为</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">&#123;</span><span class="token literal-property property">loader</span><span class="token operator">:</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li>
</ul>
<h3 id="css-css3语法兼容处理"><a class="anchor" href="#css-css3语法兼容处理">#</a> css css3 语法兼容处理</h3>
<ul>
<li>
<p>使用 postcss-loader autoprefixer</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm i postcss<span class="token operator">-</span>loader autoprefixer <span class="token operator">-</span><span class="token constant">D</span></pre></td></tr></table></figure></li>
<li>
<p>module 使用 postcss-loader 要写在 css-loader 后面，卸载后面才是前一个调用</p>
<p><img data-src="/images/webpack/1649377609082.png" alt="1649377609082" /></p>
</li>
<li>
<p>配置 当前目录下 新建一个文件 postcss-config.js</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'autoprefixer'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">overrideBrowserslist</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token string">'defaults'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token string">'Android 4.1'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token string">'Chrome>31'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token string">'ff>31'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token string">'ie>=8'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token string">'last 2 versions'</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>成功实现兼容处理</p>
<p><img data-src="/images/webpack/1649377622896.png" alt="1649377622896" /></p>
</li>
</ul>
<h3 id="css压缩"><a class="anchor" href="#css压缩">#</a> css 压缩</h3>
<ul>
<li>
<p>使用 optimize-css-assets-webpack-plugin</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm i optimize<span class="token operator">-</span>css<span class="token operator">-</span>assets<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin <span class="token operator">-</span><span class="token constant">D</span></pre></td></tr></table></figure></li>
<li>
<p>使用配置，直接在 webpack.pro.js 里面配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> OptimizeCssAssetsWepackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">//css 文件压缩</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWepackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>npm run build 查看上述 css 分离兼容压缩功能成功！建议实现一个步骤打包出来看一下再进行下一步</p>
</li>
</ul>
<h2 id="js和html压缩"><a class="anchor" href="#js和html压缩">#</a> js 和 html 压缩</h2>
<h3 id="js压缩"><a class="anchor" href="#js压缩">#</a> js 压缩</h3>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">mode</span><span class="token operator">:</span>production   <span class="token comment">// 生产模式就压缩了 js 代码</span></pre></td></tr></table></figure><h3 id="html压缩"><a class="anchor" href="#html压缩">#</a> html 压缩</h3>
<p>在插件中添加 minify</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token comment">//html 压缩</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                <span class="token comment">// 移除空格</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token comment">// 移除注释</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>打包</tag>
      </tags>
  </entry>
  <entry>
    <title>构造函数与原型</title>
    <url>/2020/10/10/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%B8%8E%E5%8E%9F%E5%9E%8B/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>构造函数和原型<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>	</pre></td></tr><tr><td data-num="11"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">	</pre></td></tr><tr><td data-num="12"></td><td><pre>	<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 在<span class="token constant">ES6</span>之前没有类的概念，对象不是通过类来创建，而是通过构造函数 <span class="token operator">--</span><span class="token operator">></span></pre></td></tr><tr><td data-num="13"></td><td><pre>	</pre></td></tr><tr><td data-num="14"></td><td><pre>	<span class="token comment">// 构造函数创建对象</span></pre></td></tr><tr><td data-num="15"></td><td><pre>	<span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>		<span class="token comment">// 实例成员  构造函数通过 this 执行构造的成员  name age sing  只能通过实例化的对象访问 不能 Star.name 只能 ldh.name</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token comment">//this.sing=function ()&#123;   // 会为方法单独开辟内存空间，造成浪费内存，所以一般是放在原型对象 prototype 中</span></pre></td></tr><tr><td data-num="20"></td><td><pre>		<span class="token comment">// 	console.log (this.name+"会唱歌！他已经"+this.age+"岁了！");</span></pre></td></tr><tr><td data-num="21"></td><td><pre>		<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>	</pre></td></tr><tr><td data-num="24"></td><td><pre>	</pre></td></tr><tr><td data-num="25"></td><td><pre>	</pre></td></tr><tr><td data-num="26"></td><td><pre>	<span class="token comment">// 构造函数问题  存在浪费内存问题</span></pre></td></tr><tr><td data-num="27"></td><td><pre>	</pre></td></tr><tr><td data-num="28"></td><td><pre>	<span class="token comment">// 构造函数原型 prototype 实现函数共享  共享的对象放在 prototype</span></pre></td></tr><tr><td data-num="29"></td><td><pre>	<span class="token comment">// 公共方法放在原型对象上，实现共享，不会再开辟空间</span></pre></td></tr><tr><td data-num="30"></td><td><pre>	<span class="token comment">// Star.prototype.dance=function()&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>	<span class="token comment">// 	console.log (this.name+"会跳舞！！");</span></pre></td></tr><tr><td data-num="32"></td><td><pre>	<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>	<span class="token comment">// Star.prototype.sing=function()&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>	<span class="token comment">// 	console.log (this.name+"会唱歌！！");</span></pre></td></tr><tr><td data-num="35"></td><td><pre>	<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>	<span class="token comment">// 上面简化写法，但是这个简化是替换，上面是追加方法</span></pre></td></tr><tr><td data-num="37"></td><td><pre>	</pre></td></tr><tr><td data-num="38"></td><td><pre>   <span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>	   <span class="token literal-property property">constructor</span><span class="token operator">:</span>Star<span class="token punctuation">,</span>   <span class="token comment">// 说明指向哪个构造函数，不可以省略</span></pre></td></tr><tr><td data-num="40"></td><td><pre>	   <span class="token function-variable function">sing</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>		 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"会唱歌！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>	   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>	   <span class="token function-variable function">dance</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"会跳舞！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>	   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>	</pre></td></tr><tr><td data-num="48"></td><td><pre>	<span class="token keyword">let</span> ldh<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">"刘德华"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建一个空对象  this 再指向对象，执行构造函数的代码，添加属性和方法</span></pre></td></tr><tr><td data-num="49"></td><td><pre>	ldh<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'----'</span><span class="token operator">+</span>ldh<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>	</pre></td></tr><tr><td data-num="52"></td><td><pre>	<span class="token comment">// 静态成员  实例成员</span></pre></td></tr><tr><td data-num="53"></td><td><pre>	</pre></td></tr><tr><td data-num="54"></td><td><pre>	<span class="token comment">// 静态成员在构造函数本身添加的成员</span></pre></td></tr><tr><td data-num="55"></td><td><pre>	Star<span class="token punctuation">.</span>sex<span class="token operator">=</span><span class="token string">'男'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>	</pre></td></tr><tr><td data-num="57"></td><td><pre>	<span class="token comment">// 只能通过构造函数访问</span></pre></td></tr><tr><td data-num="58"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Star<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 只能通过构造函数访问</span></pre></td></tr><tr><td data-num="59"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 不可以这样访问！！</span></pre></td></tr><tr><td data-num="60"></td><td><pre>	</pre></td></tr><tr><td data-num="61"></td><td><pre>	<span class="token comment">// 实例成员 构造函数通过 this 执行构造的成员  name age sing  只能通过实例化的对象访问 不能 Star.name 只能 ldh.name</span></pre></td></tr><tr><td data-num="62"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Star<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 不可以这样访问！！</span></pre></td></tr><tr><td data-num="63"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 只能通过实例化的对象访问</span></pre></td></tr><tr><td data-num="64"></td><td><pre>	</pre></td></tr><tr><td data-num="65"></td><td><pre>	<span class="token keyword">let</span> zxy<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">"张学友"</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>	zxy<span class="token punctuation">.</span><span class="token function">dance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>	ldh<span class="token punctuation">.</span><span class="token function">dance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"1.放在prototype原型对象上，实现原型共享，不会开辟新的内存空间地址都一样"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zxy<span class="token punctuation">.</span>dance<span class="token operator">===</span>ldh<span class="token punctuation">.</span>dance<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"2.没有放在prototype原型对象上，开辟新的内存空间 地址不一样"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zxy<span class="token punctuation">.</span>sing<span class="token operator">===</span>ldh<span class="token punctuation">.</span>sing<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>	<span class="token comment">// 原型是一个对象，所有的构造函数都默认有个原型对象 prototype  eg: Star 默认有 prototype</span></pre></td></tr><tr><td data-num="73"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>Star<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token comment">// 每个对象有一个属性__proto__指向构造函数的原型对象 prototype  也会写成 [[prototype]] 遍历两层</span></pre></td></tr><tr><td data-num="75"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zxy<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"对象有一个属性—__proto__指向构造函数的原型对象prototype "</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>	   <span class="token comment">// 知识点！！！</span></pre></td></tr><tr><td data-num="80"></td><td><pre>	   <span class="token comment">// 方法查找规则</span></pre></td></tr><tr><td data-num="81"></td><td><pre>	   <span class="token comment">// 1. 先去看对象 ldh 是否有这个 sing 方法，有就执行</span></pre></td></tr><tr><td data-num="82"></td><td><pre>	   <span class="token comment">// 2. 没有和这个方法就去___proto__(对象的原型)，这个对象原型指向构造函数的原型对象</span></pre></td></tr><tr><td data-num="83"></td><td><pre>	   </pre></td></tr><tr><td data-num="84"></td><td><pre>	   </pre></td></tr><tr><td data-num="85"></td><td><pre>	   <span class="token comment">//constructor 构造函数  指明构造函数   告诉我们是哪个构造函数创建的</span></pre></td></tr><tr><td data-num="86"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span><span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>	   <span class="token comment">//console.log (ldh.__proto__.constructor);   // 指向构造函数 Star</span></pre></td></tr><tr><td data-num="89"></td><td><pre>	   <span class="token comment">//console.log (Star.prototype.constructor);   // 指向构造函数 Star</span></pre></td></tr><tr><td data-num="90"></td><td><pre>	   </pre></td></tr><tr><td data-num="91"></td><td><pre>	   </pre></td></tr><tr><td data-num="92"></td><td><pre>	   <span class="token comment">// 通过原型对象扩展方法 比如说数组</span></pre></td></tr><tr><td data-num="93"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>	   <span class="token comment">// 追加方法，只能采取。的形式</span></pre></td></tr><tr><td data-num="95"></td><td><pre>	   <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sum</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>		   <span class="token keyword">let</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>		   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="98"></td><td><pre>			   sum<span class="token operator">=</span>sum<span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		   <span class="token keyword">return</span> sum<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>	   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="102"></td><td><pre>	   <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>	    <span class="token comment">//call 方法调用</span></pre></td></tr><tr><td data-num="105"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="106"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"继续加油"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="107"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"call可以改变this指向"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="108"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="109"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"call可以传参"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="110"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="111"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>		<span class="token keyword">var</span> o<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'lhm'</span></pre></td></tr><tr><td data-num="114"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="115"></td><td><pre>		<span class="token comment">// 改变 this 指向</span></pre></td></tr><tr><td data-num="116"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="117"></td><td><pre>		</pre></td></tr><tr><td data-num="118"></td><td><pre>		<span class="token comment">// 构造函数继承，利用 call</span></pre></td></tr><tr><td data-num="119"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">Father</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="120"></td><td><pre>			<span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="121"></td><td><pre>			<span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="122"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="123"></td><td><pre>		</pre></td></tr><tr><td data-num="124"></td><td><pre>		<span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">money</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="125"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"赚大钱了！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="126"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="127"></td><td><pre>		</pre></td></tr><tr><td data-num="128"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>score</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="129"></td><td><pre>			<span class="token function">Father</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 此时 this 为调用  继承父亲构造函数属性</span></pre></td></tr><tr><td data-num="130"></td><td><pre>			<span class="token keyword">this</span><span class="token punctuation">.</span>score<span class="token operator">=</span>score<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="131"></td><td><pre>			</pre></td></tr><tr><td data-num="132"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="133"></td><td><pre>		<span class="token comment">// 实现继承父类 prototype 共享方法 start</span></pre></td></tr><tr><td data-num="134"></td><td><pre>		<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="135"></td><td><pre>		<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token operator">=</span>Son<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="136"></td><td><pre>		<span class="token comment">// 实现继承父类 prototype 共享方法 end</span></pre></td></tr><tr><td data-num="137"></td><td><pre>		</pre></td></tr><tr><td data-num="138"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="139"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="140"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"--------"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="141"></td><td><pre>		<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">exam</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="142"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"孩子要考试！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="143"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="144"></td><td><pre>		<span class="token keyword">let</span> son<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token string">"刘德华"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="145"></td><td><pre>		<span class="token comment">// console.dir(Son);</span></pre></td></tr><tr><td data-num="146"></td><td><pre>	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'---'</span><span class="token operator">+</span>son<span class="token punctuation">.</span>age<span class="token operator">+</span><span class="token string">'------'</span><span class="token operator">+</span>son<span class="token punctuation">.</span>score<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="147"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"习题！！！！！！"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="148"></td><td><pre>	  <span class="token keyword">function</span> <span class="token function">Temp</span><span class="token punctuation">(</span><span class="token parameter">role<span class="token punctuation">,</span>weapon</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="149"></td><td><pre>	    <span class="token keyword">this</span><span class="token punctuation">.</span>role <span class="token operator">=</span> role<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="150"></td><td><pre>	    <span class="token keyword">this</span><span class="token punctuation">.</span>weapon <span class="token operator">=</span> weapon<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="151"></td><td><pre>	    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">skill</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="152"></td><td><pre>	        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'你会点啥'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="153"></td><td><pre>	    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="154"></td><td><pre>	 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="155"></td><td><pre>	 </pre></td></tr><tr><td data-num="156"></td><td><pre>	 <span class="token keyword">let</span> son2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Temp</span><span class="token punctuation">(</span><span class="token string">'李白'</span><span class="token punctuation">,</span><span class="token string">'剑'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="157"></td><td><pre>	  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son2<span class="token punctuation">.</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="158"></td><td><pre>	  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Temp<span class="token punctuation">.</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不可以通过构造函数访问实例成员 1</span></pre></td></tr><tr><td data-num="159"></td><td><pre> </pre></td></tr><tr><td data-num="160"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"对象方法Object.keys() Object.values() "</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="161"></td><td><pre>	<span class="token keyword">let</span> oo<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="162"></td><td><pre>		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'lhm'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="163"></td><td><pre>		<span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="164"></td><td><pre>		<span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'女'</span></pre></td></tr><tr><td data-num="165"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="166"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="167"></td><td><pre>	<span class="token keyword">let</span> arr2<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="168"></td><td><pre>	arr2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="169"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"数组遍历"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="170"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="171"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="172"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="173"></td><td><pre>	<span class="token comment">//define 定义  property 属性</span></pre></td></tr><tr><td data-num="174"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"对象方法Object.defineProperty  修改或者新增 新增颜色暗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="175"></td><td><pre>	Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>oo<span class="token punctuation">,</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="176"></td><td><pre>		<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">'lll'</span></pre></td></tr><tr><td data-num="177"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="178"></td><td><pre>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>oo<span class="token punctuation">,</span><span class="token string">'score'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="179"></td><td><pre>      	<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token number">666</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="180"></td><td><pre>		<span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token boolean">false</span>  <span class="token punctuation">,</span><span class="token comment">// 不允许修改属性</span></pre></td></tr><tr><td data-num="181"></td><td><pre>		<span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token boolean">false</span> <span class="token punctuation">,</span><span class="token comment">// 不允许遍历，但是可以读取，如下</span></pre></td></tr><tr><td data-num="182"></td><td><pre>		<span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token boolean">false</span> <span class="token comment">// 不允许删除 不允许再次定义修改特性</span></pre></td></tr><tr><td data-num="183"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   </pre></td></tr><tr><td data-num="184"></td><td><pre>	oo<span class="token punctuation">.</span>score<span class="token operator">=</span><span class="token number">888</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="185"></td><td><pre>	</pre></td></tr><tr><td data-num="186"></td><td><pre>	<span class="token comment">//enumerable:false 不允许遍历 start</span></pre></td></tr><tr><td data-num="187"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="188"></td><td><pre>	<span class="token keyword">let</span> arr3<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="189"></td><td><pre>	arr3<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="190"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"数组遍历测试2："</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="191"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="192"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="193"></td><td><pre>	<span class="token comment">//enumerable:false 不允许遍历 end</span></pre></td></tr><tr><td data-num="194"></td><td><pre>	</pre></td></tr><tr><td data-num="195"></td><td><pre>	<span class="token comment">//configurable 不允许删除 start</span></pre></td></tr><tr><td data-num="196"></td><td><pre>	<span class="token keyword">delete</span> oo<span class="token punctuation">.</span>score<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="197"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"configurable不允许删除"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="198"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="199"></td><td><pre>	<span class="token comment">//configurable 不允许删除 end</span></pre></td></tr><tr><td data-num="200"></td><td><pre>	</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>	</pre></td></tr><tr><td data-num="201"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="202"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>原型</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2020/10/02/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>正则表达式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		</pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="10"></td><td><pre>		</pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token comment">// 正则表达式作为一个对象，过滤敏感关键词 用于匹配字符中字符组合的模式</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token comment">// 1 - 创建正则表达式  </span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token comment">// 00 对象 RegExp</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token keyword">var</span> regexp<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 只要包含 abc 的都可以返回 true</span></pre></td></tr><tr><td data-num="15"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>		</pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token comment">// 01 字面量创建</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token keyword">var</span> r<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token comment">// 2 - 测试正则表达式 regexp.test (str) 返回 true 和 false</span></pre></td></tr><tr><td data-num="20"></td><td><pre>	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="21"></td><td><pre>	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abccc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		</pre></td></tr><tr><td data-num="25"></td><td><pre>		<span class="token comment">// 3 - 正则表达式的特殊字符  </span></pre></td></tr><tr><td data-num="26"></td><td><pre>		<span class="token comment">// 00 边界符 ^ 开头 $ 结尾</span></pre></td></tr><tr><td data-num="27"></td><td><pre>		<span class="token keyword">var</span> r2<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 abc 开头都可以返回 true</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'aabc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abccc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token keyword">var</span> r3<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^abc$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 abc 开头和结尾返回 true 精确匹配</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'aabc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abccc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="35"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="36"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="37"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		</pre></td></tr><tr><td data-num="39"></td><td><pre>		<span class="token comment">// 01 字符类 [] 只包含 [] 里面其中一个字符就可以</span></pre></td></tr><tr><td data-num="40"></td><td><pre>		<span class="token keyword">var</span> r4<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[abc_]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 只要包含 abc 中的其中一个</span></pre></td></tr><tr><td data-num="41"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="45"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="46"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		<span class="token keyword">var</span> r5<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[abc]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 a 或者 b 或者 c 开头并结尾，选其中一个</span></pre></td></tr><tr><td data-num="48"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r5<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="49"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r5<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r5<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="51"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r5<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="52"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>		<span class="token keyword">var</span> r6<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 a 到 z 英文小写这个字符开头并结尾，选其中一个</span></pre></td></tr><tr><td data-num="54"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="55"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'z'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="56"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'g'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="57"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'gg'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="58"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>		<span class="token keyword">var</span> r6<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 a 到 z A-Z 英文开头并结尾，选其中一个 </span></pre></td></tr><tr><td data-num="60"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="61"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="62"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="63"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="64"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>		<span class="token keyword">var</span> r7<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[^a-zA-Z]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 中括号里面 ^ 是取反的意思，不能去里面</span></pre></td></tr><tr><td data-num="66"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r7<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="67"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r7<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="68"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r7<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="69"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r7<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="70"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>		</pre></td></tr><tr><td data-num="72"></td><td><pre>		<span class="token comment">// 02 量词符  注意 &#123;&#125; 里面中间不能有空格</span></pre></td></tr><tr><td data-num="73"></td><td><pre>		<span class="token comment">// * 重复 0 次或更多次  </span></pre></td></tr><tr><td data-num="74"></td><td><pre>		<span class="token keyword">var</span> r8<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  </pre></td></tr><tr><td data-num="75"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r8<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="76"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r8<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="77"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r8<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="78"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r8<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="79"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>		<span class="token comment">// + 重复 1 次或更多次</span></pre></td></tr><tr><td data-num="81"></td><td><pre>		<span class="token keyword">var</span> r9<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r9<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="83"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r9<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="84"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r9<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="85"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r9<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="86"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>		<span class="token comment">// ? 重复 0 次或 1 次</span></pre></td></tr><tr><td data-num="88"></td><td><pre>		<span class="token keyword">var</span> r10<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  </pre></td></tr><tr><td data-num="89"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r10<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="90"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r10<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="91"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r10<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="92"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r10<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="93"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>		<span class="token comment">// &#123;n&#125; 重复 n 次</span></pre></td></tr><tr><td data-num="95"></td><td><pre>		<span class="token keyword">var</span> r11<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]&#123;2&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r11<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="97"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r11<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="98"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r11<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r11<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>		<span class="token comment">// &#123;n,&#125; 重复 n 次或更多次</span></pre></td></tr><tr><td data-num="102"></td><td><pre>		<span class="token keyword">var</span> r12<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]&#123;2,&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r12<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="104"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r12<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="105"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r12<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'Gdfd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="106"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r12<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="107"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="108"></td><td><pre>		<span class="token comment">// &#123;n,m&#125; 重复 n 次到 m 次</span></pre></td></tr><tr><td data-num="109"></td><td><pre>		<span class="token keyword">var</span> r13<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]&#123;2,4&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="111"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="112"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'Gfd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="113"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'tttt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="114"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'ttttff'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="115"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="116"></td><td><pre>		</pre></td></tr><tr><td data-num="117"></td><td><pre>		<span class="token comment">// 4 - 正则表达式的替换</span></pre></td></tr><tr><td data-num="118"></td><td><pre>		<span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">'red和green'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="119"></td><td><pre>		<span class="token comment">// 以前</span></pre></td></tr><tr><td data-num="120"></td><td><pre>		<span class="token keyword">let</span> newStr<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">,</span><span class="token string">"orange"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 部分替换</span></pre></td></tr><tr><td data-num="121"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"替换后的str："</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="122"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStr<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="123"></td><td><pre>		<span class="token comment">// 正则表达式替换  全局匹配 //g   忽略带小写  //i</span></pre></td></tr><tr><td data-num="124"></td><td><pre>		<span class="token keyword">let</span> newStr1<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">e</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 将所有 e 替换成 *</span></pre></td></tr><tr><td data-num="125"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStr1<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="126"></td><td><pre>		</pre></td></tr><tr><td data-num="127"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="128"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="129"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>解构.箭头函数.剩余参数.Array扩展方法.Set</title>
    <url>/2020/10/28/%E8%A7%A3%E6%9E%84.%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.%E5%89%A9%E4%BD%99%E5%8F%82%E6%95%B0.Array%E6%89%A9%E5%B1%95%E6%96%B9%E6%B3%95.Set/</url>
    <content><![CDATA[<p><strong>学习笔记</strong></p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>解构.箭头函数.剩余参数.Array扩展方法.Set<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>hh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="10"></td><td><pre>		<span class="token comment">// 1 - 数组解构</span></pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token comment">// 00 数组解构允许我们一一解构，数量一致，多余的没有对应的值，就为 undefined</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"数组解构"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span></pre></td></tr><tr><td data-num="15"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2</span></pre></td></tr><tr><td data-num="16"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"对象解构"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token comment">//01 对象解构 没有的属性解构为 undefined</span></pre></td></tr><tr><td data-num="20"></td><td><pre>		<span class="token keyword">let</span> person<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'lhm'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="22"></td><td><pre>			<span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		<span class="token comment">// 对象解构 1</span></pre></td></tr><tr><td data-num="25"></td><td><pre>		<span class="token keyword">let</span> <span class="token punctuation">&#123;</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>sex<span class="token punctuation">&#125;</span><span class="token operator">=</span>person<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lhm</span></pre></td></tr><tr><td data-num="27"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//18</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"----------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		<span class="token comment">// 对象解构 2</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		<span class="token keyword">let</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">name</span><span class="token operator">:</span>myName<span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span>myAge<span class="token punctuation">,</span><span class="token literal-property property">sex</span><span class="token operator">:</span>mySex<span class="token punctuation">&#125;</span><span class="token operator">=</span>person<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myName<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myAge<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mySex<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"----------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>		</pre></td></tr><tr><td data-num="37"></td><td><pre>		<span class="token comment">// 2 - 箭头函数</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		<span class="token keyword">const</span> <span class="token function-variable function">fn</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>		<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		<span class="token comment">// 箭头函数</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		<span class="token keyword">let</span> <span class="token function-variable function">sum</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span>n2</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>			<span class="token keyword">return</span> n1<span class="token operator">+</span>n2<span class="token punctuation">;</span> <span class="token comment">// 只有一句代码，可以简化</span></pre></td></tr><tr><td data-num="45"></td><td><pre>		<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		<span class="token comment">// 00 箭头函数的简化 1</span></pre></td></tr><tr><td data-num="48"></td><td><pre>		<span class="token keyword">let</span> <span class="token function-variable function">sum2</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span>n2</span><span class="token punctuation">)</span><span class="token operator">=></span>n1<span class="token operator">+</span>n2<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum2</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		<span class="token comment">// 00 箭头函数的简化 2</span></pre></td></tr><tr><td data-num="51"></td><td><pre>		<span class="token keyword">let</span> <span class="token function-variable function">sum3</span><span class="token operator">=</span><span class="token parameter">n1</span><span class="token operator">=></span>n1<span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">;</span>  <span class="token comment">// 只有一个参数，可以简化括号</span></pre></td></tr><tr><td data-num="52"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum3</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>		</pre></td></tr><tr><td data-num="54"></td><td><pre>		<span class="token comment">// 01 箭头函数中的 this 指向，箭头函数指向的是上下文的 this</span></pre></td></tr><tr><td data-num="55"></td><td><pre>		<span class="token keyword">let</span> <span class="token function-variable function">sum5</span><span class="token operator">=</span><span class="token parameter">n1</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//window</span></pre></td></tr><tr><td data-num="57"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>		<span class="token function">sum5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>		</pre></td></tr><tr><td data-num="60"></td><td><pre>		<span class="token keyword">let</span> father<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'爸爸'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="62"></td><td><pre>			<span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span></pre></td></tr><tr><td data-num="63"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"fn2的执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>			<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"箭头函数的执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 箭头函数指向的是上下文的 this，在这里就是上两行那个 this</span></pre></td></tr><tr><td data-num="70"></td><td><pre>				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>		</pre></td></tr><tr><td data-num="74"></td><td><pre>		<span class="token keyword">let</span> fn3<span class="token operator">=</span><span class="token function">fn2</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>father<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//call 改变 this 指向便调用函数</span></pre></td></tr><tr><td data-num="75"></td><td><pre>		<span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行箭头函数</span></pre></td></tr><tr><td data-num="76"></td><td><pre>		</pre></td></tr><tr><td data-num="77"></td><td><pre>		<span class="token comment">// 02 箭头函数面试题</span></pre></td></tr><tr><td data-num="78"></td><td><pre>		<span class="token keyword">var</span> obj<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'gg'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="80"></td><td><pre>			<span class="token function-variable function">say</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 对象本身没有 this 指向</span></pre></td></tr><tr><td data-num="82"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>	  obj<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined</span></pre></td></tr><tr><td data-num="85"></td><td><pre>	</pre></td></tr><tr><td data-num="86"></td><td><pre>	<span class="token comment">// 通过 call 改变 this 指向便可以</span></pre></td></tr><tr><td data-num="87"></td><td><pre>	 <span class="token keyword">function</span> <span class="token function">fn4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="89"></td><td><pre>	 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>	 <span class="token function">fn4</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//gg</span></pre></td></tr><tr><td data-num="91"></td><td><pre>	</pre></td></tr><tr><td data-num="92"></td><td><pre>	 <span class="token comment">// 习题</span></pre></td></tr><tr><td data-num="93"></td><td><pre>	 <span class="token keyword">let</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>	 <span class="token comment">//btn.onclick = () => &#123;console.log (this);&#125; //window  上文 this 就是 window</span></pre></td></tr><tr><td data-num="95"></td><td><pre>	  btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//btn  函数中的 this 指向调用者</span></pre></td></tr><tr><td data-num="96"></td><td><pre>	  </pre></td></tr><tr><td data-num="97"></td><td><pre>	  <span class="token comment">//3 - 剩余参数...args  在箭头函数中不能用 argument</span></pre></td></tr><tr><td data-num="98"></td><td><pre>	  <span class="token keyword">const</span> <span class="token function-variable function">fn6</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span><span class="token operator">...</span>args</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[2,3,4]</span></pre></td></tr><tr><td data-num="101"></td><td><pre>		  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2,3,4</span></pre></td></tr><tr><td data-num="102"></td><td><pre>		  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-----------"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="103"></td><td><pre>	  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>	  <span class="token function">fn6</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="105"></td><td><pre> </pre></td></tr><tr><td data-num="106"></td><td><pre> </pre></td></tr><tr><td data-num="107"></td><td><pre>     <span class="token comment">// 例子：求和</span></pre></td></tr><tr><td data-num="108"></td><td><pre>	<span class="token keyword">const</span> <span class="token function-variable function">s</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="109"></td><td><pre>		<span class="token keyword">let</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>		args<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span>t<span class="token operator">+=</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 箭头函数简化写法 一个参数不写括号  一个内容省略 return</span></pre></td></tr><tr><td data-num="111"></td><td><pre>		<span class="token keyword">return</span> t<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="114"></td><td><pre>	</pre></td></tr><tr><td data-num="115"></td><td><pre>	</pre></td></tr><tr><td data-num="116"></td><td><pre>    <span class="token comment">// 4 - 解构和剩余参数结合运用</span></pre></td></tr><tr><td data-num="117"></td><td><pre>	<span class="token keyword">let</span> family<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'lhm'</span><span class="token punctuation">,</span><span class="token string">'ljt'</span><span class="token punctuation">,</span><span class="token string">'ljp'</span><span class="token punctuation">,</span><span class="token string">'ljx'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="118"></td><td><pre>	<span class="token keyword">let</span> <span class="token punctuation">[</span>s1<span class="token punctuation">,</span><span class="token operator">...</span>s2<span class="token punctuation">]</span><span class="token operator">=</span>family<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="119"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lhm</span></pre></td></tr><tr><td data-num="120"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//['ljt','ljp','ljx'];</span></pre></td></tr><tr><td data-num="121"></td><td><pre>	</pre></td></tr><tr><td data-num="122"></td><td><pre>	<span class="token comment">//5 - 扩展运算符 拆分成逗号分割的参数序列</span></pre></td></tr><tr><td data-num="123"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>family<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//lhm ljt ljp ljx</span></pre></td></tr><tr><td data-num="124"></td><td><pre>	<span class="token comment">// 扩展运算符的运用  数组合并</span></pre></td></tr><tr><td data-num="125"></td><td><pre>	<span class="token keyword">let</span> arr1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="126"></td><td><pre>	<span class="token keyword">let</span> arr2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="127"></td><td><pre>	<span class="token keyword">let</span> arr3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span><span class="token operator">...</span>arr2<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 或者 arr1.push (...arr2); console.log (arr1);</span></pre></td></tr><tr><td data-num="128"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="129"></td><td><pre>	</pre></td></tr><tr><td data-num="130"></td><td><pre>	<span class="token comment">// 6-Array 扩展方法</span></pre></td></tr><tr><td data-num="131"></td><td><pre>	<span class="token comment">// 00 Array.from 将类数组！！或可以遍历的对象！！转换为数组 如下形式的数组</span></pre></td></tr><tr><td data-num="132"></td><td><pre>	<span class="token keyword">var</span>  obj6 <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="133"></td><td><pre>		<span class="token string-property property">"0"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="134"></td><td><pre>		<span class="token string-property property">"1"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="135"></td><td><pre>		<span class="token string-property property">"length"</span><span class="token operator">:</span><span class="token number">2</span></pre></td></tr><tr><td data-num="136"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="137"></td><td><pre>	<span class="token keyword">var</span> newArr6<span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>obj6<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="138"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr6<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="139"></td><td><pre>	<span class="token comment">// 转换为数组且遍历</span></pre></td></tr><tr><td data-num="140"></td><td><pre>	<span class="token keyword">var</span> newArr7<span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>obj6<span class="token punctuation">,</span><span class="token parameter">item</span><span class="token operator">=></span>item<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="141"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr7<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="142"></td><td><pre>	<span class="token comment">//01 Array.find () 进行查找 找出第一个符合条件的成员  没有返回 undefined</span></pre></td></tr><tr><td data-num="143"></td><td><pre>	<span class="token keyword">let</span> arr7<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="144"></td><td><pre>		<span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="145"></td><td><pre>		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'lhm'</span></pre></td></tr><tr><td data-num="146"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="147"></td><td><pre>		<span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="148"></td><td><pre>		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'ljt'</span></pre></td></tr><tr><td data-num="149"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="150"></td><td><pre>	</pre></td></tr><tr><td data-num="151"></td><td><pre>	<span class="token keyword">let</span> target<span class="token operator">=</span>arr7<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span>item<span class="token punctuation">.</span>id<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="152"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&#123;id:2,name:'ljt'&#125;</span></pre></td></tr><tr><td data-num="153"></td><td><pre>	</pre></td></tr><tr><td data-num="154"></td><td><pre>	<span class="token comment">// 02 findIndex 返回符合条件的索引</span></pre></td></tr><tr><td data-num="155"></td><td><pre>	<span class="token keyword">let</span> index<span class="token operator">=</span>arr7<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span>item<span class="token punctuation">.</span>name<span class="token operator">==</span><span class="token string">'ljt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="156"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="157"></td><td><pre>	</pre></td></tr><tr><td data-num="158"></td><td><pre>	<span class="token comment">// 03 includes 方法 true 包含 false 不包含 判断数组中是否有这个值</span></pre></td></tr><tr><td data-num="159"></td><td><pre>	<span class="token keyword">let</span> arr8<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="160"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr8<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="161"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr8<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="162"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr8<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span></pre></td></tr><tr><td data-num="163"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"----------"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="164"></td><td><pre>	<span class="token comment">// 8-Set 数据结构  类数组 但是没有重复的值 常在搜索历史中使用</span></pre></td></tr><tr><td data-num="165"></td><td><pre>	<span class="token comment">// 创建</span></pre></td></tr><tr><td data-num="166"></td><td><pre>	<span class="token keyword">let</span> ss2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="167"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ss2<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0</span></pre></td></tr><tr><td data-num="168"></td><td><pre>	<span class="token keyword">let</span> ss3<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="169"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ss3<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2</span></pre></td></tr><tr><td data-num="170"></td><td><pre>	<span class="token comment">// 常用数组去重</span></pre></td></tr><tr><td data-num="171"></td><td><pre>	<span class="token keyword">let</span> ss4<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="172"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ss4<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2</span></pre></td></tr><tr><td data-num="173"></td><td><pre>	<span class="token keyword">let</span> newArr4<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span>ss4<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="174"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr4<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="175"></td><td><pre>	<span class="token comment">// Set 方法 add delete has clear 遍历 forEach</span></pre></td></tr><tr><td data-num="176"></td><td><pre>	ss4<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'e'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="177"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ss4<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4</span></pre></td></tr><tr><td data-num="178"></td><td><pre>	ss4<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 返回布尔值 代表是删除成功</span></pre></td></tr><tr><td data-num="179"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ss4<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3</span></pre></td></tr><tr><td data-num="180"></td><td><pre>	ss4<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">"c"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 返回布尔值 代表是否拥有</span></pre></td></tr><tr><td data-num="181"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ss4<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">"c"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="182"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Set遍历"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="183"></td><td><pre>	ss4<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="184"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="185"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="186"></td><td><pre>	ss4<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 没有返回值</span></pre></td></tr><tr><td data-num="187"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"set清除"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="188"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ss4<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0</span></pre></td></tr><tr><td data-num="189"></td><td><pre>	</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="190"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="191"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>认识函数</title>
    <url>/2020/09/18/%E8%AE%A4%E8%AF%86%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>函数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>发送短信1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>发送短信2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>发送短信3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">	</pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token comment">// 1 - 创建函数方式</span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token comment">// 01 自定义函数</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>		<span class="token comment">// 02 函数体方式 </span></pre></td></tr><tr><td data-num="16"></td><td><pre>		<span class="token keyword">var</span> <span class="token function-variable function">fn</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token comment">// 03 创建对象方式</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token comment">// 所有函数都是 Function 的实例</span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token keyword">var</span> fn<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'console.log(a+b)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调用</span></pre></td></tr><tr><td data-num="21"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token comment">// 所有的函数都是 Function 的实例 对象</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>		</pre></td></tr><tr><td data-num="26"></td><td><pre>		<span class="token comment">// 2 - 函数的调用</span></pre></td></tr><tr><td data-num="27"></td><td><pre>		<span class="token comment">//01 普通函数调用 fn () fn.call (o)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		<span class="token comment">//02 对象函数  ldh.sayHi ();</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		<span class="token comment">//03 构造函数  new Star ()</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		<span class="token comment">//04 绑定事件函数  btn.onclick=function ()&#123;&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		<span class="token comment">//05 定时器函数 setIterval (function ()&#123;&#125;,1000);</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token comment">//06 立即执行函数 (function ()&#123;console.log ("立即执行，到达人生巅峰！")&#125;)()</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		<span class="token comment">// (function ()&#123;console.log ("立即执行，到达人生巅峰！")&#125;)()</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		</pre></td></tr><tr><td data-num="35"></td><td><pre>		<span class="token comment">// 3-this 指向问题  	一般情况下指向函数调用者</span></pre></td></tr><tr><td data-num="36"></td><td><pre>		<span class="token comment">//01 普通函数调用 </span></pre></td></tr><tr><td data-num="37"></td><td><pre>		<span class="token comment">//fn ()  this 指向 window</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		<span class="token comment">//fn.call (o)  this 指向对象 o</span></pre></td></tr><tr><td data-num="39"></td><td><pre>		<span class="token comment">//02 对象函数  ldh.sayHi ();  this 指向实例对象 ldh</span></pre></td></tr><tr><td data-num="40"></td><td><pre>		<span class="token comment">//03 构造函数  new Star ()  指向实力对象  eg:zxy=new Star ("" 张学友) this 指向 zxy</span></pre></td></tr><tr><td data-num="41"></td><td><pre>		<span class="token comment">//04 绑定事件函数  btn.onclick=function ()&#123;&#125;  this 指向 btn 指向函数调用者</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		<span class="token comment">//05 定时器函数 setIterval (function ()&#123;&#125;,1000);  this 指向 window</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		<span class="token comment">//06 立即执行函数 (function ()&#123;console.log ("立即执行，到达人生巅峰！")&#125;)()  this 指向 window</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		</pre></td></tr><tr><td data-num="45"></td><td><pre>		 <span class="token comment">// 4 - 改变 this 指向</span></pre></td></tr><tr><td data-num="46"></td><td><pre>		 <span class="token comment">// 01 call 方法  call 调用函数  改变 this 指向 实现继承</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		 <span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>			 <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'lhm'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre>			 <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>		 <span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>			 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>			 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'----'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>			 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>		 <span class="token function">fn2</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>		 <span class="token keyword">function</span> <span class="token function">Father</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>			 <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>			 <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>		 <span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sing</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>			 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'会唱歌！'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="63"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>		 <span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>			 <span class="token comment">// 实现继承</span></pre></td></tr><tr><td data-num="66"></td><td><pre>			 <span class="token function">Father</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>		  <span class="token comment">// 继承父亲 prototype 方法</span></pre></td></tr><tr><td data-num="69"></td><td><pre>		  <span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>		  <span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token operator">=</span>Son<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>		 <span class="token keyword">let</span> son<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token string">"刘德华"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'--'</span><span class="token operator">+</span>son<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>		 son<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>		 <span class="token comment">// 02 apply 方法  跟 call 方法一样  要求第二个参数是一个数组</span></pre></td></tr><tr><td data-num="75"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"apply方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>		 <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token comment">// 传多了就接收前面的</span></pre></td></tr><tr><td data-num="77"></td><td><pre>		 <span class="token function">fn2</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>		 <span class="token comment">//apply 内置应用</span></pre></td></tr><tr><td data-num="79"></td><td><pre>		 <span class="token keyword">let</span> max<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>		 <span class="token comment">// 03 bind 方法  bind 捆绑 改变 this 指向   跟 call 一样，但是 call 可以调用函数 bind 不可以调用函数</span></pre></td></tr><tr><td data-num="82"></td><td><pre>		 <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token function">fn2</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 不调用 但是返回一个新函数，a 就是改变 this 指向产生的新函数</span></pre></td></tr><tr><td data-num="83"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"bind方法："</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>	     <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>		 <span class="token comment">//bind 方法应用 实际开发用的最多</span></pre></td></tr><tr><td data-num="86"></td><td><pre>		 <span class="token comment">// 有的函数不想立即调用，但是又想改变 this 指向</span></pre></td></tr><tr><td data-num="87"></td><td><pre>		 <span class="token comment">// 发送短信案例 点击之后禁用 3s 才能点击 让定时器自己调用</span></pre></td></tr><tr><td data-num="88"></td><td><pre>		 <span class="token keyword">var</span> btns<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="89"></td><td><pre>		 btns<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>			 item<span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="91"></td><td><pre>				 <span class="token keyword">this</span><span class="token punctuation">.</span>disabled<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>				 <span class="token comment">//bind 不会立即调用 让 setTimeout 调用 但成功改变 this 指向</span></pre></td></tr><tr><td data-num="93"></td><td><pre>				 <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>					<span class="token keyword">this</span><span class="token punctuation">.</span>disabled<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="95"></td><td><pre>				 <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="96"></td><td><pre>			 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>		 <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="98"></td><td><pre>		<span class="token comment">////call apply bind 总结</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		<span class="token comment">//call apply 基本一样，call 经常做继承 apply 传参必须是数组，经常跟数组相关</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		<span class="token comment">//bind 不会调用函数 fn.bind () 不调用  跟定时器经常相关</span></pre></td></tr><tr><td data-num="101"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="102"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="103"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>递归函数及深浅拷贝</title>
    <url>/2020/10/30/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E5%8F%8A%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D/</url>
    <content><![CDATA[<h3 id="深拷贝-浅拷贝"><a class="anchor" href="#深拷贝-浅拷贝">#</a> 深拷贝 &amp; 浅拷贝</h3>
<ul>
<li>浅拷贝：仅仅是复制了引用，彼此之间的操作会互相影响，相同地址</li>
<li>深拷贝：在堆中重新分配内存，不同的地址，相同的值，互不影响</li>
</ul>
<p>总的来说，深浅拷贝的主要区别就是：复制的是引用还是复制的是实例</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>递归函数及深浅拷贝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		</pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="10"></td><td><pre>		<span class="token comment">// 递归函数：一个函数在内部调用本身，我们就说这个函数是递归函数，自己调用自己，防止栈溢出，一定要加上 return;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token comment">// 打印 6 句话</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token keyword">let</span> num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"递归打印"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token operator">&lt;=</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>				num<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>				<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>			<span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token comment">// 应用：利用递归求阶乘</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>			<span class="token comment">// 递归必须加 return 实行退出</span></pre></td></tr><tr><td data-num="26"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>			<span class="token keyword">return</span>  n<span class="token operator">*</span><span class="token function">f</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		<span class="token comment">// 递归求斐波那契数列（兔子数列）1 1 2 3 5 8 13 21 ... 前两项的和就是后一项</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		<span class="token comment">// 01 用户输入一个数字，就可以求出是这个数字对应的兔子序列  输入 3 打印 3 对应的序列值 2</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token keyword">let</span> start<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		<span class="token keyword">let</span> sum<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">2</span><span class="token operator">||</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>			<span class="token keyword">return</span> <span class="token function">g</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">g</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"递归数列："</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="39"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>	  <span class="token comment">// 02 应用 根据 id 返回数据对象</span></pre></td></tr><tr><td data-num="41"></td><td><pre>	  <span class="token keyword">var</span> data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'家电'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		  <span class="token literal-property property">goods</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="46"></td><td><pre>			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'冰箱'</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre>			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'洗衣机'</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">13</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="52"></td><td><pre>			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'服饰'</span></pre></td></tr><tr><td data-num="53"></td><td><pre>		  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="54"></td><td><pre>	  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="55"></td><td><pre>	  <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>	  		  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="57"></td><td><pre>	  		  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'哈哈'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="58"></td><td><pre>	  		  <span class="token literal-property property">goods</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>	  			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="60"></td><td><pre>	  			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'冰箱2'</span></pre></td></tr><tr><td data-num="61"></td><td><pre>	  		  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>	  			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">22</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="63"></td><td><pre>	  			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'洗衣机2'</span></pre></td></tr><tr><td data-num="64"></td><td><pre>	  		  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>	  			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="66"></td><td><pre>	  			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'服饰2'</span></pre></td></tr><tr><td data-num="67"></td><td><pre>	  		  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="68"></td><td><pre>	  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="69"></td><td><pre>	 <span class="token keyword">var</span> ooo<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>	  <span class="token keyword">function</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span>id</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>		<span class="token comment">// 遍历数组</span></pre></td></tr><tr><td data-num="72"></td><td><pre>		arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>id<span class="token operator">==</span>id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>				ooo<span class="token operator">=</span>item<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>				<span class="token keyword">return</span> item<span class="token punctuation">;</span>  <span class="token comment">// 赋值给 else if 的递归结果</span></pre></td></tr><tr><td data-num="76"></td><td><pre>				<span class="token comment">// 利用递归，遍历里层数据  如果外面没有的话</span></pre></td></tr><tr><td data-num="77"></td><td><pre>			<span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>goods <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>					ooo<span class="token operator">=</span><span class="token function">getId</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>goods<span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>		<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>		<span class="token keyword">return</span> ooo<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>	  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"根据id返回对象:"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="84"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>		</pre></td></tr><tr><td data-num="88"></td><td><pre>		<span class="token comment">// 3 - 浅拷贝 拷贝一层  里面的 goods 拷贝的是地址 导致两个地址一样</span></pre></td></tr><tr><td data-num="89"></td><td><pre>		<span class="token keyword">var</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>	   <span class="token comment">// 浅拷贝方法 1</span></pre></td></tr><tr><td data-num="91"></td><td><pre>		<span class="token comment">// for(let key in data)&#123;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>		<span class="token comment">// 	b[key]=data[key];</span></pre></td></tr><tr><td data-num="93"></td><td><pre>		<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>		<span class="token comment">// 浅拷贝方法 2</span></pre></td></tr><tr><td data-num="95"></td><td><pre>		Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"b拷贝"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="97"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  </pre></td></tr><tr><td data-num="98"></td><td><pre>		b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>goods<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>gname<span class="token operator">=</span><span class="token string">"呵呵呵浅拷贝地址相同改名"</span><span class="token punctuation">;</span>  <span class="token comment">// 导致 b 和 data 都改了</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		</pre></td></tr><tr><td data-num="101"></td><td><pre>		<span class="token comment">//04 深拷贝  将拷贝的数据开辟另外的空间</span></pre></td></tr><tr><td data-num="102"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token string">"object"</span><span class="token operator">||</span><span class="token operator">!</span>obj<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>			<span class="token keyword">let</span> newObj<span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="105"></td><td><pre>			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="106"></td><td><pre>				<span class="token comment">// 拥有 key 值</span></pre></td></tr><tr><td data-num="107"></td><td><pre>			   <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="108"></td><td><pre>				   <span class="token comment">// 进行递归  数组对象就递归 deepClone 再次查询 简单类型直接赋值</span></pre></td></tr><tr><td data-num="109"></td><td><pre>				   newObj<span class="token operator">=</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">"object"</span><span class="token operator">?</span><span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>			   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="111"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>			<span class="token keyword">return</span> newObj<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="114"></td><td><pre>		c<span class="token operator">=</span><span class="token function">deepClone</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="115"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"深拷贝"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="116"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="117"></td><td><pre>		c<span class="token punctuation">.</span>goods<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>gname<span class="token operator">=</span><span class="token string">"深拷贝修改"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="118"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 深拷贝没有修改到原先的数据</span></pre></td></tr><tr><td data-num="119"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="120"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="121"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>闭包</title>
    <url>/2020/11/20/%E9%97%AD%E5%8C%85/</url>
    <content><![CDATA[<h1 id="学习笔记"><a class="anchor" href="#学习笔记">#</a> 学习笔记</h1>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>高阶和闭包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>内容1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>内容2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>内容3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>内容4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="15"></td><td><pre>			<span class="token comment">// 1 - 高阶函数是对其它函数进行操作的函数</span></pre></td></tr><tr><td data-num="16"></td><td><pre>			<span class="token comment">//01 高阶函数：把函数作为参数</span></pre></td></tr><tr><td data-num="17"></td><td><pre>			<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>				callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>			<span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"高阶函数！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>			<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>			<span class="token comment">//02 高阶函数：返回一个函数</span></pre></td></tr><tr><td data-num="24"></td><td><pre>			<span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>				<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"高阶函数的返回"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>			<span class="token keyword">let</span> fn2 <span class="token operator">=</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>			<span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre> </pre></td></tr><tr><td data-num="32"></td><td><pre>			<span class="token comment">// 2 - 闭包 Closure 有权访问另一个作用域中变量的函数。 --javaScript 高级程序设计</span></pre></td></tr><tr><td data-num="33"></td><td><pre>			<span class="token comment">// 简单理解  一个作用域可以访问另外一个函数内部的局部变量</span></pre></td></tr><tr><td data-num="34"></td><td><pre>			<span class="token keyword">function</span> <span class="token function">fn4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>				<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>				<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"闭包拿到的值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>					num<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>			<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">fn4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>			<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>			<span class="token comment">// 闭包存储了 num 没有释放</span></pre></td></tr><tr><td data-num="45"></td><td><pre>			<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>			<span class="token comment">// 3 - 闭包的运用</span></pre></td></tr><tr><td data-num="47"></td><td><pre>			<span class="token comment">// 点击 li 得到索引不用再添加 index 属性</span></pre></td></tr><tr><td data-num="48"></td><td><pre>			<span class="token keyword">let</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"ul li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>		 <span class="token comment">// 闭包形式</span></pre></td></tr><tr><td data-num="50"></td><td><pre>			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>			 <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>					lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="54"></td><td><pre>					<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>			 <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre> </pre></td></tr><tr><td data-num="57"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>			<span class="token comment">// 闭包应用 02 2s 之后打印 li 的内容 异步任务不会立即执行，放到任务队列里面，即使是 0 也要等待</span></pre></td></tr><tr><td data-num="59"></td><td><pre>			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>				<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>					<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>					<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre>				<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="65"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>			</pre></td></tr><tr><td data-num="67"></td><td><pre>			<span class="token comment">// 闭包应用 03 计算打车价格  起步价 13（3 公里内） 之后一公里 5 元 用户输入公里数 拥堵多收 10 元</span></pre></td></tr><tr><td data-num="68"></td><td><pre>			<span class="token keyword">var</span> car<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">distance</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>		    <span class="token keyword">let</span> start<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">;</span><span class="token comment">// 起步价  局部变量</span></pre></td></tr><tr><td data-num="70"></td><td><pre>			<span class="token keyword">let</span> total<span class="token punctuation">;</span> <span class="token comment">// 总价 局部变量</span></pre></td></tr><tr><td data-num="71"></td><td><pre>			<span class="token keyword">return</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>				<span class="token function-variable function">normal</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">distance</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>					<span class="token keyword">if</span><span class="token punctuation">(</span>distance<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>						total<span class="token operator">=</span>start<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>					<span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>						total<span class="token operator">=</span>start<span class="token operator">+</span><span class="token number">5</span><span class="token operator">*</span><span class="token punctuation">(</span>distance<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>					<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>					<span class="token keyword">return</span> total<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>				<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="80"></td><td><pre>				<span class="token function-variable function">yd</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>					<span class="token keyword">return</span> flag<span class="token operator">?</span>total<span class="token operator">+</span><span class="token number">10</span><span class="token operator">:</span>total<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>			<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="85"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"车费："</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span><span class="token function">normal</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span><span class="token function">yd</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span><span class="token function">yd</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="89"></td><td><pre>			</pre></td></tr><tr><td data-num="90"></td><td><pre>			<span class="token comment">// 思考题</span></pre></td></tr><tr><td data-num="91"></td><td><pre>			<span class="token keyword">let</span> name<span class="token operator">=</span><span class="token string">"the window"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>			<span class="token keyword">let</span> obj1<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="93"></td><td><pre>				<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'myObj1'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="94"></td><td><pre>				<span class="token function-variable function">getNameTest</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="95"></td><td><pre>					<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>						<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>					<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="98"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="99"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="100"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span><span class="token function">getNameTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>			</pre></td></tr><tr><td data-num="102"></td><td><pre>			<span class="token keyword">let</span> obj2<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>				<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'myObj2'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="104"></td><td><pre>				<span class="token function-variable function">getNameTest</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="105"></td><td><pre>					<span class="token keyword">let</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="106"></td><td><pre>					<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="107"></td><td><pre>						<span class="token keyword">return</span> that<span class="token punctuation">.</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="108"></td><td><pre>					<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="109"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>			<span class="token punctuation">&#125;</span>	</pre></td></tr><tr><td data-num="111"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span><span class="token function">getNameTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="113"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="114"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><h1 id="拓展理解"><a class="anchor" href="#拓展理解">#</a> 拓展理解</h1>
<h2 id="使用闭包的其他几类场景"><a class="anchor" href="#使用闭包的其他几类场景">#</a> 使用闭包的其他几类场景</h2>
<p>1、函数作为参数</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">'Rocky'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">'foo'</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">function</span> <span class="token function">fo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">return</span> fo</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">'f'</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token function">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// foo</span></pre></td></tr></table></figure><p>先看 <code>f(foo())</code>  里面的 <code>foo()</code> ，它执行完之后，里面的变量 <code>a</code>  没有被回收，因为被 <code>fo()</code>  引用着，所以 <code>foo()</code>  与其词法环境就是一个闭包。</p>
<p>2、使用回调函数就是在使用闭包</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>window<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'Rocky'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">timeHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>3、节流与防抖</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 防抖</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">50</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">let</span> timer</pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>wait<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">// 节流</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">let</span> canRun <span class="token operator">=</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>canRun<span class="token punctuation">)</span> <span class="token keyword">return</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        canRun <span class="token operator">=</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token function">setTimeout</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            canRun <span class="token operator">=</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="使用闭包需要注意什么"><a class="anchor" href="#使用闭包需要注意什么">#</a> 使用闭包需要注意什么</h2>
<blockquote>
<p>容易导致内存泄漏。闭包会携带包含其它的函数作用域，因此会比其他函数占用更多的内存。过度使用闭包会导致内存占用过多，所以要谨慎使用闭包。</p>
</blockquote>
<h2 id="闭包的内存泄漏"><a class="anchor" href="#闭包的内存泄漏">#</a> 闭包的内存泄漏</h2>
<p>在文章开始我们提到了：<strong>不正当地使用闭包可能会造成内存泄漏。</strong></p>
<p>先看以下两个例子：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">let</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">'rocky'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Rocky'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">let</span> fn1Child <span class="token operator">=</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token function">fn1Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>上例是一个闭包，但是它造成内存泄漏了吗？并没有，因为返回的函数中并没有对  <code>fn1</code>  函数内部的引用，也就是说，函数  <code>fn1</code>  内部的  <code>test</code>  变量完全是可以被回收的，那我们再来看：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">let</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">'rocky'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">return</span> test</pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">let</span> fn2Child <span class="token operator">=</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token function">fn2Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>显然它也是闭包，并且因为  <code>return</code>  的函数中存在函数  <code>fn2</code>  中的  <code>test</code>  变量引用，所以  <code>test</code>  并不会被回收，也就造成了内存泄漏。</p>
<p>那么怎样解决呢？</p>
<p>其实在函数调用后，把外部的引用关系置空就好了，如下：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">let</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">'rocky'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">return</span> test</pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">let</span> fn2Child <span class="token operator">=</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token function">fn2Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>fn2Child <span class="token operator">=</span> <span class="token keyword">null</span>  <span class="token comment">// 置空</span></pre></td></tr></table></figure><p>综上，我们以后就不要再说闭包会造成内存泄漏啦！</p>
<p>应该说成：<strong>不正当地使用闭包可能会造成内存泄漏。</strong></p>
<h2 id="怎么检查内存泄露"><a class="anchor" href="#怎么检查内存泄露">#</a> 怎么检查内存泄露</h2>
<ul>
<li>performance 面板 和 memory 面板可以找到泄露的现象和位置</li>
</ul>
<p>详细可以查看：<span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTA0MDQ4OTYxNzgxNzc0I2NvbW1lbnQ=">js 内存泄漏场景、如何监控以及分析</span></p>
<h2 id="闭包的作用"><a class="anchor" href="#闭包的作用">#</a> 闭包的作用</h2>
<p>OK，最后来概括一下闭包的作用</p>
<ul>
<li>保护函数的私有变量不受外部的干扰。形成不销毁的栈内存。</li>
<li>保存，把一些函数内的值保存下来。闭包可以实现方法和属性的私有化</li>
</ul>
<h2 id="更多精彩"><a class="anchor" href="#更多精彩">#</a> 更多精彩</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTM3NDY5MjIyMjUxNTYwOTkw">JS 闭包经典使用场景和含闭包必刷题</span></p>
]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>函数</tag>
        <tag>闭包</tag>
      </tags>
  </entry>
  <entry>
    <title>html语义化</title>
    <url>/2020/09/16/html%E8%AF%AD%E4%B9%89%E5%8C%96/</url>
    <content><![CDATA[<h1 id="语义化"><a class="anchor" href="#语义化">#</a> 语义化</h1>
<p>HTML 语义化：就是页面去掉样式或者加载失败的时候能够让页面呈现出清晰的结构。HTML5 新增了好多语义化的标签，例如：header、footer、nav、menu、section、article 等等，单单从字面上理解，就知道标签的含义。在写页面的时候，我们可以直接引用这些标签，不需要再用没有任何含义的 div 标签了，对于机器可以识别，对于开发人员很容易明白。这就是 HTML 语义化。</p>
<h1 id="好处"><a class="anchor" href="#好处">#</a> 好处</h1>
<p>1）为了在没有 CSS 的情况下，页面也能呈现出很好地内容结构、代码结构<br />
 2）用户体验：例如 title、alt 用于解释名词<br />
 3）有利于 SEO：利于被搜索引擎收录，更便于搜索引擎的爬虫程序来识别<br />
 4）方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页<br />
 5）便于项目的开发及维护，使 HTML 代码更具有可读性</p>
]]></content>
      <categories>
        <category>html</category>
      </categories>
  </entry>
</search>

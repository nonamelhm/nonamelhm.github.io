<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>webpack</title>
    <url>/2020/10/18/webpack/</url>
    <content><![CDATA[<p>webpack 官网    <span class="exturl" data-url="aHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy8=">https://webpack.js.org/</span></p>
<h2 id="安装nodejs"><a class="anchor" href="#安装nodejs">#</a> 安装 nodejs</h2>
<p>​        如何安装自己看官网教程，webpack 依赖于 nodejs</p>
<h2 id="初始化文件"><a class="anchor" href="#初始化文件">#</a> 初始化文件</h2>
<p>​      创建文件夹 eg:webpack_sudy</p>
<p>​       打开终端  npm init -y</p>
<h2 id="创建源文件src"><a class="anchor" href="#创建源文件src">#</a> 创建源文件 src</h2>
<p>​     在 webpack_study 文件下</p>
<p>​     建立 src 文件夹</p>
<p>​     src 文件夹下创建 index.js 入口文件，自己输入点内容 index.js</p>
<h2 id="打包js文件"><a class="anchor" href="#打包js文件">#</a> 打包 js 文件</h2>
<p>输入 webpack</p>
<p>或  webpack 打包文件  -o 输出文件 --mode=development</p>
<p>eg(webpack ./src/index.js -o ./build/main.js –mode=development)</p>
<p>建立一个 html 文件，引入打包文件 js 即可看到是否打包成功</p>
<h2 id="创建打包配置文件webpackconfigjs"><a class="anchor" href="#创建打包配置文件webpackconfigjs">#</a> 创建打包配置文件 webpack.config.js</h2>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'main.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>   </pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      </pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>基本属性结构如上，根据配置再补充</p>
<h2 id="打包css文件"><a class="anchor" href="#打包css文件">#</a> 打包 css 文件</h2>
<p>webpack 不能打包 css 文件，需要解除 loader</p>
<p>配置如下，即在上面 module:{} 里面配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>在 js 里面 import ‘css 文件’</p>
<p>建立一个 html 文件，引入打包文件 js 即可看到是否打包成功</p>
<h2 id="打包html文件"><a class="anchor" href="#打包html文件">#</a> 打包 html 文件</h2>
<p>需要借助插件 html-webpack-plugin</p>
<h3 id="安装html-webpack-plugin"><a class="anchor" href="#安装html-webpack-plugin">#</a> 安装 html-webpack-plugin</h3>
<p>安装命令  -D 为本地安装</p>
<p>npm install html-webpack-plugin -D</p>
<h3 id="webpackconfigjs配置"><a class="anchor" href="#webpackconfigjs配置">#</a> webpack.config.js 配置</h3>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 开头引入</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">// 之后在里面 plugins 属性里面配置</span></pre></td></tr><tr><td data-num="5"></td><td><pre> <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr></table></figure><h3 id="打包运行"><a class="anchor" href="#打包运行">#</a> 打包运行</h3>
<p>命令 webpack</p>
<p>即可看到打包文件中多了一个 index.html</p>
<h2 id="打包图片文件"><a class="anchor" href="#打包图片文件">#</a> 打包图片文件</h2>
<p>气死了气死了气死了，卡了好久好久不能正常显示，原来是版本太高的问题，呕血！！！！！</p>
<p>注意：推荐使用版本较低的，比如以下版本，于是实在出问题摸不着头脑的时候便按照以下图片修改了版本</p>
<p>重新安装版本</p>
<p>npm i css-loader@5.2.4 -D</p>
<p>npm i style-loader@2.0.0 -D</p>
<p><img data-src="/images/webpack/1649377283108.png" alt="1649377283108" /></p>
<h3 id="css中的图片背景"><a class="anchor" href="#css中的图片背景">#</a> css 中的图片背景</h3>
<p>​    （ 使用 url-loader,url-loader 依靠 file-loader）</p>
<p>​    下载安装  npm i url-loader file-loader -D</p>
<p>​     在 module 里面配置 rules:[{}]</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre> <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="12"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>                    <span class="token comment">// 超过大小 file-loader 打包</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                    <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images/'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><h3 id="html里面的img"><a class="anchor" href="#html里面的img">#</a> html 里面的 img</h3>
<p>使用 html-loader (加配置，可能会出错）或</p>
<p>html-withimg-loader</p>
<p>安装  npm i html-loader -D   或</p>
<p>​         npm i html-withimg-loader -D</p>
<p>在 module 里面配置 rules:[{}]</p>
<h4 id="用html-loader配置"><a class="anchor" href="#用html-loader配置">#</a> 用 html-loader 配置</h4>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h4 id="用html-withimg-loader推荐这个"><a class="anchor" href="#用html-withimg-loader推荐这个">#</a> 用 html-withimg-loader（推荐这个）</h4>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="打包其他资源"><a class="anchor" href="#打包其他资源">#</a> 打包其他资源</h2>
<p>（其他资源：不需要做任何处理，原封不动输出出去就可以）</p>
<h3 id="打包字体图标示例"><a class="anchor" href="#打包字体图标示例">#</a> 打包字体图标示例</h3>
<p>这里使用 iconfont 阿里云矢量图标库</p>
<p>下载解压引入 iconfont.css     在入口文件 index.js 设置</p>
<p>import   ‘’iconfont.css 路径 “</p>
<p>看到 iconfont.css 中需要几个文件一同引入过来</p>
<p>（utl 根据实际情况更改）</p>
<p><img data-src="/images/webpack/1649377304788.png" alt="1649377304788" /></p>
<p>引入目录为（有些还需要 svg，看 iconfont.css 需要什么）</p>
<p><img data-src="/images/webpack/1649377319020.png" alt="1649377319020" /></p>
<p>于是在 index.html 配置引用</p>
<p>（本人在这里傻逼了，class 没写，一直还以为哪里出错）</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>webpack打包文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>webpack打包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>其他资源打包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-shezhi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-dingdan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-shangpin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-yonghuqun<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-quanxian<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>webpack.config.js  module 中 rules:[{}] 配置为</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="2"></td><td><pre> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>             <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre> <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>打包运行命令 webpack  打包成功</p>
<h2 id="devserver"><a class="anchor" href="#devserver">#</a> devServer</h2>
<p>​    帮助自动打包，修改代码后，不需要每次 webpack 打包</p>
<ul>
<li>
<p>安装工具 webapck-dev-server  npm i  webpack-dev-server -D</p>
</li>
<li>
<p>配置命令 mode 属性同级下配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li>
<li>
<p>运行命令 npx webpack-dev-server</p>
<p>在源文件 src 里面修改代码保存即自动打包，刷新浏览器即可看到（建立安装 vscode 自动刷新插件 ---Live Server，实现保存即可看到浏览器内容，无须刷新)</p>
<p>下载好在需要监听的 html 文件右键，选择 open with Live Server</p>
</li>
</ul>
<h2 id="以上打包完整代码"><a class="anchor" href="#以上打包完整代码">#</a> 以上打包完整代码</h2>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">// 输出目录</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'bundle.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                    <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre>                    <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre>            <span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(htm|html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="54"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="55"></td><td><pre>            <span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="58"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="59"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="66"></td><td><pre></pre></td></tr><tr><td data-num="67"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="71"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span></pre></td></tr><tr><td data-num="74"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="75"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="76"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="77"></td><td><pre>    <span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="78"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="79"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="80"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token comment">// 可写可不写</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        <span class="token keyword">static</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>            <span class="token literal-property property">directory</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="89"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="90"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="91"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="92"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="多文件配置"><a class="anchor" href="#多文件配置">#</a> 多文件配置</h2>
<p>这里以 index.html 和 login.html 为例子</p>
<ul>
<li>配置多个入口</li>
</ul>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 多文件配置多个入口</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token string">'./src/login.js'</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><ul>
<li>配置多个输出</li>
</ul>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token comment">// 多文件输出</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><ul>
<li>
<p>复制多个 html 文件</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token comment">// 多文件</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token comment">// 复制入门文件 login.html 结构样式</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>完整代码为：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// entry: './src/index.js',</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 多文件配置多个入口</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token string">'./src/login.js'</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">// 输出目录</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// path: path.resolve(__dirname, 'dist'),</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token comment">// filename: 'bundle.js',</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// 多文件输出</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                    <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                    <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="51"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="57"></td><td><pre></pre></td></tr><tr><td data-num="58"></td><td><pre>            <span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(htm|html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="62"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="66"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="67"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="73"></td><td><pre></pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="75"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="78"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="80"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="81"></td><td><pre>            <span class="token comment">// 输出文件名字</span></pre></td></tr><tr><td data-num="82"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="83"></td><td><pre>            <span class="token comment">// 打包优化</span></pre></td></tr><tr><td data-num="84"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token comment">// 多文件</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>            <span class="token comment">// 复制入门文件 login.html 结构样式</span></pre></td></tr><tr><td data-num="89"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="90"></td><td><pre>            <span class="token comment">// 输出文件名字</span></pre></td></tr><tr><td data-num="91"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="92"></td><td><pre>            <span class="token comment">// 打包优化</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="95"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="96"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="97"></td><td><pre>    <span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="98"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="99"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="100"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="102"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="103"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="104"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="105"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="106"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="107"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="108"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="109"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="110"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>多文件打包成功</p>
</li>
</ul>
<h2 id="babel配置"><a class="anchor" href="#babel配置">#</a> babel 配置</h2>
<p>babel: 将高版本的 js 语法转换为低版本浏览器能识别的语法</p>
<ul>
<li>
<p>安装</p>
<p>npm i babel-loader @babel/core @babel/preset-env -D</p>
<p>再安装 否则处理不了对象的方法（ 比如 eg：arr.includes (4)  ）</p>
<p>npm i @babel/polyfill -S</p>
</li>
<li>
<p>配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">//babel 转换</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.\js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                    <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/env'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>index.js 中引入对象的方法处理</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token string">'@babel/polyfill'</span></pre></td></tr></table></figure></li>
<li>
<p>打包 看看打包的 js 文件中是否将高版本语法转换为低版本语法</p>
</li>
</ul>
<h2 id="sourcemap源码映射"><a class="anchor" href="#sourcemap源码映射">#</a> sourceMap 源码映射</h2>
<p>源码的映射，通过 sourceMap 打包找到真正源码的位置</p>
<ul>
<li>解决编出来的源码位置并不是实际的位置，比如<img data-src="/images/webapck%E6%89%93%E5%8C%85/image-20220306133502413.png" alt="image-20220306133502413" /></li>
</ul>
<p>问题：点击上图右侧，并不是真正 index.js 映射的源码位置</p>
<p>面试官问 map 文件是什么？就是 sourceMap 源码映射</p>
<p>详情官网 <span class="exturl" data-url="aHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9jb25maWd1cmF0aW9uL2RldnRvb2wvI3Jvb3Q=">https://webpack.js.org/configuration/devtool/#root</span></p>
<p><img data-src="/images/webpack/1649377493782.png" alt="1649377493782" /></p>
<p>配置如下：（开发模式下建立用 3 不生成 map 文件且为源码）</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">devtool</span><span class="token operator">:</span><span class="token string">'eval-cheap-module-source-map'</span></pre></td></tr></table></figure><h2 id="使用第三方插件"><a class="anchor" href="#使用第三方插件">#</a> 使用第三方插件</h2>
<p>全局使用第三方插件 比如 jquery $</p>
<p>下载第三方插件</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm i jquery <span class="token operator">-</span><span class="token constant">S</span></pre></td></tr></table></figure><p>配置 webpack 自带插件</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">//plugins 里面配置</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">[</span> </pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 第三方库 jquery 挂载使用</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token string">'jquery'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token literal-property property">jQuery</span><span class="token operator">:</span> <span class="token string">'jquery'</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">]</span></pre></td></tr></table></figure><p>在 js 文件直接使用即可实现</p>
<h2 id="webpack区分生产环境和开发分包"><a class="anchor" href="#webpack区分生产环境和开发分包">#</a> webpack 区分生产环境和开发分包</h2>
<ul>
<li>
<p>分包 建立 build 目录同级，划分三个文件，分别为 webpack.base.js webpack.dev.js  webpack.pro.js</p>
<p><img data-src="/images/webpack/1649377530057.png" alt="1649377530057" /></p>
</li>
<li>
<p>安装分包工具 wepack-merge，合并配置文件</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm i webpack<span class="token operator">-</span>merge <span class="token operator">-</span><span class="token constant">D</span></pre></td></tr></table></figure></li>
<li>
<p>修改配置文件合并内容</p>
<ol>
<li>webpack.base.js (完整代码参考)</li>
</ol>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// entry: './src/index.js',</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token comment">// 多文件配置多个入口</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token string">'./src/login.js'</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// 输出目录</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token comment">// path: path.resolve(__dirname, 'dist'),</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// filename: 'bundle.js',</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// 多文件输出</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                    <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                    <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="51"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(htm|html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="62"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="67"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="68"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="71"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token comment">//babel 转换</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.\js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="76"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="77"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="78"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>                    <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/env'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="80"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="83"></td><td><pre></pre></td></tr><tr><td data-num="84"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="85"></td><td><pre>    <span class="token comment">// 插件</span></pre></td></tr><tr><td data-num="86"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="89"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="91"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="92"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        <span class="token comment">// 多文件</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>            <span class="token comment">// 复制入门文件 login.html 结构样式</span></pre></td></tr><tr><td data-num="98"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="99"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="100"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="101"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="102"></td><td><pre>        <span class="token comment">// 第三方库 jquery 挂载使用</span></pre></td></tr><tr><td data-num="103"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>            <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token string">'jquery'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="105"></td><td><pre>            <span class="token literal-property property">jQuery</span><span class="token operator">:</span> <span class="token string">'jquery'</span></pre></td></tr><tr><td data-num="106"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="107"></td><td><pre>    <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="108"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>2.webpack.dev.js</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> merge <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-merge'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> baseConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./webpack.base.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>baseConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'eval-cheap-module-source-map'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>3.webpack.pro.js</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> merge <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-merge'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> baseConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./webpack.base.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>baseConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li>
<li>
<p>增加或修改 package.json 配置 找到 script 节点</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token string-property property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token string-property property">"server"</span><span class="token operator">:</span> <span class="token string">"webpack-dev-server --config ./build/webpack.dev.js"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token string-property property">"build"</span><span class="token operator">:</span> <span class="token string">"webpack --config ./build/webpack.pro.js"</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>这样便实现区分了生产环境和开发环境</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm run server   <span class="token comment">// 开发模式下</span></pre></td></tr><tr><td data-num="2"></td><td><pre>npm run build    <span class="token comment">// 生产模式下</span></pre></td></tr></table></figure></li>
</ul>
<h2 id="webpack处理跨域问题"><a class="anchor" href="#webpack处理跨域问题">#</a> webpack 处理跨域问题</h2>
<ul>
<li>为什么出现跨域？</li>
</ul>
<p>​           协议 域名 端口号 三个有一个不一样便出现跨域</p>
<ul>
<li>
<p>面试常问问题，如何解决跨域？</p>
<p>CORS (在接口上添加注解，后端处理，但是数据不安全)</p>
<p>JSONP（利用 script 的 src 属性，只能处理 get 请求）</p>
<p>Nginx (反向代理)</p>
<p>使用 webpack 作代理 (比较好的处理方式)</p>
<h3 id="webpack处理跨域配置"><a class="anchor" href="#webpack处理跨域配置">#</a> webpack 处理跨域配置</h3>
<p>在目录下打开终端，安装 webpack</p>
<p>npm i webpack webpack-cli -D</p>
<p>初始化 npm init -y</p>
<ul>
<li>推荐方法，在 webpack.config.js 中 devServer 节点中，增加一个属性</li>
</ul>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">proxy</span><span class="token operator">:</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token comment">// 检测当请求路径前面为 /api 时，将会替换为后面的 ip</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token string-property property">"/api"</span><span class="token operator">:</span><span class="token string">"http://localhost:666"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><img data-src="/images/webpack/1649377552076.png" alt="1649377552076" /></p>
<p>安装 axios  npm i axios -S</p>
<p>前端请求 (需要跨域接口前面用 /api)</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 引入 axios</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"axios"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 发请求</span></pre></td></tr><tr><td data-num="4"></td><td><pre>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/api/getList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>
<p>cors 方法，但是不安全</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 安装 </span></pre></td></tr><tr><td data-num="2"></td><td><pre>npm i cors</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 引入 </span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">const</span> cors<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span>“cors”<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// 实现 </span></pre></td></tr><tr><td data-num="6"></td><td><pre>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>cors<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="模拟后台编写简单接口"><a class="anchor" href="#模拟后台编写简单接口">#</a> 模拟后台编写简单接口</h3>
<ul>
<li>
<p>在 src 同级建立 server 目录，建立 app.js</p>
</li>
<li>
<p>npm init -y</p>
</li>
<li>
<p>npm i express</p>
</li>
<li>
<p>编写后台服务器简单代码，开一个接口</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"express"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/api/getList"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"请求成功"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"王五"</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"http://localhost:666/api/getList"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>点击链接在浏览器即可看到数据</p>
</li>
<li>
<p>在前端 src 那个文件下载 axios 发起请求 （eg: 在 index.js 利用 axios 请求）      npm i axios -S</p>
</li>
<li>
<p>在 index.js 发起请求</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 引入 axios</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"axios"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 发请求</span></pre></td></tr><tr><td data-num="4"></td><td><pre>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://localhost:666/api/getList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr></table></figure></li>
<li>
<p>在 server 的终端下开启后台 node app.js, 在上一级前端目录在开启前端 npm run server (有的是 npm run dev, 具体看 package.json 配置)</p>
<p>发现问题跨域！！！</p>
<p><img data-src="/images/webpack/1649377571332.png" alt="1649377571332" /></p>
<p>具体解决方法请回看上面一点点，简单来说就是在 devServer 节点配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">proxy</span><span class="token operator">:</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token string-property property">"/api"</span><span class="token operator">:</span><span class="token string">"跨域ip"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>成功解决，跨域请求成功</p>
<p><img data-src="/images/webpack/1649377584724.png" alt="1649377584724" /></p>
</li>
</ul>
<h3 id="webpackconfigjs跨域配置代码"><a class="anchor" href="#webpackconfigjs跨域配置代码">#</a> webpack.config.js 跨域配置代码</h3>
<p>如下是两个页面 index.html 和 login.html 均配置实现了跨域</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 输入</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// entry: './src/index.js',</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token comment">// 多文件配置多个入口</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token string">'./src/login.js'</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">// 输出目录</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token comment">// path: path.resolve(__dirname, 'dist'),</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// filename: 'bundle.js',</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// 多文件输出</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/[name].js'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token comment">//loader 配置</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token comment">// 打包 css 文件</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token string">'css-loader'</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 打包 less 文件</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                    <span class="token string">'style-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                    <span class="token string">'css-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                    <span class="token string">'less-loader'</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token comment">// 打包 css 中 url 图片文件</span></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(jpg|png|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token comment">//url-loader 依靠 file-loader 所以需要下载两个</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                    <span class="token comment">// 设置图片小于 6*1024，就会被 base64 处理图片，减少请求数量</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                    <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                    <span class="token comment">// 关闭 url-loader 的 es6 模块化，不然 html 里面 img 元素会有问题</span></pre></td></tr><tr><td data-num="51"></td><td><pre>                    <span class="token literal-property property">esModule</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                    <span class="token comment">// [ext] 取原来扩展名  名字长度取 10</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'[name].[hash:10].[ext]'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'images'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token comment">// 打包 html 文件 img 问题</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(htm|html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="62"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'html-withimg-loader'</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token comment">// 打包其他资源</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|less|js|html|jpg|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="67"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="68"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                    <span class="token comment">// 输出文件夹</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                    <span class="token literal-property property">outputPath</span><span class="token operator">:</span> <span class="token string">'others'</span></pre></td></tr><tr><td data-num="71"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token comment">//babel 转换</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>                <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.\js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="76"></td><td><pre>                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="77"></td><td><pre>                <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="78"></td><td><pre>                <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>                    <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/env'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="80"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="83"></td><td><pre></pre></td></tr><tr><td data-num="84"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="85"></td><td><pre>    <span class="token comment">// 插件</span></pre></td></tr><tr><td data-num="86"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token comment">// 使用插件 html-webpack-plugin 打包 html 文件</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        <span class="token comment">//new HtmlWebpackPlugin () 打包多一个 index.html 文件</span></pre></td></tr><tr><td data-num="89"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="91"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="92"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        <span class="token comment">// 多文件</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>            <span class="token comment">// 复制入门文件 login.html 结构样式</span></pre></td></tr><tr><td data-num="98"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="99"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'login.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="100"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="101"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="102"></td><td><pre>        <span class="token comment">// 第三方库 jquery 挂载使用</span></pre></td></tr><tr><td data-num="103"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>            <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token string">'jquery'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="105"></td><td><pre>            <span class="token literal-property property">jQuery</span><span class="token operator">:</span> <span class="token string">'jquery'</span></pre></td></tr><tr><td data-num="106"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="107"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="108"></td><td><pre>    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="109"></td><td><pre>    <span class="token comment">// 开发服务器 devServer 用来自动化 </span></pre></td></tr><tr><td data-num="110"></td><td><pre>    <span class="token comment">// 特点：只会在内存中编译打包，不会有任何输出</span></pre></td></tr><tr><td data-num="111"></td><td><pre>    <span class="token comment">// 启动命令为 npx webpack-dev-server</span></pre></td></tr><tr><td data-num="112"></td><td><pre>    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>        <span class="token comment">//contentBase: path.resolve (__dirname, 'dist'),// 官方文档已经说被弃用</span></pre></td></tr><tr><td data-num="114"></td><td><pre>        <span class="token comment">// 启动 gzip 压缩</span></pre></td></tr><tr><td data-num="115"></td><td><pre>        <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="116"></td><td><pre>        <span class="token comment">// 启动端口号</span></pre></td></tr><tr><td data-num="117"></td><td><pre>        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3001</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="118"></td><td><pre>        <span class="token comment">// 自动打开浏览器</span></pre></td></tr><tr><td data-num="119"></td><td><pre>        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="120"></td><td><pre>        <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="121"></td><td><pre>            <span class="token string-property property">"/api"</span><span class="token operator">:</span> <span class="token string">"http://localhost:666"</span></pre></td></tr><tr><td data-num="122"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="123"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="124"></td><td><pre>    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'eval-cheap-module-source-map'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="125"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="webpack-css处理"><a class="anchor" href="#webpack-css处理">#</a> webpack CSS 处理</h2>
<h3 id="css文件分离"><a class="anchor" href="#css文件分离">#</a> css 文件分离</h3>
<p>使用插件 mini-css-extract-plugin</p>
<ul>
<li>
<p>安装插件 npm i mini-css-extract-plugin -D</p>
</li>
<li>
<p>引入 require, 修改 plugin 配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 引入</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> MiniCssExtractPlugin<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">[</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 使用插件</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">// 输出路径和名字</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token literal-property property">filename</span><span class="token operator">:</span><span class="token string">'/css/[name].css'</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">]</span></pre></td></tr></table></figure></li>
<li>
<p>将 style-loader 都修改为</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">&#123;</span><span class="token literal-property property">loader</span><span class="token operator">:</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">&#125;</span></pre></td></tr></table></figure></li>
</ul>
<h3 id="css-css3语法兼容处理"><a class="anchor" href="#css-css3语法兼容处理">#</a> css css3 语法兼容处理</h3>
<ul>
<li>
<p>使用 postcss-loader autoprefixer</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm i postcss<span class="token operator">-</span>loader autoprefixer <span class="token operator">-</span><span class="token constant">D</span></pre></td></tr></table></figure></li>
<li>
<p>module 使用 postcss-loader 要写在 css-loader 后面，卸载后面才是前一个调用</p>
<p><img data-src="/images/webpack/1649377609082.png" alt="1649377609082" /></p>
</li>
<li>
<p>配置 当前目录下 新建一个文件 postcss-config.js</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'autoprefixer'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">overrideBrowserslist</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token string">'defaults'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token string">'Android 4.1'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token string">'Chrome>31'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token string">'ff>31'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token string">'ie>=8'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token string">'last 2 versions'</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>成功实现兼容处理</p>
<p><img data-src="/images/webpack/1649377622896.png" alt="1649377622896" /></p>
</li>
</ul>
<h3 id="css压缩"><a class="anchor" href="#css压缩">#</a> css 压缩</h3>
<ul>
<li>
<p>使用 optimize-css-assets-webpack-plugin</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>npm i optimize<span class="token operator">-</span>css<span class="token operator">-</span>assets<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin <span class="token operator">-</span><span class="token constant">D</span></pre></td></tr></table></figure></li>
<li>
<p>使用配置，直接在 webpack.pro.js 里面配置</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> OptimizeCssAssetsWepackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>   <span class="token comment">//css 文件压缩</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWepackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr></table></figure><p>npm run build 查看上述 css 分离兼容压缩功能成功！建议实现一个步骤打包出来看一下再进行下一步</p>
</li>
</ul>
<h2 id="js和html压缩"><a class="anchor" href="#js和html压缩">#</a> js 和 html 压缩</h2>
<h3 id="js压缩"><a class="anchor" href="#js压缩">#</a> js 压缩</h3>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token literal-property property">mode</span><span class="token operator">:</span>production   <span class="token comment">// 生产模式就压缩了 js 代码</span></pre></td></tr></table></figure><h3 id="html压缩"><a class="anchor" href="#html压缩">#</a> html 压缩</h3>
<p>在插件中添加 minify</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token comment">// 复制入门文件 index.html 结构样式</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token comment">//html 压缩</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                <span class="token comment">// 移除空格</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token comment">// 移除注释</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>打包</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2020/10/02/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>正则表达式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		</pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="10"></td><td><pre>		</pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token comment">// 正则表达式作为一个对象，过滤敏感关键词 用于匹配字符中字符组合的模式</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token comment">// 1 - 创建正则表达式  </span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token comment">// 00 对象 RegExp</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token keyword">var</span> regexp<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 只要包含 abc 的都可以返回 true</span></pre></td></tr><tr><td data-num="15"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>		</pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token comment">// 01 字面量创建</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token keyword">var</span> r<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token comment">// 2 - 测试正则表达式 regexp.test (str) 返回 true 和 false</span></pre></td></tr><tr><td data-num="20"></td><td><pre>	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="21"></td><td><pre>	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abccc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		</pre></td></tr><tr><td data-num="25"></td><td><pre>		<span class="token comment">// 3 - 正则表达式的特殊字符  </span></pre></td></tr><tr><td data-num="26"></td><td><pre>		<span class="token comment">// 00 边界符 ^ 开头 $ 结尾</span></pre></td></tr><tr><td data-num="27"></td><td><pre>		<span class="token keyword">var</span> r2<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 abc 开头都可以返回 true</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'aabc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abccc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token keyword">var</span> r3<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^abc$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 abc 开头和结尾返回 true 精确匹配</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'aabc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abccc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="35"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="36"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="37"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		</pre></td></tr><tr><td data-num="39"></td><td><pre>		<span class="token comment">// 01 字符类 [] 只包含 [] 里面其中一个字符就可以</span></pre></td></tr><tr><td data-num="40"></td><td><pre>		<span class="token keyword">var</span> r4<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[abc_]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 只要包含 abc 中的其中一个</span></pre></td></tr><tr><td data-num="41"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="45"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r4<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="46"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		<span class="token keyword">var</span> r5<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[abc]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 a 或者 b 或者 c 开头并结尾，选其中一个</span></pre></td></tr><tr><td data-num="48"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r5<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="49"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r5<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r5<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="51"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r5<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="52"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>		<span class="token keyword">var</span> r6<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 a 到 z 英文小写这个字符开头并结尾，选其中一个</span></pre></td></tr><tr><td data-num="54"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="55"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'z'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="56"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'g'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="57"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'gg'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="58"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>		<span class="token keyword">var</span> r6<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 以 a 到 z A-Z 英文开头并结尾，选其中一个 </span></pre></td></tr><tr><td data-num="60"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="61"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="62"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="63"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r6<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="64"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>		<span class="token keyword">var</span> r7<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[^a-zA-Z]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  <span class="token comment">// 中括号里面 ^ 是取反的意思，不能去里面</span></pre></td></tr><tr><td data-num="66"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r7<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="67"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r7<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="68"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r7<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="69"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r7<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="70"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>		</pre></td></tr><tr><td data-num="72"></td><td><pre>		<span class="token comment">// 02 量词符  注意 &#123;&#125; 里面中间不能有空格</span></pre></td></tr><tr><td data-num="73"></td><td><pre>		<span class="token comment">// * 重复 0 次或更多次  </span></pre></td></tr><tr><td data-num="74"></td><td><pre>		<span class="token keyword">var</span> r8<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  </pre></td></tr><tr><td data-num="75"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r8<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="76"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r8<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="77"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r8<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="78"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r8<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="79"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>		<span class="token comment">// + 重复 1 次或更多次</span></pre></td></tr><tr><td data-num="81"></td><td><pre>		<span class="token keyword">var</span> r9<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r9<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="83"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r9<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="84"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r9<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="85"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r9<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="86"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>		<span class="token comment">// ? 重复 0 次或 1 次</span></pre></td></tr><tr><td data-num="88"></td><td><pre>		<span class="token keyword">var</span> r10<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>  </pre></td></tr><tr><td data-num="89"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r10<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span></pre></td></tr><tr><td data-num="90"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r10<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="91"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r10<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="92"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r10<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="93"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>		<span class="token comment">// &#123;n&#125; 重复 n 次</span></pre></td></tr><tr><td data-num="95"></td><td><pre>		<span class="token keyword">var</span> r11<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]&#123;2&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r11<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="97"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r11<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="98"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r11<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r11<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>		<span class="token comment">// &#123;n,&#125; 重复 n 次或更多次</span></pre></td></tr><tr><td data-num="102"></td><td><pre>		<span class="token keyword">var</span> r12<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]&#123;2,&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r12<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="104"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r12<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="105"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r12<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'Gdfd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="106"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r12<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="107"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="108"></td><td><pre>		<span class="token comment">// &#123;n,m&#125; 重复 n 次到 m 次</span></pre></td></tr><tr><td data-num="109"></td><td><pre>		<span class="token keyword">var</span> r13<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]&#123;2,4&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span></pre></td></tr><tr><td data-num="111"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'AA'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="112"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'Gfd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="113"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'tttt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span></pre></td></tr><tr><td data-num="114"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r13<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'ttttff'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span></pre></td></tr><tr><td data-num="115"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="116"></td><td><pre>		</pre></td></tr><tr><td data-num="117"></td><td><pre>		<span class="token comment">// 4 - 正则表达式的替换</span></pre></td></tr><tr><td data-num="118"></td><td><pre>		<span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">'red和green'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="119"></td><td><pre>		<span class="token comment">// 以前</span></pre></td></tr><tr><td data-num="120"></td><td><pre>		<span class="token keyword">let</span> newStr<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">,</span><span class="token string">"orange"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 部分替换</span></pre></td></tr><tr><td data-num="121"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"替换后的str："</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="122"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStr<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="123"></td><td><pre>		<span class="token comment">// 正则表达式替换  全局匹配 //g   忽略带小写  //i</span></pre></td></tr><tr><td data-num="124"></td><td><pre>		<span class="token keyword">let</span> newStr1<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">e</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 将所有 e 替换成 *</span></pre></td></tr><tr><td data-num="125"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStr1<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="126"></td><td><pre>		</pre></td></tr><tr><td data-num="127"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="128"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="129"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>高阶与闭包</title>
    <url>/2020/10/09/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E4%B8%8E%E9%97%AD%E5%8C%85/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>高阶和闭包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>内容1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>内容2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>内容3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>内容4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="15"></td><td><pre>			<span class="token comment">// 1 - 高阶函数是对其它函数进行操作的函数</span></pre></td></tr><tr><td data-num="16"></td><td><pre>			<span class="token comment">//01 高阶函数：把函数作为参数</span></pre></td></tr><tr><td data-num="17"></td><td><pre>			<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>				callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>			<span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"高阶函数！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>			<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>			<span class="token comment">//02 高阶函数：返回一个函数</span></pre></td></tr><tr><td data-num="24"></td><td><pre>			<span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>				<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"高阶函数的返回"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>			<span class="token keyword">let</span> fn2 <span class="token operator">=</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>			<span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre> </pre></td></tr><tr><td data-num="32"></td><td><pre>			<span class="token comment">// 2 - 闭包 Closure 有权访问另一个作用域中变量的函数。 --javaScript 高级程序设计</span></pre></td></tr><tr><td data-num="33"></td><td><pre>			<span class="token comment">// 简单理解  一个作用域可以访问另外一个函数内部的局部变量</span></pre></td></tr><tr><td data-num="34"></td><td><pre>			<span class="token keyword">function</span> <span class="token function">fn4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>				<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>				<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"闭包拿到的值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>					num<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>			<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">fn4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>			<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>			<span class="token comment">// 闭包存储了 num 没有释放</span></pre></td></tr><tr><td data-num="45"></td><td><pre>			<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>			<span class="token comment">// 3 - 闭包的运用</span></pre></td></tr><tr><td data-num="47"></td><td><pre>			<span class="token comment">// 点击 li 得到索引不用再添加 index 属性</span></pre></td></tr><tr><td data-num="48"></td><td><pre>			<span class="token keyword">let</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"ul li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>		 <span class="token comment">// 闭包形式</span></pre></td></tr><tr><td data-num="50"></td><td><pre>			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>			 <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>					lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="54"></td><td><pre>					<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>			 <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre> </pre></td></tr><tr><td data-num="57"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>			<span class="token comment">// 闭包应用 02 2s 之后打印 li 的内容 异步任务不会立即执行，放到任务队列里面，即使是 0 也要等待</span></pre></td></tr><tr><td data-num="59"></td><td><pre>			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>				<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>					<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>					<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre>				<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="65"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>			</pre></td></tr><tr><td data-num="67"></td><td><pre>			<span class="token comment">// 闭包应用 03 计算打车价格  起步价 13（3 公里内） 之后一公里 5 元 用户输入公里数 拥堵多收 10 元</span></pre></td></tr><tr><td data-num="68"></td><td><pre>			<span class="token keyword">var</span> car<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">distance</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>		    <span class="token keyword">let</span> start<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">;</span><span class="token comment">// 起步价  局部变量</span></pre></td></tr><tr><td data-num="70"></td><td><pre>			<span class="token keyword">let</span> total<span class="token punctuation">;</span> <span class="token comment">// 总价 局部变量</span></pre></td></tr><tr><td data-num="71"></td><td><pre>			<span class="token keyword">return</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>				<span class="token function-variable function">normal</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">distance</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>					<span class="token keyword">if</span><span class="token punctuation">(</span>distance<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>						total<span class="token operator">=</span>start<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>					<span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>						total<span class="token operator">=</span>start<span class="token operator">+</span><span class="token number">5</span><span class="token operator">*</span><span class="token punctuation">(</span>distance<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>					<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>					<span class="token keyword">return</span> total<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>				<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="80"></td><td><pre>				<span class="token function-variable function">yd</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>					<span class="token keyword">return</span> flag<span class="token operator">?</span>total<span class="token operator">+</span><span class="token number">10</span><span class="token operator">:</span>total<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>			<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="85"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"车费："</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span><span class="token function">normal</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span><span class="token function">yd</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span><span class="token function">yd</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="89"></td><td><pre>			</pre></td></tr><tr><td data-num="90"></td><td><pre>			<span class="token comment">// 思考题</span></pre></td></tr><tr><td data-num="91"></td><td><pre>			<span class="token keyword">let</span> name<span class="token operator">=</span><span class="token string">"the window"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>			<span class="token keyword">let</span> obj1<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="93"></td><td><pre>				<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'myObj1'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="94"></td><td><pre>				<span class="token function-variable function">getNameTest</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="95"></td><td><pre>					<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>						<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>					<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="98"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="99"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="100"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span><span class="token function">getNameTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>			</pre></td></tr><tr><td data-num="102"></td><td><pre>			<span class="token keyword">let</span> obj2<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>				<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'myObj2'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="104"></td><td><pre>				<span class="token function-variable function">getNameTest</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="105"></td><td><pre>					<span class="token keyword">let</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="106"></td><td><pre>					<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="107"></td><td><pre>						<span class="token keyword">return</span> that<span class="token punctuation">.</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="108"></td><td><pre>					<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="109"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>			<span class="token punctuation">&#125;</span>	</pre></td></tr><tr><td data-num="111"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span><span class="token function">getNameTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="113"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="114"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>闭包</tag>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>认识函数</title>
    <url>/2020/09/18/%E8%AE%A4%E8%AF%86%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>函数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>发送短信1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>发送短信2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>发送短信3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">	</pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token comment">// 1 - 创建函数方式</span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token comment">// 01 自定义函数</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>		<span class="token comment">// 02 函数体方式 </span></pre></td></tr><tr><td data-num="16"></td><td><pre>		<span class="token keyword">var</span> <span class="token function-variable function">fn</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token comment">// 03 创建对象方式</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token comment">// 所有函数都是 Function 的实例</span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token keyword">var</span> fn<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'console.log(a+b)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调用</span></pre></td></tr><tr><td data-num="21"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token comment">// 所有的函数都是 Function 的实例 对象</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>		</pre></td></tr><tr><td data-num="26"></td><td><pre>		<span class="token comment">// 2 - 函数的调用</span></pre></td></tr><tr><td data-num="27"></td><td><pre>		<span class="token comment">//01 普通函数调用 fn () fn.call (o)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		<span class="token comment">//02 对象函数  ldh.sayHi ();</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		<span class="token comment">//03 构造函数  new Star ()</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		<span class="token comment">//04 绑定事件函数  btn.onclick=function ()&#123;&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		<span class="token comment">//05 定时器函数 setIterval (function ()&#123;&#125;,1000);</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token comment">//06 立即执行函数 (function ()&#123;console.log ("立即执行，到达人生巅峰！")&#125;)()</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		<span class="token comment">// (function ()&#123;console.log ("立即执行，到达人生巅峰！")&#125;)()</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		</pre></td></tr><tr><td data-num="35"></td><td><pre>		<span class="token comment">// 3-this 指向问题  	一般情况下指向函数调用者</span></pre></td></tr><tr><td data-num="36"></td><td><pre>		<span class="token comment">//01 普通函数调用 </span></pre></td></tr><tr><td data-num="37"></td><td><pre>		<span class="token comment">//fn ()  this 指向 window</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		<span class="token comment">//fn.call (o)  this 指向对象 o</span></pre></td></tr><tr><td data-num="39"></td><td><pre>		<span class="token comment">//02 对象函数  ldh.sayHi ();  this 指向实例对象 ldh</span></pre></td></tr><tr><td data-num="40"></td><td><pre>		<span class="token comment">//03 构造函数  new Star ()  指向实力对象  eg:zxy=new Star ("" 张学友) this 指向 zxy</span></pre></td></tr><tr><td data-num="41"></td><td><pre>		<span class="token comment">//04 绑定事件函数  btn.onclick=function ()&#123;&#125;  this 指向 btn 指向函数调用者</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		<span class="token comment">//05 定时器函数 setIterval (function ()&#123;&#125;,1000);  this 指向 window</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		<span class="token comment">//06 立即执行函数 (function ()&#123;console.log ("立即执行，到达人生巅峰！")&#125;)()  this 指向 window</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		</pre></td></tr><tr><td data-num="45"></td><td><pre>		 <span class="token comment">// 4 - 改变 this 指向</span></pre></td></tr><tr><td data-num="46"></td><td><pre>		 <span class="token comment">// 01 call 方法  call 调用函数  改变 this 指向 实现继承</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		 <span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>			 <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'lhm'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre>			 <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>		 <span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>			 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>			 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'----'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>			 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>		 <span class="token function">fn2</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>		 <span class="token keyword">function</span> <span class="token function">Father</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>			 <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>			 <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>		 <span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sing</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>			 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'会唱歌！'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="63"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>		 <span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>			 <span class="token comment">// 实现继承</span></pre></td></tr><tr><td data-num="66"></td><td><pre>			 <span class="token function">Father</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>		 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>		  <span class="token comment">// 继承父亲 prototype 方法</span></pre></td></tr><tr><td data-num="69"></td><td><pre>		  <span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>		  <span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token operator">=</span>Son<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>		 <span class="token keyword">let</span> son<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token string">"刘德华"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'--'</span><span class="token operator">+</span>son<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>		 son<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>		 <span class="token comment">// 02 apply 方法  跟 call 方法一样  要求第二个参数是一个数组</span></pre></td></tr><tr><td data-num="75"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"apply方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>		 <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token comment">// 传多了就接收前面的</span></pre></td></tr><tr><td data-num="77"></td><td><pre>		 <span class="token function">fn2</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>		 <span class="token comment">//apply 内置应用</span></pre></td></tr><tr><td data-num="79"></td><td><pre>		 <span class="token keyword">let</span> max<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>		 <span class="token comment">// 03 bind 方法  bind 捆绑 改变 this 指向   跟 call 一样，但是 call 可以调用函数 bind 不可以调用函数</span></pre></td></tr><tr><td data-num="82"></td><td><pre>		 <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token function">fn2</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 不调用 但是返回一个新函数，a 就是改变 this 指向产生的新函数</span></pre></td></tr><tr><td data-num="83"></td><td><pre>		 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"bind方法："</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>	     <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>		 <span class="token comment">//bind 方法应用 实际开发用的最多</span></pre></td></tr><tr><td data-num="86"></td><td><pre>		 <span class="token comment">// 有的函数不想立即调用，但是又想改变 this 指向</span></pre></td></tr><tr><td data-num="87"></td><td><pre>		 <span class="token comment">// 发送短信案例 点击之后禁用 3s 才能点击 让定时器自己调用</span></pre></td></tr><tr><td data-num="88"></td><td><pre>		 <span class="token keyword">var</span> btns<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="89"></td><td><pre>		 btns<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>			 item<span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="91"></td><td><pre>				 <span class="token keyword">this</span><span class="token punctuation">.</span>disabled<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>				 <span class="token comment">//bind 不会立即调用 让 setTimeout 调用 但成功改变 this 指向</span></pre></td></tr><tr><td data-num="93"></td><td><pre>				 <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>					<span class="token keyword">this</span><span class="token punctuation">.</span>disabled<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="95"></td><td><pre>				 <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="96"></td><td><pre>			 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>		 <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="98"></td><td><pre>		<span class="token comment">////call apply bind 总结</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		<span class="token comment">//call apply 基本一样，call 经常做继承 apply 传参必须是数组，经常跟数组相关</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		<span class="token comment">//bind 不会调用函数 fn.bind () 不调用  跟定时器经常相关</span></pre></td></tr><tr><td data-num="101"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="102"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="103"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>use strict</title>
    <url>/2020/09/30/use%20strict/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>严格模式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token comment">// 00 - 严格模式：解决 js 版本一些不合适 不合理的地方 IE10 以上版本才会执行</span></pre></td></tr><tr><td data-num="10"></td><td><pre>		<span class="token string">'use strict'</span><span class="token punctuation">;</span> <span class="token comment">// 为整个脚本开启严格模式 IE10 以上版本</span></pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token comment">// (function()&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token comment">// 	// 'use strict';// 为整个脚本开启严格模式</span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token comment">// &#125;)()</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token comment">// function fn3()&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>		<span class="token comment">// 	'use strict'; // 为 fn3 这个函数开启严格模式</span></pre></td></tr><tr><td data-num="16"></td><td><pre>		<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token comment">// 01 - 严格模式的变化</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token comment">// 1 一定要先声明再定义  </span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token comment">//name='lhm'; // 错误</span></pre></td></tr><tr><td data-num="20"></td><td><pre>		<span class="token keyword">let</span> name<span class="token operator">=</span><span class="token string">'lhm'</span><span class="token punctuation">;</span> <span class="token comment">// 正确</span></pre></td></tr><tr><td data-num="21"></td><td><pre>		<span class="token comment">//2 不能随意删除声明的变量</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		<span class="token comment">//delete name;// 不可以</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token comment">//3 函数中！！的 this 不再指向 window 而是 undefined</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//window</span></pre></td></tr><tr><td data-num="25"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span></pre></td></tr><tr><td data-num="27"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		<span class="token comment">//4 构造眼熟必须加 new 创建对象 不然里面的 this 指向的是 undefined</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">Father</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		<span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>		<span class="token comment">// Father ("张学友",63);</span></pre></td></tr><tr><td data-num="36"></td><td><pre>		<span class="token comment">//console.log (Father.name);// 报错</span></pre></td></tr><tr><td data-num="37"></td><td><pre>		<span class="token keyword">let</span> father<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token string">"张学友"</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>		<span class="token comment">//05 定时器还是指向还是 window</span></pre></td></tr><tr><td data-num="40"></td><td><pre>		<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//window</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		<span class="token comment">//06 函数参数不可以重名</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>		<span class="token punctuation">&#125;</span> <span class="token comment">// 报错</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		</pre></td></tr><tr><td data-num="48"></td><td><pre>		<span class="token comment">//07 不可以在非函数代码块声明函数</span></pre></td></tr><tr><td data-num="49"></td><td><pre>		<span class="token comment">// if(true)&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		<span class="token comment">// 	function fn4()&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>		<span class="token comment">// 		console.log ("不可以在非函数代码块声明函数")</span></pre></td></tr><tr><td data-num="52"></td><td><pre>		<span class="token comment">// 	&#125;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>		<span class="token comment">// &#125; // 报错</span></pre></td></tr><tr><td data-num="54"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="55"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>构造函数与原型</title>
    <url>/2020/10/10/%E6%AC%A7%E9%80%A0%E5%87%BD%E6%95%B0%E4%B8%8E%E5%8E%9F%E5%9E%8B/</url>
    <content><![CDATA[<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>构造函数和原型<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre>	</pre></td></tr><tr><td data-num="11"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">	</pre></td></tr><tr><td data-num="12"></td><td><pre>	<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 在<span class="token constant">ES6</span>之前没有类的概念，对象不是通过类来创建，而是通过构造函数 <span class="token operator">--</span><span class="token operator">></span></pre></td></tr><tr><td data-num="13"></td><td><pre>	</pre></td></tr><tr><td data-num="14"></td><td><pre>	<span class="token comment">// 构造函数创建对象</span></pre></td></tr><tr><td data-num="15"></td><td><pre>	<span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>		<span class="token comment">// 实例成员  构造函数通过 this 执行构造的成员  name age sing  只能通过实例化的对象访问 不能 Star.name 只能 ldh.name</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>		<span class="token comment">//this.sing=function ()&#123;   // 会为方法单独开辟内存空间，造成浪费内存，所以一般是放在原型对象 prototype 中</span></pre></td></tr><tr><td data-num="20"></td><td><pre>		<span class="token comment">// 	console.log (this.name+"会唱歌！他已经"+this.age+"岁了！");</span></pre></td></tr><tr><td data-num="21"></td><td><pre>		<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>	</pre></td></tr><tr><td data-num="24"></td><td><pre>	</pre></td></tr><tr><td data-num="25"></td><td><pre>	</pre></td></tr><tr><td data-num="26"></td><td><pre>	<span class="token comment">// 构造函数问题  存在浪费内存问题</span></pre></td></tr><tr><td data-num="27"></td><td><pre>	</pre></td></tr><tr><td data-num="28"></td><td><pre>	<span class="token comment">// 构造函数原型 prototype 实现函数共享  共享的对象放在 prototype</span></pre></td></tr><tr><td data-num="29"></td><td><pre>	<span class="token comment">// 公共方法放在原型对象上，实现共享，不会再开辟空间</span></pre></td></tr><tr><td data-num="30"></td><td><pre>	<span class="token comment">// Star.prototype.dance=function()&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>	<span class="token comment">// 	console.log (this.name+"会跳舞！！");</span></pre></td></tr><tr><td data-num="32"></td><td><pre>	<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>	<span class="token comment">// Star.prototype.sing=function()&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>	<span class="token comment">// 	console.log (this.name+"会唱歌！！");</span></pre></td></tr><tr><td data-num="35"></td><td><pre>	<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>	<span class="token comment">// 上面简化写法，但是这个简化是替换，上面是追加方法</span></pre></td></tr><tr><td data-num="37"></td><td><pre>	</pre></td></tr><tr><td data-num="38"></td><td><pre>   <span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>	   <span class="token literal-property property">constructor</span><span class="token operator">:</span>Star<span class="token punctuation">,</span>   <span class="token comment">// 说明指向哪个构造函数，不可以省略</span></pre></td></tr><tr><td data-num="40"></td><td><pre>	   <span class="token function-variable function">sing</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>		 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"会唱歌！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>	   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>	   <span class="token function-variable function">dance</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"会跳舞！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>	   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>	</pre></td></tr><tr><td data-num="48"></td><td><pre>	<span class="token keyword">let</span> ldh<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">"刘德华"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建一个空对象  this 再指向对象，执行构造函数的代码，添加属性和方法</span></pre></td></tr><tr><td data-num="49"></td><td><pre>	ldh<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'----'</span><span class="token operator">+</span>ldh<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>	</pre></td></tr><tr><td data-num="52"></td><td><pre>	<span class="token comment">// 静态成员  实例成员</span></pre></td></tr><tr><td data-num="53"></td><td><pre>	</pre></td></tr><tr><td data-num="54"></td><td><pre>	<span class="token comment">// 静态成员在构造函数本身添加的成员</span></pre></td></tr><tr><td data-num="55"></td><td><pre>	Star<span class="token punctuation">.</span>sex<span class="token operator">=</span><span class="token string">'男'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>	</pre></td></tr><tr><td data-num="57"></td><td><pre>	<span class="token comment">// 只能通过构造函数访问</span></pre></td></tr><tr><td data-num="58"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Star<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 只能通过构造函数访问</span></pre></td></tr><tr><td data-num="59"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 不可以这样访问！！</span></pre></td></tr><tr><td data-num="60"></td><td><pre>	</pre></td></tr><tr><td data-num="61"></td><td><pre>	<span class="token comment">// 实例成员 构造函数通过 this 执行构造的成员  name age sing  只能通过实例化的对象访问 不能 Star.name 只能 ldh.name</span></pre></td></tr><tr><td data-num="62"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Star<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 不可以这样访问！！</span></pre></td></tr><tr><td data-num="63"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 只能通过实例化的对象访问</span></pre></td></tr><tr><td data-num="64"></td><td><pre>	</pre></td></tr><tr><td data-num="65"></td><td><pre>	<span class="token keyword">let</span> zxy<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">"张学友"</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>	zxy<span class="token punctuation">.</span><span class="token function">dance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>	ldh<span class="token punctuation">.</span><span class="token function">dance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"1.放在prototype原型对象上，实现原型共享，不会开辟新的内存空间地址都一样"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zxy<span class="token punctuation">.</span>dance<span class="token operator">===</span>ldh<span class="token punctuation">.</span>dance<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"2.没有放在prototype原型对象上，开辟新的内存空间 地址不一样"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zxy<span class="token punctuation">.</span>sing<span class="token operator">===</span>ldh<span class="token punctuation">.</span>sing<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>	<span class="token comment">// 原型是一个对象，所有的构造函数都默认有个原型对象 prototype  eg: Star 默认有 prototype</span></pre></td></tr><tr><td data-num="73"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>Star<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token comment">// 每个对象有一个属性__proto__指向构造函数的原型对象 prototype  也会写成 [[prototype]] 遍历两层</span></pre></td></tr><tr><td data-num="75"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zxy<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"对象有一个属性—__proto__指向构造函数的原型对象prototype "</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>__proto__<span class="token operator">===</span><span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>	   <span class="token comment">// 知识点！！！</span></pre></td></tr><tr><td data-num="80"></td><td><pre>	   <span class="token comment">// 方法查找规则</span></pre></td></tr><tr><td data-num="81"></td><td><pre>	   <span class="token comment">// 1. 先去看对象 ldh 是否有这个 sing 方法，有就执行</span></pre></td></tr><tr><td data-num="82"></td><td><pre>	   <span class="token comment">// 2. 没有和这个方法就去___proto__(对象的原型)，这个对象原型指向构造函数的原型对象</span></pre></td></tr><tr><td data-num="83"></td><td><pre>	   </pre></td></tr><tr><td data-num="84"></td><td><pre>	   </pre></td></tr><tr><td data-num="85"></td><td><pre>	   <span class="token comment">//constructor 构造函数  指明构造函数   告诉我们是哪个构造函数创建的</span></pre></td></tr><tr><td data-num="86"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span><span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>	   <span class="token comment">//console.log (ldh.__proto__.constructor);   // 指向构造函数 Star</span></pre></td></tr><tr><td data-num="89"></td><td><pre>	   <span class="token comment">//console.log (Star.prototype.constructor);   // 指向构造函数 Star</span></pre></td></tr><tr><td data-num="90"></td><td><pre>	   </pre></td></tr><tr><td data-num="91"></td><td><pre>	   </pre></td></tr><tr><td data-num="92"></td><td><pre>	   <span class="token comment">// 通过原型对象扩展方法 比如说数组</span></pre></td></tr><tr><td data-num="93"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>	   <span class="token comment">// 追加方法，只能采取。的形式</span></pre></td></tr><tr><td data-num="95"></td><td><pre>	   <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sum</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>		   <span class="token keyword">let</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>		   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="98"></td><td><pre>			   sum<span class="token operator">=</span>sum<span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		   <span class="token keyword">return</span> sum<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>	   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="102"></td><td><pre>	   <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>	   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>	    <span class="token comment">//call 方法调用</span></pre></td></tr><tr><td data-num="105"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="106"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"继续加油"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="107"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"call可以改变this指向"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="108"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="109"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"call可以传参"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="110"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="111"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>		<span class="token keyword">var</span> o<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'lhm'</span></pre></td></tr><tr><td data-num="114"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="115"></td><td><pre>		<span class="token comment">// 改变 this 指向</span></pre></td></tr><tr><td data-num="116"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="117"></td><td><pre>		</pre></td></tr><tr><td data-num="118"></td><td><pre>		<span class="token comment">// 构造函数继承，利用 call</span></pre></td></tr><tr><td data-num="119"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">Father</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="120"></td><td><pre>			<span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="121"></td><td><pre>			<span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="122"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="123"></td><td><pre>		</pre></td></tr><tr><td data-num="124"></td><td><pre>		<span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">money</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="125"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"赚大钱了！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="126"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="127"></td><td><pre>		</pre></td></tr><tr><td data-num="128"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>score</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="129"></td><td><pre>			<span class="token function">Father</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 此时 this 为调用  继承父亲构造函数属性</span></pre></td></tr><tr><td data-num="130"></td><td><pre>			<span class="token keyword">this</span><span class="token punctuation">.</span>score<span class="token operator">=</span>score<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="131"></td><td><pre>			</pre></td></tr><tr><td data-num="132"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="133"></td><td><pre>		<span class="token comment">// 实现继承父类 prototype 共享方法 start</span></pre></td></tr><tr><td data-num="134"></td><td><pre>		<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="135"></td><td><pre>		<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token operator">=</span>Son<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="136"></td><td><pre>		<span class="token comment">// 实现继承父类 prototype 共享方法 end</span></pre></td></tr><tr><td data-num="137"></td><td><pre>		</pre></td></tr><tr><td data-num="138"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="139"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="140"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"--------"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="141"></td><td><pre>		<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">exam</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="142"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"孩子要考试！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="143"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="144"></td><td><pre>		<span class="token keyword">let</span> son<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token string">"刘德华"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="145"></td><td><pre>		<span class="token comment">// console.dir(Son);</span></pre></td></tr><tr><td data-num="146"></td><td><pre>	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'---'</span><span class="token operator">+</span>son<span class="token punctuation">.</span>age<span class="token operator">+</span><span class="token string">'------'</span><span class="token operator">+</span>son<span class="token punctuation">.</span>score<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="147"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"习题！！！！！！"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="148"></td><td><pre>	  <span class="token keyword">function</span> <span class="token function">Temp</span><span class="token punctuation">(</span><span class="token parameter">role<span class="token punctuation">,</span>weapon</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="149"></td><td><pre>	    <span class="token keyword">this</span><span class="token punctuation">.</span>role <span class="token operator">=</span> role<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="150"></td><td><pre>	    <span class="token keyword">this</span><span class="token punctuation">.</span>weapon <span class="token operator">=</span> weapon<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="151"></td><td><pre>	    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">skill</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="152"></td><td><pre>	        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'你会点啥'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="153"></td><td><pre>	    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="154"></td><td><pre>	 <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="155"></td><td><pre>	 </pre></td></tr><tr><td data-num="156"></td><td><pre>	 <span class="token keyword">let</span> son2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Temp</span><span class="token punctuation">(</span><span class="token string">'李白'</span><span class="token punctuation">,</span><span class="token string">'剑'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="157"></td><td><pre>	  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son2<span class="token punctuation">.</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="158"></td><td><pre>	  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Temp<span class="token punctuation">.</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不可以通过构造函数访问实例成员 1</span></pre></td></tr><tr><td data-num="159"></td><td><pre> </pre></td></tr><tr><td data-num="160"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"对象方法Object.keys() Object.values() "</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="161"></td><td><pre>	<span class="token keyword">let</span> oo<span class="token operator">=</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="162"></td><td><pre>		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'lhm'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="163"></td><td><pre>		<span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="164"></td><td><pre>		<span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">'女'</span></pre></td></tr><tr><td data-num="165"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="166"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="167"></td><td><pre>	<span class="token keyword">let</span> arr2<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="168"></td><td><pre>	arr2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="169"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"数组遍历"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="170"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="171"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="172"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="173"></td><td><pre>	<span class="token comment">//define 定义  property 属性</span></pre></td></tr><tr><td data-num="174"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"对象方法Object.defineProperty  修改或者新增 新增颜色暗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="175"></td><td><pre>	Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>oo<span class="token punctuation">,</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="176"></td><td><pre>		<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">'lll'</span></pre></td></tr><tr><td data-num="177"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="178"></td><td><pre>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>oo<span class="token punctuation">,</span><span class="token string">'score'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="179"></td><td><pre>      	<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token number">666</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="180"></td><td><pre>		<span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token boolean">false</span>  <span class="token punctuation">,</span><span class="token comment">// 不允许修改属性</span></pre></td></tr><tr><td data-num="181"></td><td><pre>		<span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token boolean">false</span> <span class="token punctuation">,</span><span class="token comment">// 不允许遍历，但是可以读取，如下</span></pre></td></tr><tr><td data-num="182"></td><td><pre>		<span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token boolean">false</span> <span class="token comment">// 不允许删除 不允许再次定义修改特性</span></pre></td></tr><tr><td data-num="183"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   </pre></td></tr><tr><td data-num="184"></td><td><pre>	oo<span class="token punctuation">.</span>score<span class="token operator">=</span><span class="token number">888</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="185"></td><td><pre>	</pre></td></tr><tr><td data-num="186"></td><td><pre>	<span class="token comment">//enumerable:false 不允许遍历 start</span></pre></td></tr><tr><td data-num="187"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="188"></td><td><pre>	<span class="token keyword">let</span> arr3<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="189"></td><td><pre>	arr3<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="190"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"数组遍历测试2："</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="191"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="192"></td><td><pre>	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="193"></td><td><pre>	<span class="token comment">//enumerable:false 不允许遍历 end</span></pre></td></tr><tr><td data-num="194"></td><td><pre>	</pre></td></tr><tr><td data-num="195"></td><td><pre>	<span class="token comment">//configurable 不允许删除 start</span></pre></td></tr><tr><td data-num="196"></td><td><pre>	<span class="token keyword">delete</span> oo<span class="token punctuation">.</span>score<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="197"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"configurable不允许删除"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="198"></td><td><pre>	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oo<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="199"></td><td><pre>	<span class="token comment">//configurable 不允许删除 end</span></pre></td></tr><tr><td data-num="200"></td><td><pre>	</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>	</pre></td></tr><tr><td data-num="201"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="202"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>原型</tag>
      </tags>
  </entry>
  <entry>
    <title>typeof与instanceof</title>
    <url>/2020/10/30/typeof%E4%B8%8Einstanceof/</url>
    <content><![CDATA[<h2 id="一-typeof"><a class="anchor" href="#一-typeof">#</a> 一、typeof</h2>
<p><code>typeof</code>  操作符返回一个字符串，表示未经计算的操作数的类型</p>
<p>使用方法如下：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">typeof</span> operand</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">typeof</span><span class="token punctuation">(</span>operand<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>复制代码</pre></td></tr></table></figure><p><code>operand</code>  表示对象或原始值的表达式，其类型将被返回</p>
<p>举个例子</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">typeof</span> <span class="token number">1</span> <span class="token comment">// 'number'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">typeof</span> <span class="token string">'1'</span> <span class="token comment">// 'string'</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">typeof</span> <span class="token keyword">undefined</span> <span class="token comment">// 'undefined'</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">typeof</span> <span class="token boolean">true</span> <span class="token comment">// 'boolean'</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">typeof</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 'symbol'</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">typeof</span> <span class="token keyword">null</span> <span class="token comment">// 'object'</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 'object'</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">typeof</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 'object'</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">typeof</span> console <span class="token comment">// 'object'</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">typeof</span> console<span class="token punctuation">.</span>log <span class="token comment">// 'function'</span></pre></td></tr><tr><td data-num="11"></td><td><pre>复制代码</pre></td></tr></table></figure><p>从上面例子，前 6 个都是基础数据类型。虽然 <code>typeof null</code>  为 <code>object</code> ，但这只是 <code> JavaScript</code>  存在的一个悠久  <code>Bug</code> ，不代表 <code>null </code> 就是引用数据类型，并且 <code>null </code> 本身也不是对象</p>
<p>所以， <code>null </code> 在  <code>typeof </code> 之后返回的是有问题的结果，不能作为判断 <code>null</code>  的方法。如果你需要在  <code>if</code>  语句中判断是否为  <code>null</code> ，直接通过 <code>===null</code>  来判断就好</p>
<p>同时，可以发现引用类型数据，用 <code>typeof</code>  来判断的话，除了 <code>function</code>  会被识别出来之外，其余的都输出 <code>object</code></p>
<p>如果我们想要判断一个变量是否存在，可以使用 <code>typeof</code> ：(不能使用 <code>if(a)</code> ， 若 <code>a</code>  未声明，则报错)</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">!=</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 变量存在</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>复制代码</pre></td></tr></table></figure><h2 id="二-instanceof"><a class="anchor" href="#二-instanceof">#</a> 二、instanceof</h2>
<p><code>instanceof</code>  运算符用于检测构造函数的  <code>prototype</code>  属性是否出现在某个实例对象的原型链上</p>
<p>使用如下：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre>object <span class="token keyword">instanceof</span> <span class="token class-name">constructor</span></pre></td></tr><tr><td data-num="2"></td><td><pre>复制代码</pre></td></tr></table></figure><p><code>object</code>  为实例对象， <code>constructor</code>  为构造函数</p>
<p>构造函数通过 <code>new</code>  可以实例对象， <code>instanceof </code> 能判断这个对象是否是之前那个构造函数生成的对象</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 定义构建函数</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">let</span> <span class="token function-variable function">Car</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">let</span> benz <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>benz <span class="token keyword">instanceof</span> <span class="token class-name">Car</span> <span class="token comment">// true</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">let</span> car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">'xxx'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>car <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token comment">// true</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'xxx'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>str <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token comment">// false</span></pre></td></tr><tr><td data-num="9"></td><td><pre>复制代码</pre></td></tr></table></figure><p>关于 <code>instanceof</code>  的实现原理，可以参考下面：</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">function</span> <span class="token function">myInstanceof</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 这里先用 typeof 来判断基础数据类型，如果是，直接返回 false</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> left <span class="token operator">!==</span> <span class="token string">'object'</span> <span class="token operator">||</span> left <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token comment">//getProtypeOf 是 Object 对象自带的 API，能够拿到参数的原型对象</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">let</span> proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                  </pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>proto <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>proto <span class="token operator">===</span> right<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">// 找到相同原型对象，返回 true</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeof</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>复制代码</pre></td></tr></table></figure><p>也就是顺着原型链去找，直到找到相同的原型对象，返回 <code>true</code> ，否则为 <code>false</code></p>
<h2 id="三-区别"><a class="anchor" href="#三-区别">#</a> 三、区别</h2>
<p><code>typeof</code>  与 <code>instanceof</code>  都是判断数据类型的方法，区别如下：</p>
<ul>
<li><code>typeof</code>  会返回一个变量的基本类型， <code>instanceof</code>  返回的是一个布尔值</li>
<li><code>instanceof</code>  可以准确地判断复杂引用数据类型，但是不能正确判断基础数据类型</li>
<li>而 <code> typeof</code>  也存在弊端，它虽然可以判断基础数据类型（ <code>null</code>  除外），但是引用数据类型中，除了 <code> function</code>  类型以外，其他的也无法判断</li>
</ul>
<p>可以看到，上述两种方法都有弊端，并不能满足所有场景的需求</p>
<p>如果需要通用检测数据类型，可以采用 <code>Object.prototype.toString</code> ，调用该方法，统一返回格式 <code>“[object Xxx]” </code> 的字符串</p>
<p>如下</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>       <span class="token comment">// "[object Object]"</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 同上结果，加上 call 也 ok</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment">// "[object Number]"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>  <span class="token comment">// "[object String]"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token comment">// "[object Boolean]"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// "[object Function]"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>   <span class="token comment">//"[object Null]"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">//"[object Undefined]"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">123</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>    <span class="token comment">//"[object RegExp]"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//"[object Date]"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token comment">//"[object Array]"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span>  <span class="token comment">//"[object HTMLDocument]"</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span>   <span class="token comment">//"[object Window]"</span></pre></td></tr><tr><td data-num="14"></td><td><pre>复制代码</pre></td></tr></table></figure><p>了解了 <code>toString</code>  的基本用法，下面就实现一个全局通用的数据类型判断方法</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">let</span> type  <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!==</span> <span class="token string">"object"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 先进行 typeof 判断，如果是基础数据类型，直接返回</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">return</span> type<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token comment">// 对于 typeof 返回结果是 object 的，再进行如下的判断，正则返回结果</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\[object (\S+)\]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">'$1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>复制代码</pre></td></tr></table></figure><p>使用如下</p>
<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     <span class="token comment">// "Array" typeof [] 是 object，因此 toString 返回</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">)</span>  <span class="token comment">// "string" typeof 直接返回</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span> <span class="token comment">// "Window" toString 返回</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>   <span class="token comment">// "Null" 首字母大写，typeof null 是 object，需 toString 来判断</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>   <span class="token comment">// "undefined" typeof 直接返回</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment">// "undefined" typeof 直接返回</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">// "function" typeof 能判断，因此首字母小写</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token function">getType</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">123</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>      <span class="token comment">//"RegExp" toString 返回</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>递归函数及深浅拷贝</title>
    <url>/2020/10/30/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E5%8F%8A%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D/</url>
    <content><![CDATA[<h3 id="深拷贝-浅拷贝"><a class="anchor" href="#深拷贝-浅拷贝">#</a> 深拷贝 &amp; 浅拷贝</h3>
<ul>
<li>浅拷贝：仅仅是复制了引用，彼此之间的操作会互相影响，相同地址</li>
<li>深拷贝：在堆中重新分配内存，不同的地址，相同的值，互不影响</li>
</ul>
<p>总的来说，深浅拷贝的主要区别就是：复制的是引用还是复制的是实例</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>递归函数及深浅拷贝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		</pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></pre></td></tr><tr><td data-num="10"></td><td><pre>		<span class="token comment">// 递归函数：一个函数在内部调用本身，我们就说这个函数是递归函数，自己调用自己，防止栈溢出，一定要加上 return;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>		<span class="token comment">// 打印 6 句话</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token keyword">let</span> num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"递归打印"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token operator">&lt;=</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>				num<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>				<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>			<span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token comment">// 应用：利用递归求阶乘</span></pre></td></tr><tr><td data-num="24"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>			<span class="token comment">// 递归必须加 return 实行退出</span></pre></td></tr><tr><td data-num="26"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>			<span class="token keyword">return</span>  n<span class="token operator">*</span><span class="token function">f</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>		<span class="token comment">// 递归求斐波那契数列（兔子数列）1 1 2 3 5 8 13 21 ... 前两项的和就是后一项</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		<span class="token comment">// 01 用户输入一个数字，就可以求出是这个数字对应的兔子序列  输入 3 打印 3 对应的序列值 2</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token keyword">let</span> start<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>		<span class="token keyword">let</span> sum<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">2</span><span class="token operator">||</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>			<span class="token keyword">return</span> <span class="token function">g</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">g</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"递归数列："</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="39"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>	  <span class="token comment">// 02 应用 根据 id 返回数据对象</span></pre></td></tr><tr><td data-num="41"></td><td><pre>	  <span class="token keyword">var</span> data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>		  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>		  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'家电'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="44"></td><td><pre>		  <span class="token literal-property property">goods</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="46"></td><td><pre>			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'冰箱'</span></pre></td></tr><tr><td data-num="47"></td><td><pre>		  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre>			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'洗衣机'</span></pre></td></tr><tr><td data-num="50"></td><td><pre>		  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">13</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="52"></td><td><pre>			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'服饰'</span></pre></td></tr><tr><td data-num="53"></td><td><pre>		  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="54"></td><td><pre>	  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="55"></td><td><pre>	  <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>	  		  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="57"></td><td><pre>	  		  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'哈哈'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="58"></td><td><pre>	  		  <span class="token literal-property property">goods</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>	  			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="60"></td><td><pre>	  			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'冰箱2'</span></pre></td></tr><tr><td data-num="61"></td><td><pre>	  		  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>	  			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">22</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="63"></td><td><pre>	  			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'洗衣机2'</span></pre></td></tr><tr><td data-num="64"></td><td><pre>	  		  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>	  			  <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="66"></td><td><pre>	  			  <span class="token literal-property property">gname</span><span class="token operator">:</span><span class="token string">'服饰2'</span></pre></td></tr><tr><td data-num="67"></td><td><pre>	  		  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="68"></td><td><pre>	  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="69"></td><td><pre>	 <span class="token keyword">var</span> ooo<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>	  <span class="token keyword">function</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span>id</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>		<span class="token comment">// 遍历数组</span></pre></td></tr><tr><td data-num="72"></td><td><pre>		arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>id<span class="token operator">==</span>id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>				ooo<span class="token operator">=</span>item<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>				<span class="token keyword">return</span> item<span class="token punctuation">;</span>  <span class="token comment">// 赋值给 else if 的递归结果</span></pre></td></tr><tr><td data-num="76"></td><td><pre>				<span class="token comment">// 利用递归，遍历里层数据  如果外面没有的话</span></pre></td></tr><tr><td data-num="77"></td><td><pre>			<span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>goods <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>					ooo<span class="token operator">=</span><span class="token function">getId</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>goods<span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>				<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>		<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>		<span class="token keyword">return</span> ooo<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>	  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"根据id返回对象:"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="84"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>		</pre></td></tr><tr><td data-num="88"></td><td><pre>		<span class="token comment">// 3 - 浅拷贝 拷贝一层  里面的 goods 拷贝的是地址 导致两个地址一样</span></pre></td></tr><tr><td data-num="89"></td><td><pre>		<span class="token keyword">var</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>	   <span class="token comment">// 浅拷贝方法 1</span></pre></td></tr><tr><td data-num="91"></td><td><pre>		<span class="token comment">// for(let key in data)&#123;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>		<span class="token comment">// 	b[key]=data[key];</span></pre></td></tr><tr><td data-num="93"></td><td><pre>		<span class="token comment">// &#125;</span></pre></td></tr><tr><td data-num="94"></td><td><pre>		<span class="token comment">// 浅拷贝方法 2</span></pre></td></tr><tr><td data-num="95"></td><td><pre>		Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"b拷贝"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="97"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  </pre></td></tr><tr><td data-num="98"></td><td><pre>		b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>goods<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>gname<span class="token operator">=</span><span class="token string">"呵呵呵浅拷贝地址相同改名"</span><span class="token punctuation">;</span>  <span class="token comment">// 导致 b 和 data 都改了</span></pre></td></tr><tr><td data-num="99"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="100"></td><td><pre>		</pre></td></tr><tr><td data-num="101"></td><td><pre>		<span class="token comment">//04 深拷贝  将拷贝的数据开辟另外的空间</span></pre></td></tr><tr><td data-num="102"></td><td><pre>		<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="103"></td><td><pre>			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token string">"object"</span><span class="token operator">||</span><span class="token operator">!</span>obj<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="104"></td><td><pre>			<span class="token keyword">let</span> newObj<span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="105"></td><td><pre>			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="106"></td><td><pre>				<span class="token comment">// 拥有 key 值</span></pre></td></tr><tr><td data-num="107"></td><td><pre>			   <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="108"></td><td><pre>				   <span class="token comment">// 进行递归  数组对象就递归 deepClone 再次查询 简单类型直接赋值</span></pre></td></tr><tr><td data-num="109"></td><td><pre>				   newObj<span class="token operator">=</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">"object"</span><span class="token operator">?</span><span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>			   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="111"></td><td><pre>			<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>			<span class="token keyword">return</span> newObj<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="113"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="114"></td><td><pre>		c<span class="token operator">=</span><span class="token function">deepClone</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="115"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"深拷贝"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="116"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="117"></td><td><pre>		c<span class="token punctuation">.</span>goods<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>gname<span class="token operator">=</span><span class="token string">"深拷贝修改"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="118"></td><td><pre>		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 深拷贝没有修改到原先的数据</span></pre></td></tr><tr><td data-num="119"></td><td><pre>		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="120"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="121"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>js常用数组方法</title>
    <url>/2020/11/12/js%E5%B8%B8%E7%94%A8%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="前言"><a class="anchor" href="#前言">#</a> 前言</h1>
<p>老是忘记，还是好记性不如烂笔头！！</p>
<h2 id="es5"><a class="anchor" href="#es5">#</a> ES5</h2>
<h3 id="join-split"><a class="anchor" href="#join-split">#</a> join &amp; split</h3>
<pre><code>const colors = 'green, red, black';
const colorsArr = colors.split(',');
console.log(colorsArr); // [ 'green', ' red', ' black' ]
const colorsStr = colorsArr.join(',');
console.log(colorsStr); // green, red, black
复制代码
</code></pre>
<h3 id="push-pop"><a class="anchor" href="#push-pop">#</a> push &amp; pop</h3>
<pre><code>const colors = [];
colors.push('green', 'red');
console.log(colors); // ['green', 'red']

const item = colors.pop();
console.log(item); // 'red'
console.log(colors); // ['green']
复制代码
</code></pre>
<h3 id="shift-unshift"><a class="anchor" href="#shift-unshift">#</a> shift &amp; unshift</h3>
<pre><code>const colors = ['green', 'red'];
const item = colors.shift();
console.log(item); // 'green'
console.log(colors); // ['red']

colors.unshift('blue', 'grey');
console.log(colors); // ['blue', 'grey', 'red']
复制代码
</code></pre>
<h3 id="reverse-sort"><a class="anchor" href="#reverse-sort">#</a> reverse &amp; sort</h3>
<pre><code>const values = [1, 3, 44, 43, 654, 0];
values.reverse();
console.log(values); // [ 0, 654, 43, 44, 3, 1 ]

values.sort();
console.log(values); // [ 0, 1, 3, 43, 44, 654 ] 首字母开始比较
values.sort((val1, val2) =&gt; val2 - val1);
console.log(values); // [ 654, 44, 43, 3, 1, 0 ]
复制代码
</code></pre>
<h3 id="concat-slice-splice"><a class="anchor" href="#concat-slice-splice">#</a> concat, slice &amp; splice</h3>
<pre><code>const colors = ['red', 'green', 'blue'];
const colors2 = colors.concat('yellow', ['black']);
console.log(colors2); // [ 'red', 'green', 'blue', 'yellow', 'black' ]

const colors3 = colors2.slice(1, 5);
console.log(colors3); // [ 'green', 'blue', 'yellow', 'black' ]
console.log(colors2); // [ 'red', 'green', 'blue', 'yellow', 'black' ]

const remove1 = colors2.splice(0, 1);
console.log(remove1); // [ 'red' ]
console.log(colors2); // [ 'green', 'blue', 'yellow', 'black' ]
const remove2 = colors2.splice(1, 0, 'red', 'pink');
console.log(remove2); // [ ]
console.log(colors2); // [ 'green', 'red', 'pink', 'blue', 'yellow', 'black' ]
复制代码
</code></pre>
<h3 id="indexof-lastindexof"><a class="anchor" href="#indexof-lastindexof">#</a> indexOf &amp; lastIndexOf</h3>
<pre><code>const values= [1, 3, 4, 6, 7, 4, 3, 1];
console.log(values.indexOf(4)); // 2
console.log(values.lastIndexOf(4)); // 5
console.log(values.lastIndexOf(4, 4)); // 2
console.log(values.lastIndexOf(4, 5)); // 5
复制代码
</code></pre>
<h3 id="every-filter-foreach-map-some"><a class="anchor" href="#every-filter-foreach-map-some">#</a> every, filter, forEach, map &amp; some</h3>
<p>every &amp; some</p>
<pre><code>const values = [1, 3, 4, 6, 7, 4, 3, 1];
const everyResult = values.every((item, index, array) =&gt; &#123;
  return item &gt; 2;
&#125;);
console.log(everyResult); // false

const someResult = values.some((item, index, array) =&gt; &#123;
  return item &gt; 2;
&#125;);
console.log(someResult); // true
复制代码
</code></pre>
<p>filter</p>
<pre><code>const values = [1, 3, 4, 6, 7, 4, 3, 1];
const filterResult = values.filter((item, index, array) =&gt; &#123;
  return item &gt; 2;
&#125;);
console.log(filterResult); // [ 3, 4, 6, 7, 4, 3 ]
const obj = [ &#123; num: 3 &#125;, &#123; num: 4 &#125;, &#123; num: 1 &#125;,&#123; num: 5 &#125;,&#123; num: 0 &#125;, &#123; num: 4 &#125;];
const filterObjResult = obj.filter((item, index, array) =&gt; &#123;
  return item.num &gt; 2;
&#125;);
console.log(filterObjResult); // [ &#123; num: 3 &#125;, &#123; num: 4 &#125;, &#123; num: 5 &#125;, &#123; num: 4 &#125; ]
复制代码
</code></pre>
<p>map</p>
<pre><code>const values = [1, 3, 4, 6, 7, 4, 3, 1];
const mapResult = values.map((item, index, array) =&gt; &#123;
  return item * 2;
&#125;);
console.log(mapResult); // [ 2, 6, 8, 12, 14, 8, 6, 2 ]
const obj = [ &#123; num: 3 &#125;, &#123; num: 4 &#125;, &#123; num: 1 &#125;,&#123; num: 5 &#125;,&#123; num: 0 &#125;, &#123; num: 4 &#125;];
const mapObjResult = obj.map((item, index, array) =&gt; &#123;
  return item.num;
&#125;);
console.log(mapObjResult); // [ 3, 4, 1, 5, 0, 4 ]
复制代码
</code></pre>
<p>forEach</p>
<pre><code>const values = [1, 3, 4, 6, 7, 4, 3, 1];
values.forEach((item, index, array) =&gt; &#123;
  array[index] = item * 2;
&#125;);
console.log(values); // [ 2, 6, 8, 12, 14, 8, 6, 2 ]
复制代码
</code></pre>
<h3 id="reduce-reduceright"><a class="anchor" href="#reduce-reduceright">#</a> reduce &amp; reduceRight</h3>
<pre><code>const values = [1, 3, 4, 4, 4, 9];
const sum = values.reduce((prev, cur, index, array) =&gt; &#123;
  return prev + cur;
&#125;);
console.log(sum); // 25

const sumRight = values.reduceRight((prev, cur, index, array) =&gt; &#123;
  return prev + cur;
&#125;);
console.log(sumRight); // 25
复制代码
</code></pre>
<h2 id="es6"><a class="anchor" href="#es6">#</a> ES6</h2>
<h3 id="拓展运算符"><a class="anchor" href="#拓展运算符">#</a> 拓展运算符 <code>...</code></h3>
<pre><code>const colors = ['green', 'red', 'pink'];
const colors1 = ['white', 'grey'];
const colors2 = [...colors, ...colors1];
console.log(colors2); // [ 'green', 'red', 'pink', 'white', 'grey' ]
复制代码
</code></pre>
<h3 id="arrayfrom-arrayof"><a class="anchor" href="#arrayfrom-arrayof">#</a> Array.from() &amp; Array.of()</h3>
<pre><code>const obj = &#123;
  '0': '123',
  '1': '456',
  '2': 'c',
  length: 4
&#125;

const arr = Array.from(obj);
console.log(arr); // [ '123', '456', 'c', undefined ]
const values = [1, 1, 3, 5];
const setValue = new Set(values);
const newArr = Array.from(setValue); // 也可以直接[...new Set(values)]
console.log(newArr); // [ 1, 3, 5 ]
const newArr2 = Array.from(newArr, x =&gt; x * 2);
console.log(newArr2); // [ 2, 6, 10 ]

console.log(Array.of(undefined, 1, null)); // [ undefined, 1, null ]
复制代码
</code></pre>
<h3 id="copywithintarget-start-0-end-thislength"><a class="anchor" href="#copywithintarget-start-0-end-thislength">#</a> copyWithin(target, start = 0, end = this.length)</h3>
<p>有效时应 start &gt; end</p>
<pre><code>const arr = [1, 3, 4, 4, 5, 8, 10, 1, 0].copyWithin(0, 3, 4);
console.log(arr); // [ 4, 3, 4, 4, 5, 8, 10, 1, 0 ]
const arr = [1, 3, 4, 4, 5, 8, 10, 1, 0].copyWithin(0, 3, 8);
console.log(arr1); // [ 4, 5, 8, 10, 1, 8, 10, 1, 0 ]
复制代码
</code></pre>
<h3 id="fill"><a class="anchor" href="#fill">#</a> fill</h3>
<pre><code>const colors = ['green', 'red', 'pink'];
const colors1 = colors.fill('white');
console.log(colors1); // [ 'white', 'white', 'white' ] 
复制代码
</code></pre>
<h3 id="find-findindex"><a class="anchor" href="#find-findindex">#</a> find &amp; findIndex</h3>
<pre><code>const values = [1, 3, 4, 5, 6, NaN];
const findResult = values.find(num =&gt; num &gt; 4 ); // 找不到为undefined
console.log(findResult); // 5
const findIndexResult = values.findIndex(num =&gt; num &gt; 4 ); // 找不到为-1
console.log(findIndexResult); // 3
复制代码
</code></pre>
<h3 id="entries-keys-values"><a class="anchor" href="#entries-keys-values">#</a> entries(), keys() &amp; values()</h3>
<pre><code>const colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;];
for (const index of colors.keys()) &#123;
  console.log(index); // 0 1 2
&#125;

for (const ele of colors.values()) &#123;
  console.log(ele); // red green blue
&#125;
for (const [index, ele] of colors.entries()) &#123;
  console.log(index, ele);
&#125;
// 0 red
// 1 green
// 2 blue
复制代码
</code></pre>
<h2 id="es7"><a class="anchor" href="#es7">#</a> ES7</h2>
<h3 id="includes"><a class="anchor" href="#includes">#</a> includes</h3>
<p>第二个参数是搜索的起始位置</p>
<pre><code>const values = [1, 3, 4, 5, 6, NaN];
console.log(values.includes(NaN)); // true
console.log(values.includes(4, 3)); // false
复制代码
</code></pre>
<h2 id="es10"><a class="anchor" href="#es10">#</a> ES10</h2>
<h3 id="flat-flatmap"><a class="anchor" href="#flat-flatmap">#</a> flat &amp; flatMap</h3>
<pre><code>const values = [1, 2, [3, 4]].flat();
console.log(values); // [1, 2, 3, 4]
const valuesDeep = [1, [2, [3]]];
console.log(valuesDeep.flat(Infinity)); // [1, 2, 3]
</code></pre>
]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>数组</tag>
      </tags>
  </entry>
</search>
